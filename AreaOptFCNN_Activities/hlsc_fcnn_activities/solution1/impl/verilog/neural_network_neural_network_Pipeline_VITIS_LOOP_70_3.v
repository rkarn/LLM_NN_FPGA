// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_70_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln75,
        sext_ln75_1,
        sext_ln75_2,
        sext_ln75_3,
        sext_ln75_4,
        sext_ln75_5,
        sext_ln75_6,
        sext_ln75_7,
        sext_ln75_8,
        sext_ln75_9,
        sext_ln75_10,
        sext_ln75_11,
        sext_ln75_12,
        sext_ln75_13,
        sext_ln75_14,
        sext_ln75_15,
        sext_ln75_16,
        sext_ln75_17,
        sext_ln75_18,
        sext_ln75_19,
        layer2_output_4_out,
        layer2_output_4_out_ap_vld,
        layer2_output_3_out,
        layer2_output_3_out_ap_vld,
        layer2_output_2_out,
        layer2_output_2_out_ap_vld,
        layer2_output_1_out,
        layer2_output_1_out_ap_vld,
        layer2_output_out,
        layer2_output_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sext_ln75;
input  [15:0] sext_ln75_1;
input  [15:0] sext_ln75_2;
input  [15:0] sext_ln75_3;
input  [15:0] sext_ln75_4;
input  [15:0] sext_ln75_5;
input  [15:0] sext_ln75_6;
input  [15:0] sext_ln75_7;
input  [15:0] sext_ln75_8;
input  [15:0] sext_ln75_9;
input  [15:0] sext_ln75_10;
input  [15:0] sext_ln75_11;
input  [15:0] sext_ln75_12;
input  [15:0] sext_ln75_13;
input  [15:0] sext_ln75_14;
input  [15:0] sext_ln75_15;
input  [15:0] sext_ln75_16;
input  [15:0] sext_ln75_17;
input  [15:0] sext_ln75_18;
input  [15:0] sext_ln75_19;
output  [15:0] layer2_output_4_out;
output   layer2_output_4_out_ap_vld;
output  [15:0] layer2_output_3_out;
output   layer2_output_3_out_ap_vld;
output  [15:0] layer2_output_2_out;
output   layer2_output_2_out_ap_vld;
output  [15:0] layer2_output_1_out;
output   layer2_output_1_out_ap_vld;
output  [15:0] layer2_output_out;
output   layer2_output_out_ap_vld;

reg ap_idle;
reg layer2_output_4_out_ap_vld;
reg layer2_output_3_out_ap_vld;
reg layer2_output_2_out_ap_vld;
reg layer2_output_1_out_ap_vld;
reg layer2_output_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln70_fu_674_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] layer2_weights_0_address0;
reg    layer2_weights_0_ce0;
wire   [10:0] layer2_weights_0_q0;
wire   [2:0] layer2_weights_1_address0;
reg    layer2_weights_1_ce0;
wire  signed [10:0] layer2_weights_1_q0;
wire   [2:0] layer2_weights_2_address0;
reg    layer2_weights_2_ce0;
wire  signed [10:0] layer2_weights_2_q0;
wire   [2:0] layer2_weights_3_address0;
reg    layer2_weights_3_ce0;
wire  signed [10:0] layer2_weights_3_q0;
wire   [2:0] layer2_weights_4_address0;
reg    layer2_weights_4_ce0;
wire  signed [9:0] layer2_weights_4_q0;
wire   [2:0] layer2_weights_5_address0;
reg    layer2_weights_5_ce0;
wire  signed [9:0] layer2_weights_5_q0;
wire   [2:0] layer2_weights_6_address0;
reg    layer2_weights_6_ce0;
wire  signed [9:0] layer2_weights_6_q0;
wire   [2:0] layer2_weights_7_address0;
reg    layer2_weights_7_ce0;
wire  signed [9:0] layer2_weights_7_q0;
wire   [2:0] layer2_weights_8_address0;
reg    layer2_weights_8_ce0;
wire  signed [10:0] layer2_weights_8_q0;
wire   [2:0] layer2_weights_9_address0;
reg    layer2_weights_9_ce0;
wire  signed [10:0] layer2_weights_9_q0;
wire   [2:0] layer2_weights_10_address0;
reg    layer2_weights_10_ce0;
wire  signed [10:0] layer2_weights_10_q0;
wire   [2:0] layer2_weights_11_address0;
reg    layer2_weights_11_ce0;
wire  signed [9:0] layer2_weights_11_q0;
wire   [2:0] layer2_weights_12_address0;
reg    layer2_weights_12_ce0;
wire  signed [11:0] layer2_weights_12_q0;
wire   [2:0] layer2_weights_13_address0;
reg    layer2_weights_13_ce0;
wire  signed [10:0] layer2_weights_13_q0;
wire   [2:0] layer2_weights_14_address0;
reg    layer2_weights_14_ce0;
wire  signed [10:0] layer2_weights_14_q0;
wire   [2:0] layer2_weights_15_address0;
reg    layer2_weights_15_ce0;
wire   [9:0] layer2_weights_15_q0;
wire   [2:0] layer2_weights_16_address0;
reg    layer2_weights_16_ce0;
wire   [10:0] layer2_weights_16_q0;
wire   [2:0] layer2_weights_17_address0;
reg    layer2_weights_17_ce0;
wire   [10:0] layer2_weights_17_q0;
wire   [2:0] layer2_weights_18_address0;
reg    layer2_weights_18_ce0;
wire   [10:0] layer2_weights_18_q0;
wire   [2:0] layer2_weights_19_address0;
reg    layer2_weights_19_ce0;
wire   [10:0] layer2_weights_19_q0;
wire   [2:0] layer2_bias_address0;
reg    layer2_bias_ce0;
wire   [8:0] layer2_bias_q0;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln75_19_cast_fu_586_p1;
reg  signed [23:0] sext_ln75_19_cast_reg_1351;
wire  signed [23:0] sext_ln75_18_cast_fu_590_p1;
reg  signed [23:0] sext_ln75_18_cast_reg_1356;
wire  signed [23:0] sext_ln75_17_cast_fu_594_p1;
reg  signed [23:0] sext_ln75_17_cast_reg_1361;
wire  signed [23:0] sext_ln75_16_cast_fu_598_p1;
reg  signed [23:0] sext_ln75_16_cast_reg_1366;
wire  signed [23:0] sext_ln75_15_cast_fu_602_p1;
reg  signed [23:0] sext_ln75_15_cast_reg_1371;
wire  signed [23:0] sext_ln75_14_cast_fu_606_p1;
reg  signed [23:0] sext_ln75_14_cast_reg_1376;
wire  signed [23:0] sext_ln75_13_cast_fu_610_p1;
reg  signed [23:0] sext_ln75_13_cast_reg_1381;
wire  signed [23:0] sext_ln75_12_cast_fu_614_p1;
reg  signed [23:0] sext_ln75_12_cast_reg_1386;
wire  signed [23:0] sext_ln75_11_cast_fu_618_p1;
reg  signed [23:0] sext_ln75_11_cast_reg_1391;
wire  signed [23:0] sext_ln75_10_cast_fu_622_p1;
reg  signed [23:0] sext_ln75_10_cast_reg_1396;
wire  signed [23:0] sext_ln75_9_cast_fu_626_p1;
reg  signed [23:0] sext_ln75_9_cast_reg_1401;
wire  signed [23:0] sext_ln75_8_cast_fu_630_p1;
reg  signed [23:0] sext_ln75_8_cast_reg_1406;
wire  signed [23:0] sext_ln75_7_cast_fu_634_p1;
reg  signed [23:0] sext_ln75_7_cast_reg_1411;
wire  signed [23:0] sext_ln75_6_cast_fu_638_p1;
reg  signed [23:0] sext_ln75_6_cast_reg_1416;
wire  signed [23:0] sext_ln75_5_cast_fu_642_p1;
reg  signed [23:0] sext_ln75_5_cast_reg_1421;
wire  signed [23:0] sext_ln75_4_cast_fu_646_p1;
reg  signed [23:0] sext_ln75_4_cast_reg_1426;
wire  signed [23:0] sext_ln75_3_cast_fu_650_p1;
reg  signed [23:0] sext_ln75_3_cast_reg_1431;
wire  signed [23:0] sext_ln75_2_cast_fu_654_p1;
reg  signed [23:0] sext_ln75_2_cast_reg_1436;
wire  signed [23:0] sext_ln75_1_cast_fu_658_p1;
reg  signed [23:0] sext_ln75_1_cast_reg_1441;
wire  signed [23:0] sext_ln75_cast_fu_662_p1;
reg  signed [23:0] sext_ln75_cast_reg_1446;
reg   [2:0] i_1_reg_1451;
reg   [2:0] i_1_reg_1451_pp0_iter1_reg;
reg   [2:0] i_1_reg_1451_pp0_iter2_reg;
reg   [2:0] i_1_reg_1451_pp0_iter3_reg;
reg   [2:0] i_1_reg_1451_pp0_iter4_reg;
reg   [2:0] i_1_reg_1451_pp0_iter5_reg;
reg   [2:0] i_1_reg_1451_pp0_iter6_reg;
reg   [2:0] i_1_reg_1451_pp0_iter7_reg;
reg   [2:0] i_1_reg_1451_pp0_iter8_reg;
reg   [2:0] i_1_reg_1451_pp0_iter9_reg;
reg   [2:0] i_1_reg_1451_pp0_iter10_reg;
reg   [2:0] i_1_reg_1451_pp0_iter11_reg;
reg   [2:0] i_1_reg_1451_pp0_iter12_reg;
reg   [2:0] i_1_reg_1451_pp0_iter13_reg;
reg   [2:0] i_1_reg_1451_pp0_iter14_reg;
reg   [2:0] i_1_reg_1451_pp0_iter15_reg;
reg   [2:0] i_1_reg_1451_pp0_iter16_reg;
reg   [2:0] i_1_reg_1451_pp0_iter17_reg;
reg   [2:0] i_1_reg_1451_pp0_iter18_reg;
reg   [2:0] i_1_reg_1451_pp0_iter19_reg;
reg   [2:0] i_1_reg_1451_pp0_iter20_reg;
reg   [2:0] i_1_reg_1451_pp0_iter21_reg;
reg   [0:0] icmp_ln70_reg_1455;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter1_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter2_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter3_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter4_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter5_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter6_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter7_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter8_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter9_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter10_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter11_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter12_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter13_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter14_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter15_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter16_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter17_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter18_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter19_reg;
reg   [0:0] icmp_ln70_reg_1455_pp0_iter20_reg;
wire   [63:0] zext_ln70_fu_686_p1;
reg   [63:0] zext_ln70_reg_1459;
reg   [63:0] zext_ln70_reg_1459_pp0_iter1_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter2_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter3_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter4_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter5_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter6_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter7_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter8_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter9_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter10_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter11_reg;
reg   [63:0] zext_ln70_reg_1459_pp0_iter12_reg;
reg  signed [10:0] layer2_weights_0_load_reg_1492;
reg   [15:0] tmp_s_reg_1507;
reg  signed [9:0] layer2_weights_15_load_reg_1727;
reg   [10:0] layer2_weights_16_load_reg_1732;
reg  signed [10:0] layer2_weights_16_load_reg_1732_pp0_iter15_reg;
reg   [10:0] layer2_weights_17_load_reg_1737;
reg   [10:0] layer2_weights_17_load_reg_1737_pp0_iter15_reg;
reg  signed [10:0] layer2_weights_17_load_reg_1737_pp0_iter16_reg;
reg   [10:0] layer2_weights_18_load_reg_1742;
reg   [10:0] layer2_weights_18_load_reg_1742_pp0_iter15_reg;
reg   [10:0] layer2_weights_18_load_reg_1742_pp0_iter16_reg;
reg  signed [10:0] layer2_weights_18_load_reg_1742_pp0_iter17_reg;
reg   [10:0] layer2_weights_19_load_reg_1747;
reg   [10:0] layer2_weights_19_load_reg_1747_pp0_iter15_reg;
reg   [10:0] layer2_weights_19_load_reg_1747_pp0_iter16_reg;
reg   [10:0] layer2_weights_19_load_reg_1747_pp0_iter17_reg;
reg  signed [10:0] layer2_weights_19_load_reg_1747_pp0_iter18_reg;
reg   [8:0] layer2_bias_load_reg_1752;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter15_reg;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter16_reg;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter17_reg;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter18_reg;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter19_reg;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter20_reg;
reg   [8:0] layer2_bias_load_reg_1752_pp0_iter21_reg;
wire    ap_block_pp0_stage0;
reg   [2:0] i_fu_134;
wire   [2:0] add_ln70_fu_680_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_1;
reg   [15:0] layer2_output_fu_138;
wire   [15:0] layer2_output_6_fu_1111_p2;
reg   [15:0] layer2_output_1_fu_142;
reg   [15:0] layer2_output_2_fu_146;
reg   [15:0] layer2_output_3_fu_150;
reg   [15:0] layer2_output_4_fu_154;
wire    ap_block_pp0_stage0_01001;
wire  signed [15:0] mul_ln75_fu_704_p1;
wire   [23:0] mul_ln75_fu_704_p2;
wire  signed [23:0] tmp_1_fu_734_p1;
wire   [23:0] grp_fu_1162_p3;
wire   [15:0] tmp_1_fu_734_p4;
wire  signed [23:0] tmp_2_fu_755_p1;
wire   [23:0] grp_fu_1170_p3;
wire   [15:0] tmp_2_fu_755_p4;
wire  signed [23:0] tmp_3_fu_776_p1;
wire   [23:0] grp_fu_1178_p3;
wire   [15:0] tmp_3_fu_776_p4;
wire  signed [23:0] tmp_4_fu_797_p1;
wire   [23:0] grp_fu_1186_p3;
wire   [15:0] tmp_4_fu_797_p4;
wire  signed [23:0] tmp_5_fu_818_p1;
wire   [23:0] grp_fu_1194_p3;
wire   [15:0] tmp_5_fu_818_p4;
wire  signed [23:0] tmp_6_fu_839_p1;
wire   [23:0] grp_fu_1202_p3;
wire   [15:0] tmp_6_fu_839_p4;
wire  signed [23:0] tmp_7_fu_860_p1;
wire   [23:0] grp_fu_1210_p3;
wire   [15:0] tmp_7_fu_860_p4;
wire  signed [23:0] tmp_8_fu_881_p1;
wire   [23:0] grp_fu_1218_p3;
wire   [15:0] tmp_8_fu_881_p4;
wire  signed [23:0] tmp_9_fu_902_p1;
wire   [23:0] grp_fu_1226_p3;
wire   [15:0] tmp_9_fu_902_p4;
wire  signed [23:0] tmp_10_fu_923_p1;
wire   [23:0] grp_fu_1234_p3;
wire   [15:0] tmp_10_fu_923_p4;
wire  signed [23:0] tmp_11_fu_944_p1;
wire   [23:0] grp_fu_1242_p3;
wire   [15:0] tmp_11_fu_944_p4;
wire  signed [23:0] tmp_12_fu_965_p1;
wire   [23:0] grp_fu_1250_p3;
wire   [15:0] tmp_12_fu_965_p4;
wire  signed [23:0] tmp_13_fu_985_p1;
wire   [23:0] grp_fu_1258_p3;
wire   [15:0] tmp_13_fu_985_p4;
wire  signed [23:0] tmp_14_fu_1005_p1;
wire   [23:0] grp_fu_1266_p3;
wire   [15:0] tmp_14_fu_1005_p4;
wire  signed [23:0] tmp_15_fu_1025_p1;
wire   [23:0] grp_fu_1274_p3;
wire   [15:0] tmp_15_fu_1025_p4;
wire  signed [23:0] tmp_16_fu_1045_p1;
wire   [23:0] grp_fu_1282_p3;
wire   [15:0] tmp_16_fu_1045_p4;
wire  signed [23:0] tmp_17_fu_1065_p1;
wire   [23:0] grp_fu_1290_p3;
wire   [15:0] tmp_17_fu_1065_p4;
wire  signed [23:0] tmp_18_fu_1082_p1;
wire   [23:0] grp_fu_1298_p3;
wire   [15:0] tmp_18_fu_1082_p4;
wire  signed [23:0] sum_fu_1099_p1;
wire   [23:0] grp_fu_1306_p3;
wire  signed [15:0] sext_ln77_fu_1108_p1;
wire   [15:0] sum_fu_1099_p4;
wire  signed [15:0] grp_fu_1162_p1;
wire   [23:0] grp_fu_1162_p2;
wire  signed [15:0] grp_fu_1170_p1;
wire   [23:0] grp_fu_1170_p2;
wire  signed [15:0] grp_fu_1178_p1;
wire   [23:0] grp_fu_1178_p2;
wire  signed [15:0] grp_fu_1186_p1;
wire   [23:0] grp_fu_1186_p2;
wire  signed [15:0] grp_fu_1194_p1;
wire   [23:0] grp_fu_1194_p2;
wire  signed [15:0] grp_fu_1202_p1;
wire   [23:0] grp_fu_1202_p2;
wire  signed [15:0] grp_fu_1210_p1;
wire   [23:0] grp_fu_1210_p2;
wire  signed [15:0] grp_fu_1218_p1;
wire   [23:0] grp_fu_1218_p2;
wire  signed [15:0] grp_fu_1226_p1;
wire   [23:0] grp_fu_1226_p2;
wire  signed [15:0] grp_fu_1234_p1;
wire   [23:0] grp_fu_1234_p2;
wire  signed [15:0] grp_fu_1242_p1;
wire   [23:0] grp_fu_1242_p2;
wire  signed [15:0] grp_fu_1250_p1;
wire   [23:0] grp_fu_1250_p2;
wire  signed [15:0] grp_fu_1258_p1;
wire   [23:0] grp_fu_1258_p2;
wire  signed [15:0] grp_fu_1266_p1;
wire   [23:0] grp_fu_1266_p2;
wire  signed [15:0] grp_fu_1274_p1;
wire   [23:0] grp_fu_1274_p2;
wire  signed [15:0] grp_fu_1282_p1;
wire   [23:0] grp_fu_1282_p2;
wire  signed [15:0] grp_fu_1290_p1;
wire   [23:0] grp_fu_1290_p2;
wire  signed [15:0] grp_fu_1298_p1;
wire   [23:0] grp_fu_1298_p2;
wire  signed [15:0] grp_fu_1306_p1;
wire   [23:0] grp_fu_1306_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_0_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_0_address0),
    .ce0(layer2_weights_0_ce0),
    .q0(layer2_weights_0_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_1_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_1_address0),
    .ce0(layer2_weights_1_ce0),
    .q0(layer2_weights_1_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_2_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_2_address0),
    .ce0(layer2_weights_2_ce0),
    .q0(layer2_weights_2_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_3_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_3_address0),
    .ce0(layer2_weights_3_ce0),
    .q0(layer2_weights_3_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_4_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_4_address0),
    .ce0(layer2_weights_4_ce0),
    .q0(layer2_weights_4_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_5_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_5_address0),
    .ce0(layer2_weights_5_ce0),
    .q0(layer2_weights_5_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_6_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_6_address0),
    .ce0(layer2_weights_6_ce0),
    .q0(layer2_weights_6_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_7_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_7_address0),
    .ce0(layer2_weights_7_ce0),
    .q0(layer2_weights_7_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_8_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_8_address0),
    .ce0(layer2_weights_8_ce0),
    .q0(layer2_weights_8_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_9_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_9_address0),
    .ce0(layer2_weights_9_ce0),
    .q0(layer2_weights_9_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_10_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_10_address0),
    .ce0(layer2_weights_10_ce0),
    .q0(layer2_weights_10_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_11_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_11_address0),
    .ce0(layer2_weights_11_ce0),
    .q0(layer2_weights_11_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_12_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_12_address0),
    .ce0(layer2_weights_12_ce0),
    .q0(layer2_weights_12_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_13_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_13_address0),
    .ce0(layer2_weights_13_ce0),
    .q0(layer2_weights_13_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_14_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_14_address0),
    .ce0(layer2_weights_14_ce0),
    .q0(layer2_weights_14_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_15_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_15_address0),
    .ce0(layer2_weights_15_ce0),
    .q0(layer2_weights_15_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_16_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_16_address0),
    .ce0(layer2_weights_16_ce0),
    .q0(layer2_weights_16_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_17_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_17_address0),
    .ce0(layer2_weights_17_ce0),
    .q0(layer2_weights_17_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_18_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_18_address0),
    .ce0(layer2_weights_18_ce0),
    .q0(layer2_weights_18_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_19_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_weights_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_19_address0),
    .ce0(layer2_weights_19_ce0),
    .q0(layer2_weights_19_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_bias_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_bias_address0),
    .ce0(layer2_bias_ce0),
    .q0(layer2_bias_q0)
);

neural_network_mul_11s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_11s_16s_24_1_1_U81(
    .din0(layer2_weights_0_load_reg_1492),
    .din1(mul_ln75_fu_704_p1),
    .dout(mul_ln75_fu_704_p2)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_1_q0),
    .din1(grp_fu_1162_p1),
    .din2(grp_fu_1162_p2),
    .ce(1'b1),
    .dout(grp_fu_1162_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_2_q0),
    .din1(grp_fu_1170_p1),
    .din2(grp_fu_1170_p2),
    .ce(1'b1),
    .dout(grp_fu_1170_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_3_q0),
    .din1(grp_fu_1178_p1),
    .din2(grp_fu_1178_p2),
    .ce(1'b1),
    .dout(grp_fu_1178_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_4_q0),
    .din1(grp_fu_1186_p1),
    .din2(grp_fu_1186_p2),
    .ce(1'b1),
    .dout(grp_fu_1186_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_5_q0),
    .din1(grp_fu_1194_p1),
    .din2(grp_fu_1194_p2),
    .ce(1'b1),
    .dout(grp_fu_1194_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_6_q0),
    .din1(grp_fu_1202_p1),
    .din2(grp_fu_1202_p2),
    .ce(1'b1),
    .dout(grp_fu_1202_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_7_q0),
    .din1(grp_fu_1210_p1),
    .din2(grp_fu_1210_p2),
    .ce(1'b1),
    .dout(grp_fu_1210_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_8_q0),
    .din1(grp_fu_1218_p1),
    .din2(grp_fu_1218_p2),
    .ce(1'b1),
    .dout(grp_fu_1218_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_9_q0),
    .din1(grp_fu_1226_p1),
    .din2(grp_fu_1226_p2),
    .ce(1'b1),
    .dout(grp_fu_1226_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_10_q0),
    .din1(grp_fu_1234_p1),
    .din2(grp_fu_1234_p2),
    .ce(1'b1),
    .dout(grp_fu_1234_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_11_q0),
    .din1(grp_fu_1242_p1),
    .din2(grp_fu_1242_p2),
    .ce(1'b1),
    .dout(grp_fu_1242_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_12_q0),
    .din1(grp_fu_1250_p1),
    .din2(grp_fu_1250_p2),
    .ce(1'b1),
    .dout(grp_fu_1250_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_13_q0),
    .din1(grp_fu_1258_p1),
    .din2(grp_fu_1258_p2),
    .ce(1'b1),
    .dout(grp_fu_1258_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_14_q0),
    .din1(grp_fu_1266_p1),
    .din2(grp_fu_1266_p2),
    .ce(1'b1),
    .dout(grp_fu_1266_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_15_load_reg_1727),
    .din1(grp_fu_1274_p1),
    .din2(grp_fu_1274_p2),
    .ce(1'b1),
    .dout(grp_fu_1274_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_16_load_reg_1732_pp0_iter15_reg),
    .din1(grp_fu_1282_p1),
    .din2(grp_fu_1282_p2),
    .ce(1'b1),
    .dout(grp_fu_1282_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_17_load_reg_1737_pp0_iter16_reg),
    .din1(grp_fu_1290_p1),
    .din2(grp_fu_1290_p2),
    .ce(1'b1),
    .dout(grp_fu_1290_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_18_load_reg_1742_pp0_iter17_reg),
    .din1(grp_fu_1298_p1),
    .din2(grp_fu_1298_p2),
    .ce(1'b1),
    .dout(grp_fu_1298_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_19_load_reg_1747_pp0_iter18_reg),
    .din1(grp_fu_1306_p1),
    .din2(grp_fu_1306_p2),
    .ce(1'b1),
    .dout(grp_fu_1306_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter21_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln70_fu_674_p2 == 1'd0))) begin
            i_fu_134 <= add_ln70_fu_680_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_134 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_1_reg_1451_pp0_iter10_reg <= i_1_reg_1451_pp0_iter9_reg;
        i_1_reg_1451_pp0_iter11_reg <= i_1_reg_1451_pp0_iter10_reg;
        i_1_reg_1451_pp0_iter12_reg <= i_1_reg_1451_pp0_iter11_reg;
        i_1_reg_1451_pp0_iter13_reg <= i_1_reg_1451_pp0_iter12_reg;
        i_1_reg_1451_pp0_iter14_reg <= i_1_reg_1451_pp0_iter13_reg;
        i_1_reg_1451_pp0_iter15_reg <= i_1_reg_1451_pp0_iter14_reg;
        i_1_reg_1451_pp0_iter16_reg <= i_1_reg_1451_pp0_iter15_reg;
        i_1_reg_1451_pp0_iter17_reg <= i_1_reg_1451_pp0_iter16_reg;
        i_1_reg_1451_pp0_iter18_reg <= i_1_reg_1451_pp0_iter17_reg;
        i_1_reg_1451_pp0_iter19_reg <= i_1_reg_1451_pp0_iter18_reg;
        i_1_reg_1451_pp0_iter20_reg <= i_1_reg_1451_pp0_iter19_reg;
        i_1_reg_1451_pp0_iter21_reg <= i_1_reg_1451_pp0_iter20_reg;
        i_1_reg_1451_pp0_iter2_reg <= i_1_reg_1451_pp0_iter1_reg;
        i_1_reg_1451_pp0_iter3_reg <= i_1_reg_1451_pp0_iter2_reg;
        i_1_reg_1451_pp0_iter4_reg <= i_1_reg_1451_pp0_iter3_reg;
        i_1_reg_1451_pp0_iter5_reg <= i_1_reg_1451_pp0_iter4_reg;
        i_1_reg_1451_pp0_iter6_reg <= i_1_reg_1451_pp0_iter5_reg;
        i_1_reg_1451_pp0_iter7_reg <= i_1_reg_1451_pp0_iter6_reg;
        i_1_reg_1451_pp0_iter8_reg <= i_1_reg_1451_pp0_iter7_reg;
        i_1_reg_1451_pp0_iter9_reg <= i_1_reg_1451_pp0_iter8_reg;
        icmp_ln70_reg_1455_pp0_iter10_reg <= icmp_ln70_reg_1455_pp0_iter9_reg;
        icmp_ln70_reg_1455_pp0_iter11_reg <= icmp_ln70_reg_1455_pp0_iter10_reg;
        icmp_ln70_reg_1455_pp0_iter12_reg <= icmp_ln70_reg_1455_pp0_iter11_reg;
        icmp_ln70_reg_1455_pp0_iter13_reg <= icmp_ln70_reg_1455_pp0_iter12_reg;
        icmp_ln70_reg_1455_pp0_iter14_reg <= icmp_ln70_reg_1455_pp0_iter13_reg;
        icmp_ln70_reg_1455_pp0_iter15_reg <= icmp_ln70_reg_1455_pp0_iter14_reg;
        icmp_ln70_reg_1455_pp0_iter16_reg <= icmp_ln70_reg_1455_pp0_iter15_reg;
        icmp_ln70_reg_1455_pp0_iter17_reg <= icmp_ln70_reg_1455_pp0_iter16_reg;
        icmp_ln70_reg_1455_pp0_iter18_reg <= icmp_ln70_reg_1455_pp0_iter17_reg;
        icmp_ln70_reg_1455_pp0_iter19_reg <= icmp_ln70_reg_1455_pp0_iter18_reg;
        icmp_ln70_reg_1455_pp0_iter20_reg <= icmp_ln70_reg_1455_pp0_iter19_reg;
        icmp_ln70_reg_1455_pp0_iter2_reg <= icmp_ln70_reg_1455_pp0_iter1_reg;
        icmp_ln70_reg_1455_pp0_iter3_reg <= icmp_ln70_reg_1455_pp0_iter2_reg;
        icmp_ln70_reg_1455_pp0_iter4_reg <= icmp_ln70_reg_1455_pp0_iter3_reg;
        icmp_ln70_reg_1455_pp0_iter5_reg <= icmp_ln70_reg_1455_pp0_iter4_reg;
        icmp_ln70_reg_1455_pp0_iter6_reg <= icmp_ln70_reg_1455_pp0_iter5_reg;
        icmp_ln70_reg_1455_pp0_iter7_reg <= icmp_ln70_reg_1455_pp0_iter6_reg;
        icmp_ln70_reg_1455_pp0_iter8_reg <= icmp_ln70_reg_1455_pp0_iter7_reg;
        icmp_ln70_reg_1455_pp0_iter9_reg <= icmp_ln70_reg_1455_pp0_iter8_reg;
        layer2_bias_load_reg_1752 <= layer2_bias_q0;
        layer2_bias_load_reg_1752_pp0_iter15_reg <= layer2_bias_load_reg_1752;
        layer2_bias_load_reg_1752_pp0_iter16_reg <= layer2_bias_load_reg_1752_pp0_iter15_reg;
        layer2_bias_load_reg_1752_pp0_iter17_reg <= layer2_bias_load_reg_1752_pp0_iter16_reg;
        layer2_bias_load_reg_1752_pp0_iter18_reg <= layer2_bias_load_reg_1752_pp0_iter17_reg;
        layer2_bias_load_reg_1752_pp0_iter19_reg <= layer2_bias_load_reg_1752_pp0_iter18_reg;
        layer2_bias_load_reg_1752_pp0_iter20_reg <= layer2_bias_load_reg_1752_pp0_iter19_reg;
        layer2_bias_load_reg_1752_pp0_iter21_reg <= layer2_bias_load_reg_1752_pp0_iter20_reg;
        layer2_weights_15_load_reg_1727 <= layer2_weights_15_q0;
        layer2_weights_16_load_reg_1732 <= layer2_weights_16_q0;
        layer2_weights_16_load_reg_1732_pp0_iter15_reg <= layer2_weights_16_load_reg_1732;
        layer2_weights_17_load_reg_1737 <= layer2_weights_17_q0;
        layer2_weights_17_load_reg_1737_pp0_iter15_reg <= layer2_weights_17_load_reg_1737;
        layer2_weights_17_load_reg_1737_pp0_iter16_reg <= layer2_weights_17_load_reg_1737_pp0_iter15_reg;
        layer2_weights_18_load_reg_1742 <= layer2_weights_18_q0;
        layer2_weights_18_load_reg_1742_pp0_iter15_reg <= layer2_weights_18_load_reg_1742;
        layer2_weights_18_load_reg_1742_pp0_iter16_reg <= layer2_weights_18_load_reg_1742_pp0_iter15_reg;
        layer2_weights_18_load_reg_1742_pp0_iter17_reg <= layer2_weights_18_load_reg_1742_pp0_iter16_reg;
        layer2_weights_19_load_reg_1747 <= layer2_weights_19_q0;
        layer2_weights_19_load_reg_1747_pp0_iter15_reg <= layer2_weights_19_load_reg_1747;
        layer2_weights_19_load_reg_1747_pp0_iter16_reg <= layer2_weights_19_load_reg_1747_pp0_iter15_reg;
        layer2_weights_19_load_reg_1747_pp0_iter17_reg <= layer2_weights_19_load_reg_1747_pp0_iter16_reg;
        layer2_weights_19_load_reg_1747_pp0_iter18_reg <= layer2_weights_19_load_reg_1747_pp0_iter17_reg;
        tmp_s_reg_1507 <= {{mul_ln75_fu_704_p2[23:8]}};
        zext_ln70_reg_1459_pp0_iter10_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter9_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter11_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter10_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter12_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter11_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter2_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter1_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter3_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter2_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter4_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter3_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter5_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter4_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter6_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter5_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter7_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter6_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter8_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter7_reg[2 : 0];
        zext_ln70_reg_1459_pp0_iter9_reg[2 : 0] <= zext_ln70_reg_1459_pp0_iter8_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_1451 <= ap_sig_allocacmp_i_1;
        i_1_reg_1451_pp0_iter1_reg <= i_1_reg_1451;
        icmp_ln70_reg_1455 <= icmp_ln70_fu_674_p2;
        icmp_ln70_reg_1455_pp0_iter1_reg <= icmp_ln70_reg_1455;
        layer2_weights_0_load_reg_1492 <= layer2_weights_0_q0;
        sext_ln75_10_cast_reg_1396 <= sext_ln75_10_cast_fu_622_p1;
        sext_ln75_11_cast_reg_1391 <= sext_ln75_11_cast_fu_618_p1;
        sext_ln75_12_cast_reg_1386 <= sext_ln75_12_cast_fu_614_p1;
        sext_ln75_13_cast_reg_1381 <= sext_ln75_13_cast_fu_610_p1;
        sext_ln75_14_cast_reg_1376 <= sext_ln75_14_cast_fu_606_p1;
        sext_ln75_15_cast_reg_1371 <= sext_ln75_15_cast_fu_602_p1;
        sext_ln75_16_cast_reg_1366 <= sext_ln75_16_cast_fu_598_p1;
        sext_ln75_17_cast_reg_1361 <= sext_ln75_17_cast_fu_594_p1;
        sext_ln75_18_cast_reg_1356 <= sext_ln75_18_cast_fu_590_p1;
        sext_ln75_19_cast_reg_1351 <= sext_ln75_19_cast_fu_586_p1;
        sext_ln75_1_cast_reg_1441 <= sext_ln75_1_cast_fu_658_p1;
        sext_ln75_2_cast_reg_1436 <= sext_ln75_2_cast_fu_654_p1;
        sext_ln75_3_cast_reg_1431 <= sext_ln75_3_cast_fu_650_p1;
        sext_ln75_4_cast_reg_1426 <= sext_ln75_4_cast_fu_646_p1;
        sext_ln75_5_cast_reg_1421 <= sext_ln75_5_cast_fu_642_p1;
        sext_ln75_6_cast_reg_1416 <= sext_ln75_6_cast_fu_638_p1;
        sext_ln75_7_cast_reg_1411 <= sext_ln75_7_cast_fu_634_p1;
        sext_ln75_8_cast_reg_1406 <= sext_ln75_8_cast_fu_630_p1;
        sext_ln75_9_cast_reg_1401 <= sext_ln75_9_cast_fu_626_p1;
        sext_ln75_cast_reg_1446 <= sext_ln75_cast_fu_662_p1;
        zext_ln70_reg_1459_pp0_iter1_reg[2 : 0] <= zext_ln70_reg_1459[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (i_1_reg_1451_pp0_iter21_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_1_fu_142 <= layer2_output_6_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (i_1_reg_1451_pp0_iter21_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_2_fu_146 <= layer2_output_6_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (i_1_reg_1451_pp0_iter21_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_3_fu_150 <= layer2_output_6_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_1_reg_1451_pp0_iter21_reg == 3'd3) & ~(i_1_reg_1451_pp0_iter21_reg == 3'd2) & ~(i_1_reg_1451_pp0_iter21_reg == 3'd1) & ~(i_1_reg_1451_pp0_iter21_reg == 3'd0) & (ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_4_fu_154 <= layer2_output_6_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (i_1_reg_1451_pp0_iter21_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_fu_138 <= layer2_output_6_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_674_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln70_reg_1459[2 : 0] <= zext_ln70_fu_686_p1[2 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_674_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter21_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_134;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_bias_ce0 = 1'b1;
    end else begin
        layer2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1455_pp0_iter20_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_1_out_ap_vld = 1'b1;
    end else begin
        layer2_output_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1455_pp0_iter20_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_2_out_ap_vld = 1'b1;
    end else begin
        layer2_output_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1455_pp0_iter20_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_3_out_ap_vld = 1'b1;
    end else begin
        layer2_output_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1455_pp0_iter20_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_4_out_ap_vld = 1'b1;
    end else begin
        layer2_output_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1455_pp0_iter20_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_out_ap_vld = 1'b1;
    end else begin
        layer2_output_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_0_ce0 = 1'b1;
    end else begin
        layer2_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_10_ce0 = 1'b1;
    end else begin
        layer2_weights_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_11_ce0 = 1'b1;
    end else begin
        layer2_weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_12_ce0 = 1'b1;
    end else begin
        layer2_weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_13_ce0 = 1'b1;
    end else begin
        layer2_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_14_ce0 = 1'b1;
    end else begin
        layer2_weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_15_ce0 = 1'b1;
    end else begin
        layer2_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_16_ce0 = 1'b1;
    end else begin
        layer2_weights_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_17_ce0 = 1'b1;
    end else begin
        layer2_weights_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_18_ce0 = 1'b1;
    end else begin
        layer2_weights_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_19_ce0 = 1'b1;
    end else begin
        layer2_weights_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_1_ce0 = 1'b1;
    end else begin
        layer2_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_2_ce0 = 1'b1;
    end else begin
        layer2_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_3_ce0 = 1'b1;
    end else begin
        layer2_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_4_ce0 = 1'b1;
    end else begin
        layer2_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_5_ce0 = 1'b1;
    end else begin
        layer2_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_6_ce0 = 1'b1;
    end else begin
        layer2_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_7_ce0 = 1'b1;
    end else begin
        layer2_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_8_ce0 = 1'b1;
    end else begin
        layer2_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_9_ce0 = 1'b1;
    end else begin
        layer2_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln70_fu_680_p2 = (ap_sig_allocacmp_i_1 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_1162_p1 = sext_ln75_1_cast_reg_1441;

assign grp_fu_1162_p2 = {{tmp_s_reg_1507}, {8'd0}};

assign grp_fu_1170_p1 = sext_ln75_2_cast_reg_1436;

assign grp_fu_1170_p2 = {{tmp_1_fu_734_p4}, {8'd0}};

assign grp_fu_1178_p1 = sext_ln75_3_cast_reg_1431;

assign grp_fu_1178_p2 = {{tmp_2_fu_755_p4}, {8'd0}};

assign grp_fu_1186_p1 = sext_ln75_4_cast_reg_1426;

assign grp_fu_1186_p2 = {{tmp_3_fu_776_p4}, {8'd0}};

assign grp_fu_1194_p1 = sext_ln75_5_cast_reg_1421;

assign grp_fu_1194_p2 = {{tmp_4_fu_797_p4}, {8'd0}};

assign grp_fu_1202_p1 = sext_ln75_6_cast_reg_1416;

assign grp_fu_1202_p2 = {{tmp_5_fu_818_p4}, {8'd0}};

assign grp_fu_1210_p1 = sext_ln75_7_cast_reg_1411;

assign grp_fu_1210_p2 = {{tmp_6_fu_839_p4}, {8'd0}};

assign grp_fu_1218_p1 = sext_ln75_8_cast_reg_1406;

assign grp_fu_1218_p2 = {{tmp_7_fu_860_p4}, {8'd0}};

assign grp_fu_1226_p1 = sext_ln75_9_cast_reg_1401;

assign grp_fu_1226_p2 = {{tmp_8_fu_881_p4}, {8'd0}};

assign grp_fu_1234_p1 = sext_ln75_10_cast_reg_1396;

assign grp_fu_1234_p2 = {{tmp_9_fu_902_p4}, {8'd0}};

assign grp_fu_1242_p1 = sext_ln75_11_cast_reg_1391;

assign grp_fu_1242_p2 = {{tmp_10_fu_923_p4}, {8'd0}};

assign grp_fu_1250_p1 = sext_ln75_12_cast_reg_1386;

assign grp_fu_1250_p2 = {{tmp_11_fu_944_p4}, {8'd0}};

assign grp_fu_1258_p1 = sext_ln75_13_cast_reg_1381;

assign grp_fu_1258_p2 = {{tmp_12_fu_965_p4}, {8'd0}};

assign grp_fu_1266_p1 = sext_ln75_14_cast_reg_1376;

assign grp_fu_1266_p2 = {{tmp_13_fu_985_p4}, {8'd0}};

assign grp_fu_1274_p1 = sext_ln75_15_cast_reg_1371;

assign grp_fu_1274_p2 = {{tmp_14_fu_1005_p4}, {8'd0}};

assign grp_fu_1282_p1 = sext_ln75_16_cast_reg_1366;

assign grp_fu_1282_p2 = {{tmp_15_fu_1025_p4}, {8'd0}};

assign grp_fu_1290_p1 = sext_ln75_17_cast_reg_1361;

assign grp_fu_1290_p2 = {{tmp_16_fu_1045_p4}, {8'd0}};

assign grp_fu_1298_p1 = sext_ln75_18_cast_reg_1356;

assign grp_fu_1298_p2 = {{tmp_17_fu_1065_p4}, {8'd0}};

assign grp_fu_1306_p1 = sext_ln75_19_cast_reg_1351;

assign grp_fu_1306_p2 = {{tmp_18_fu_1082_p4}, {8'd0}};

assign icmp_ln70_fu_674_p2 = ((ap_sig_allocacmp_i_1 == 3'd5) ? 1'b1 : 1'b0);

assign layer2_bias_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_output_1_out = layer2_output_1_fu_142;

assign layer2_output_2_out = layer2_output_2_fu_146;

assign layer2_output_3_out = layer2_output_3_fu_150;

assign layer2_output_4_out = layer2_output_4_fu_154;

assign layer2_output_6_fu_1111_p2 = ($signed(sext_ln77_fu_1108_p1) + $signed(sum_fu_1099_p4));

assign layer2_output_out = layer2_output_fu_138;

assign layer2_weights_0_address0 = zext_ln70_fu_686_p1;

assign layer2_weights_10_address0 = zext_ln70_reg_1459_pp0_iter8_reg;

assign layer2_weights_11_address0 = zext_ln70_reg_1459_pp0_iter9_reg;

assign layer2_weights_12_address0 = zext_ln70_reg_1459_pp0_iter10_reg;

assign layer2_weights_13_address0 = zext_ln70_reg_1459_pp0_iter11_reg;

assign layer2_weights_14_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_weights_15_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_weights_16_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_weights_17_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_weights_18_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_weights_19_address0 = zext_ln70_reg_1459_pp0_iter12_reg;

assign layer2_weights_1_address0 = zext_ln70_fu_686_p1;

assign layer2_weights_2_address0 = zext_ln70_reg_1459;

assign layer2_weights_3_address0 = zext_ln70_reg_1459_pp0_iter1_reg;

assign layer2_weights_4_address0 = zext_ln70_reg_1459_pp0_iter2_reg;

assign layer2_weights_5_address0 = zext_ln70_reg_1459_pp0_iter3_reg;

assign layer2_weights_6_address0 = zext_ln70_reg_1459_pp0_iter4_reg;

assign layer2_weights_7_address0 = zext_ln70_reg_1459_pp0_iter5_reg;

assign layer2_weights_8_address0 = zext_ln70_reg_1459_pp0_iter6_reg;

assign layer2_weights_9_address0 = zext_ln70_reg_1459_pp0_iter7_reg;

assign mul_ln75_fu_704_p1 = sext_ln75_cast_reg_1446;

assign sext_ln75_10_cast_fu_622_p1 = $signed(sext_ln75_10);

assign sext_ln75_11_cast_fu_618_p1 = $signed(sext_ln75_11);

assign sext_ln75_12_cast_fu_614_p1 = $signed(sext_ln75_12);

assign sext_ln75_13_cast_fu_610_p1 = $signed(sext_ln75_13);

assign sext_ln75_14_cast_fu_606_p1 = $signed(sext_ln75_14);

assign sext_ln75_15_cast_fu_602_p1 = $signed(sext_ln75_15);

assign sext_ln75_16_cast_fu_598_p1 = $signed(sext_ln75_16);

assign sext_ln75_17_cast_fu_594_p1 = $signed(sext_ln75_17);

assign sext_ln75_18_cast_fu_590_p1 = $signed(sext_ln75_18);

assign sext_ln75_19_cast_fu_586_p1 = $signed(sext_ln75_19);

assign sext_ln75_1_cast_fu_658_p1 = $signed(sext_ln75_1);

assign sext_ln75_2_cast_fu_654_p1 = $signed(sext_ln75_2);

assign sext_ln75_3_cast_fu_650_p1 = $signed(sext_ln75_3);

assign sext_ln75_4_cast_fu_646_p1 = $signed(sext_ln75_4);

assign sext_ln75_5_cast_fu_642_p1 = $signed(sext_ln75_5);

assign sext_ln75_6_cast_fu_638_p1 = $signed(sext_ln75_6);

assign sext_ln75_7_cast_fu_634_p1 = $signed(sext_ln75_7);

assign sext_ln75_8_cast_fu_630_p1 = $signed(sext_ln75_8);

assign sext_ln75_9_cast_fu_626_p1 = $signed(sext_ln75_9);

assign sext_ln75_cast_fu_662_p1 = $signed(sext_ln75);

assign sext_ln77_fu_1108_p1 = $signed(layer2_bias_load_reg_1752_pp0_iter21_reg);

assign sum_fu_1099_p1 = grp_fu_1306_p3;

assign sum_fu_1099_p4 = {{sum_fu_1099_p1[23:8]}};

assign tmp_10_fu_923_p1 = grp_fu_1234_p3;

assign tmp_10_fu_923_p4 = {{tmp_10_fu_923_p1[23:8]}};

assign tmp_11_fu_944_p1 = grp_fu_1242_p3;

assign tmp_11_fu_944_p4 = {{tmp_11_fu_944_p1[23:8]}};

assign tmp_12_fu_965_p1 = grp_fu_1250_p3;

assign tmp_12_fu_965_p4 = {{tmp_12_fu_965_p1[23:8]}};

assign tmp_13_fu_985_p1 = grp_fu_1258_p3;

assign tmp_13_fu_985_p4 = {{tmp_13_fu_985_p1[23:8]}};

assign tmp_14_fu_1005_p1 = grp_fu_1266_p3;

assign tmp_14_fu_1005_p4 = {{tmp_14_fu_1005_p1[23:8]}};

assign tmp_15_fu_1025_p1 = grp_fu_1274_p3;

assign tmp_15_fu_1025_p4 = {{tmp_15_fu_1025_p1[23:8]}};

assign tmp_16_fu_1045_p1 = grp_fu_1282_p3;

assign tmp_16_fu_1045_p4 = {{tmp_16_fu_1045_p1[23:8]}};

assign tmp_17_fu_1065_p1 = grp_fu_1290_p3;

assign tmp_17_fu_1065_p4 = {{tmp_17_fu_1065_p1[23:8]}};

assign tmp_18_fu_1082_p1 = grp_fu_1298_p3;

assign tmp_18_fu_1082_p4 = {{tmp_18_fu_1082_p1[23:8]}};

assign tmp_1_fu_734_p1 = grp_fu_1162_p3;

assign tmp_1_fu_734_p4 = {{tmp_1_fu_734_p1[23:8]}};

assign tmp_2_fu_755_p1 = grp_fu_1170_p3;

assign tmp_2_fu_755_p4 = {{tmp_2_fu_755_p1[23:8]}};

assign tmp_3_fu_776_p1 = grp_fu_1178_p3;

assign tmp_3_fu_776_p4 = {{tmp_3_fu_776_p1[23:8]}};

assign tmp_4_fu_797_p1 = grp_fu_1186_p3;

assign tmp_4_fu_797_p4 = {{tmp_4_fu_797_p1[23:8]}};

assign tmp_5_fu_818_p1 = grp_fu_1194_p3;

assign tmp_5_fu_818_p4 = {{tmp_5_fu_818_p1[23:8]}};

assign tmp_6_fu_839_p1 = grp_fu_1202_p3;

assign tmp_6_fu_839_p4 = {{tmp_6_fu_839_p1[23:8]}};

assign tmp_7_fu_860_p1 = grp_fu_1210_p3;

assign tmp_7_fu_860_p4 = {{tmp_7_fu_860_p1[23:8]}};

assign tmp_8_fu_881_p1 = grp_fu_1218_p3;

assign tmp_8_fu_881_p4 = {{tmp_8_fu_881_p1[23:8]}};

assign tmp_9_fu_902_p1 = grp_fu_1226_p3;

assign tmp_9_fu_902_p4 = {{tmp_9_fu_902_p1[23:8]}};

assign zext_ln70_fu_686_p1 = ap_sig_allocacmp_i_1;

always @ (posedge ap_clk) begin
    zext_ln70_reg_1459[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter7_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter8_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter9_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter10_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter11_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_1459_pp0_iter12_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_70_3
