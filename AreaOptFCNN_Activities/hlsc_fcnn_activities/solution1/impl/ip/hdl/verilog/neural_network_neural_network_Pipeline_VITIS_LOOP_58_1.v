// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_58_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln63,
        sext_ln63_1,
        sext_ln63_2,
        sext_ln63_3,
        sext_ln63_4,
        sext_ln63_5,
        sext_ln63_6,
        sext_ln63_7,
        sext_ln63_8,
        sext_ln63_9,
        sext_ln63_10,
        sext_ln63_11,
        sext_ln63_12,
        sext_ln63_13,
        sext_ln63_14,
        sext_ln63_15,
        sext_ln63_16,
        sext_ln63_17,
        layer1_output_19_out,
        layer1_output_19_out_ap_vld,
        layer1_output_18_out,
        layer1_output_18_out_ap_vld,
        layer1_output_17_out,
        layer1_output_17_out_ap_vld,
        layer1_output_16_out,
        layer1_output_16_out_ap_vld,
        layer1_output_15_out,
        layer1_output_15_out_ap_vld,
        layer1_output_14_out,
        layer1_output_14_out_ap_vld,
        layer1_output_13_out,
        layer1_output_13_out_ap_vld,
        layer1_output_12_out,
        layer1_output_12_out_ap_vld,
        layer1_output_11_out,
        layer1_output_11_out_ap_vld,
        layer1_output_10_out,
        layer1_output_10_out_ap_vld,
        layer1_output_9_out,
        layer1_output_9_out_ap_vld,
        layer1_output_8_out,
        layer1_output_8_out_ap_vld,
        layer1_output_7_out,
        layer1_output_7_out_ap_vld,
        layer1_output_6_out,
        layer1_output_6_out_ap_vld,
        layer1_output_5_out,
        layer1_output_5_out_ap_vld,
        layer1_output_4_out,
        layer1_output_4_out_ap_vld,
        layer1_output_3_out,
        layer1_output_3_out_ap_vld,
        layer1_output_2_out,
        layer1_output_2_out_ap_vld,
        layer1_output_1_out,
        layer1_output_1_out_ap_vld,
        layer1_output_out,
        layer1_output_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sext_ln63;
input  [15:0] sext_ln63_1;
input  [15:0] sext_ln63_2;
input  [15:0] sext_ln63_3;
input  [15:0] sext_ln63_4;
input  [15:0] sext_ln63_5;
input  [15:0] sext_ln63_6;
input  [15:0] sext_ln63_7;
input  [15:0] sext_ln63_8;
input  [15:0] sext_ln63_9;
input  [15:0] sext_ln63_10;
input  [15:0] sext_ln63_11;
input  [15:0] sext_ln63_12;
input  [15:0] sext_ln63_13;
input  [15:0] sext_ln63_14;
input  [15:0] sext_ln63_15;
input  [15:0] sext_ln63_16;
input  [15:0] sext_ln63_17;
output  [15:0] layer1_output_19_out;
output   layer1_output_19_out_ap_vld;
output  [15:0] layer1_output_18_out;
output   layer1_output_18_out_ap_vld;
output  [15:0] layer1_output_17_out;
output   layer1_output_17_out_ap_vld;
output  [15:0] layer1_output_16_out;
output   layer1_output_16_out_ap_vld;
output  [15:0] layer1_output_15_out;
output   layer1_output_15_out_ap_vld;
output  [15:0] layer1_output_14_out;
output   layer1_output_14_out_ap_vld;
output  [15:0] layer1_output_13_out;
output   layer1_output_13_out_ap_vld;
output  [15:0] layer1_output_12_out;
output   layer1_output_12_out_ap_vld;
output  [15:0] layer1_output_11_out;
output   layer1_output_11_out_ap_vld;
output  [15:0] layer1_output_10_out;
output   layer1_output_10_out_ap_vld;
output  [15:0] layer1_output_9_out;
output   layer1_output_9_out_ap_vld;
output  [15:0] layer1_output_8_out;
output   layer1_output_8_out_ap_vld;
output  [15:0] layer1_output_7_out;
output   layer1_output_7_out_ap_vld;
output  [15:0] layer1_output_6_out;
output   layer1_output_6_out_ap_vld;
output  [15:0] layer1_output_5_out;
output   layer1_output_5_out_ap_vld;
output  [15:0] layer1_output_4_out;
output   layer1_output_4_out_ap_vld;
output  [15:0] layer1_output_3_out;
output   layer1_output_3_out_ap_vld;
output  [15:0] layer1_output_2_out;
output   layer1_output_2_out_ap_vld;
output  [15:0] layer1_output_1_out;
output   layer1_output_1_out_ap_vld;
output  [15:0] layer1_output_out;
output   layer1_output_out_ap_vld;

reg ap_idle;
reg layer1_output_19_out_ap_vld;
reg layer1_output_18_out_ap_vld;
reg layer1_output_17_out_ap_vld;
reg layer1_output_16_out_ap_vld;
reg layer1_output_15_out_ap_vld;
reg layer1_output_14_out_ap_vld;
reg layer1_output_13_out_ap_vld;
reg layer1_output_12_out_ap_vld;
reg layer1_output_11_out_ap_vld;
reg layer1_output_10_out_ap_vld;
reg layer1_output_9_out_ap_vld;
reg layer1_output_8_out_ap_vld;
reg layer1_output_7_out_ap_vld;
reg layer1_output_6_out_ap_vld;
reg layer1_output_5_out_ap_vld;
reg layer1_output_4_out_ap_vld;
reg layer1_output_3_out_ap_vld;
reg layer1_output_2_out_ap_vld;
reg layer1_output_1_out_ap_vld;
reg layer1_output_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln58_fu_853_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [4:0] layer1_weights_0_address0;
reg    layer1_weights_0_ce0;
wire   [9:0] layer1_weights_0_q0;
wire   [4:0] layer1_weights_1_address0;
reg    layer1_weights_1_ce0;
wire  signed [8:0] layer1_weights_1_q0;
wire   [4:0] layer1_weights_2_address0;
reg    layer1_weights_2_ce0;
wire  signed [9:0] layer1_weights_2_q0;
wire   [4:0] layer1_weights_3_address0;
reg    layer1_weights_3_ce0;
wire  signed [8:0] layer1_weights_3_q0;
wire   [4:0] layer1_weights_4_address0;
reg    layer1_weights_4_ce0;
wire  signed [9:0] layer1_weights_4_q0;
wire   [4:0] layer1_weights_5_address0;
reg    layer1_weights_5_ce0;
wire  signed [8:0] layer1_weights_5_q0;
wire   [4:0] layer1_weights_6_address0;
reg    layer1_weights_6_ce0;
wire  signed [9:0] layer1_weights_6_q0;
wire   [4:0] layer1_weights_7_address0;
reg    layer1_weights_7_ce0;
wire  signed [10:0] layer1_weights_7_q0;
wire   [4:0] layer1_weights_8_address0;
reg    layer1_weights_8_ce0;
wire  signed [9:0] layer1_weights_8_q0;
wire   [4:0] layer1_weights_9_address0;
reg    layer1_weights_9_ce0;
wire  signed [8:0] layer1_weights_9_q0;
wire   [4:0] layer1_weights_10_address0;
reg    layer1_weights_10_ce0;
wire  signed [10:0] layer1_weights_10_q0;
wire   [4:0] layer1_weights_11_address0;
reg    layer1_weights_11_ce0;
wire  signed [10:0] layer1_weights_11_q0;
wire   [4:0] layer1_weights_12_address0;
reg    layer1_weights_12_ce0;
wire  signed [10:0] layer1_weights_12_q0;
wire   [4:0] layer1_weights_13_address0;
reg    layer1_weights_13_ce0;
wire   [11:0] layer1_weights_13_q0;
wire   [4:0] layer1_weights_14_address0;
reg    layer1_weights_14_ce0;
wire   [10:0] layer1_weights_14_q0;
wire   [4:0] layer1_weights_15_address0;
reg    layer1_weights_15_ce0;
wire   [9:0] layer1_weights_15_q0;
wire   [4:0] layer1_weights_16_address0;
reg    layer1_weights_16_ce0;
wire   [9:0] layer1_weights_16_q0;
wire   [4:0] layer1_weights_17_address0;
reg    layer1_weights_17_ce0;
wire   [9:0] layer1_weights_17_q0;
wire   [4:0] layer1_bias_address0;
reg    layer1_bias_ce0;
wire   [9:0] layer1_bias_q0;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln63_17_cast_fu_773_p1;
reg  signed [23:0] sext_ln63_17_cast_reg_1732;
wire  signed [23:0] sext_ln63_16_cast_fu_777_p1;
reg  signed [23:0] sext_ln63_16_cast_reg_1737;
wire  signed [23:0] sext_ln63_15_cast_fu_781_p1;
reg  signed [23:0] sext_ln63_15_cast_reg_1742;
wire  signed [23:0] sext_ln63_14_cast_fu_785_p1;
reg  signed [23:0] sext_ln63_14_cast_reg_1747;
wire  signed [23:0] sext_ln63_13_cast_fu_789_p1;
reg  signed [23:0] sext_ln63_13_cast_reg_1752;
wire  signed [23:0] sext_ln63_12_cast_fu_793_p1;
reg  signed [23:0] sext_ln63_12_cast_reg_1757;
wire  signed [23:0] sext_ln63_11_cast_fu_797_p1;
reg  signed [23:0] sext_ln63_11_cast_reg_1762;
wire  signed [23:0] sext_ln63_10_cast_fu_801_p1;
reg  signed [23:0] sext_ln63_10_cast_reg_1767;
wire  signed [23:0] sext_ln63_9_cast_fu_805_p1;
reg  signed [23:0] sext_ln63_9_cast_reg_1772;
wire  signed [23:0] sext_ln63_8_cast_fu_809_p1;
reg  signed [23:0] sext_ln63_8_cast_reg_1777;
wire  signed [23:0] sext_ln63_7_cast_fu_813_p1;
reg  signed [23:0] sext_ln63_7_cast_reg_1782;
wire  signed [23:0] sext_ln63_6_cast_fu_817_p1;
reg  signed [23:0] sext_ln63_6_cast_reg_1787;
wire  signed [23:0] sext_ln63_5_cast_fu_821_p1;
reg  signed [23:0] sext_ln63_5_cast_reg_1792;
wire  signed [23:0] sext_ln63_4_cast_fu_825_p1;
reg  signed [23:0] sext_ln63_4_cast_reg_1797;
wire  signed [23:0] sext_ln63_3_cast_fu_829_p1;
reg  signed [23:0] sext_ln63_3_cast_reg_1802;
wire  signed [23:0] sext_ln63_2_cast_fu_833_p1;
reg  signed [23:0] sext_ln63_2_cast_reg_1807;
wire  signed [23:0] sext_ln63_1_cast_fu_837_p1;
reg  signed [23:0] sext_ln63_1_cast_reg_1812;
wire  signed [23:0] sext_ln63_cast_fu_841_p1;
reg  signed [23:0] sext_ln63_cast_reg_1817;
reg   [4:0] i_2_reg_1822;
reg   [4:0] i_2_reg_1822_pp0_iter1_reg;
reg   [4:0] i_2_reg_1822_pp0_iter2_reg;
reg   [4:0] i_2_reg_1822_pp0_iter3_reg;
reg   [4:0] i_2_reg_1822_pp0_iter4_reg;
reg   [4:0] i_2_reg_1822_pp0_iter5_reg;
reg   [4:0] i_2_reg_1822_pp0_iter6_reg;
reg   [4:0] i_2_reg_1822_pp0_iter7_reg;
reg   [4:0] i_2_reg_1822_pp0_iter8_reg;
reg   [4:0] i_2_reg_1822_pp0_iter9_reg;
reg   [4:0] i_2_reg_1822_pp0_iter10_reg;
reg   [4:0] i_2_reg_1822_pp0_iter11_reg;
reg   [4:0] i_2_reg_1822_pp0_iter12_reg;
reg   [4:0] i_2_reg_1822_pp0_iter13_reg;
reg   [4:0] i_2_reg_1822_pp0_iter14_reg;
reg   [4:0] i_2_reg_1822_pp0_iter15_reg;
reg   [4:0] i_2_reg_1822_pp0_iter16_reg;
reg   [4:0] i_2_reg_1822_pp0_iter17_reg;
reg   [4:0] i_2_reg_1822_pp0_iter18_reg;
reg   [4:0] i_2_reg_1822_pp0_iter19_reg;
reg   [4:0] i_2_reg_1822_pp0_iter20_reg;
reg   [0:0] icmp_ln58_reg_1826;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter1_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter2_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter3_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter4_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter5_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter6_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter7_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter8_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter9_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter10_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter11_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter12_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter13_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter14_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter15_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter16_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter17_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter18_reg;
reg   [0:0] icmp_ln58_reg_1826_pp0_iter19_reg;
wire   [63:0] zext_ln58_fu_865_p1;
reg   [63:0] zext_ln58_reg_1830;
reg   [63:0] zext_ln58_reg_1830_pp0_iter1_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter2_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter3_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter4_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter5_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter6_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter7_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter8_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter9_reg;
reg   [63:0] zext_ln58_reg_1830_pp0_iter10_reg;
reg  signed [9:0] layer1_weights_0_load_reg_1861;
reg   [15:0] tmp_6_reg_1876;
reg  signed [11:0] layer1_weights_13_load_reg_2066;
reg   [10:0] layer1_weights_14_load_reg_2071;
reg  signed [10:0] layer1_weights_14_load_reg_2071_pp0_iter13_reg;
reg   [9:0] layer1_weights_15_load_reg_2076;
reg   [9:0] layer1_weights_15_load_reg_2076_pp0_iter13_reg;
reg  signed [9:0] layer1_weights_15_load_reg_2076_pp0_iter14_reg;
reg   [9:0] layer1_weights_16_load_reg_2081;
reg   [9:0] layer1_weights_16_load_reg_2081_pp0_iter13_reg;
reg   [9:0] layer1_weights_16_load_reg_2081_pp0_iter14_reg;
reg  signed [9:0] layer1_weights_16_load_reg_2081_pp0_iter15_reg;
reg   [9:0] layer1_weights_17_load_reg_2086;
reg   [9:0] layer1_weights_17_load_reg_2086_pp0_iter13_reg;
reg   [9:0] layer1_weights_17_load_reg_2086_pp0_iter14_reg;
reg   [9:0] layer1_weights_17_load_reg_2086_pp0_iter15_reg;
reg  signed [9:0] layer1_weights_17_load_reg_2086_pp0_iter16_reg;
reg  signed [9:0] layer1_bias_load_reg_2091;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter13_reg;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter14_reg;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter15_reg;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter16_reg;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter17_reg;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter18_reg;
reg  signed [9:0] layer1_bias_load_reg_2091_pp0_iter19_reg;
wire   [14:0] add_ln60_fu_1266_p2;
reg   [14:0] add_ln60_reg_2157;
wire   [0:0] icmp_ln14_fu_1272_p2;
reg   [0:0] icmp_ln14_reg_2162;
wire    ap_block_pp0_stage0;
reg   [4:0] i_fu_194;
wire   [4:0] add_ln58_fu_859_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i_2;
reg   [15:0] layer1_output_fu_198;
wire   [15:0] zext_ln66_fu_1284_p1;
reg   [15:0] layer1_output_1_fu_202;
reg   [15:0] layer1_output_2_fu_206;
reg   [15:0] layer1_output_3_fu_210;
reg   [15:0] layer1_output_4_fu_214;
reg   [15:0] layer1_output_5_fu_218;
reg   [15:0] layer1_output_6_fu_222;
reg   [15:0] layer1_output_7_fu_226;
reg   [15:0] layer1_output_8_fu_230;
reg   [15:0] layer1_output_9_fu_234;
reg   [15:0] layer1_output_10_fu_238;
reg   [15:0] layer1_output_11_fu_242;
reg   [15:0] layer1_output_12_fu_246;
reg   [15:0] layer1_output_13_fu_250;
reg   [15:0] layer1_output_14_fu_254;
reg   [15:0] layer1_output_15_fu_258;
reg   [15:0] layer1_output_16_fu_262;
reg   [15:0] layer1_output_17_fu_266;
reg   [15:0] layer1_output_18_fu_270;
reg   [15:0] layer1_output_19_fu_274;
wire    ap_block_pp0_stage0_01001;
wire  signed [15:0] mul_ln63_fu_883_p1;
wire   [23:0] mul_ln63_fu_883_p2;
wire  signed [23:0] tmp_7_fu_913_p1;
wire   [23:0] grp_fu_1468_p3;
wire   [15:0] tmp_7_fu_913_p4;
wire  signed [23:0] tmp_8_fu_934_p1;
wire   [23:0] grp_fu_1476_p3;
wire   [15:0] tmp_8_fu_934_p4;
wire  signed [23:0] tmp_9_fu_955_p1;
wire   [23:0] grp_fu_1484_p3;
wire   [15:0] tmp_9_fu_955_p4;
wire  signed [23:0] tmp_10_fu_976_p1;
wire   [23:0] grp_fu_1492_p3;
wire   [15:0] tmp_10_fu_976_p4;
wire  signed [23:0] tmp_11_fu_997_p1;
wire   [23:0] grp_fu_1500_p3;
wire   [15:0] tmp_11_fu_997_p4;
wire  signed [23:0] tmp_12_fu_1018_p1;
wire   [23:0] grp_fu_1508_p3;
wire   [15:0] tmp_12_fu_1018_p4;
wire  signed [23:0] tmp_13_fu_1039_p1;
wire   [23:0] grp_fu_1516_p3;
wire   [15:0] tmp_13_fu_1039_p4;
wire  signed [23:0] tmp_14_fu_1060_p1;
wire   [23:0] grp_fu_1524_p3;
wire   [15:0] tmp_14_fu_1060_p4;
wire  signed [23:0] tmp_15_fu_1081_p1;
wire   [23:0] grp_fu_1532_p3;
wire   [15:0] tmp_15_fu_1081_p4;
wire  signed [23:0] tmp_16_fu_1102_p1;
wire   [23:0] grp_fu_1540_p3;
wire   [15:0] tmp_16_fu_1102_p4;
wire  signed [23:0] tmp_17_fu_1122_p1;
wire   [23:0] grp_fu_1548_p3;
wire   [15:0] tmp_17_fu_1122_p4;
wire  signed [23:0] tmp_18_fu_1142_p1;
wire   [23:0] grp_fu_1556_p3;
wire   [15:0] tmp_18_fu_1142_p4;
wire  signed [23:0] tmp_s_fu_1162_p1;
wire   [23:0] grp_fu_1564_p3;
wire   [15:0] tmp_s_fu_1162_p4;
wire  signed [23:0] tmp_19_fu_1182_p1;
wire   [23:0] grp_fu_1572_p3;
wire   [15:0] tmp_19_fu_1182_p4;
wire  signed [23:0] tmp_20_fu_1202_p1;
wire   [23:0] grp_fu_1580_p3;
wire   [15:0] tmp_20_fu_1202_p4;
wire  signed [23:0] tmp_21_fu_1219_p1;
wire   [23:0] grp_fu_1588_p3;
wire   [15:0] tmp_21_fu_1219_p4;
wire  signed [23:0] sum_fu_1236_p1;
wire   [23:0] grp_fu_1596_p3;
wire  signed [23:0] trunc_ln_fu_1248_p1;
wire  signed [15:0] sext_ln65_fu_1245_p1;
wire   [15:0] sum_fu_1236_p4;
wire  signed [14:0] sext_ln65_1_fu_1257_p1;
wire   [14:0] trunc_ln_fu_1248_p4;
wire   [15:0] sum_3_fu_1260_p2;
wire   [14:0] layer1_output_20_fu_1278_p3;
wire  signed [15:0] grp_fu_1468_p1;
wire   [23:0] grp_fu_1468_p2;
wire  signed [15:0] grp_fu_1476_p1;
wire   [23:0] grp_fu_1476_p2;
wire  signed [15:0] grp_fu_1484_p1;
wire   [23:0] grp_fu_1484_p2;
wire  signed [15:0] grp_fu_1492_p1;
wire   [23:0] grp_fu_1492_p2;
wire  signed [15:0] grp_fu_1500_p1;
wire   [23:0] grp_fu_1500_p2;
wire  signed [15:0] grp_fu_1508_p1;
wire   [23:0] grp_fu_1508_p2;
wire  signed [15:0] grp_fu_1516_p1;
wire   [23:0] grp_fu_1516_p2;
wire  signed [15:0] grp_fu_1524_p1;
wire   [23:0] grp_fu_1524_p2;
wire  signed [15:0] grp_fu_1532_p1;
wire   [23:0] grp_fu_1532_p2;
wire  signed [15:0] grp_fu_1540_p1;
wire   [23:0] grp_fu_1540_p2;
wire  signed [15:0] grp_fu_1548_p1;
wire   [23:0] grp_fu_1548_p2;
wire  signed [15:0] grp_fu_1556_p1;
wire   [23:0] grp_fu_1556_p2;
wire  signed [15:0] grp_fu_1564_p1;
wire   [23:0] grp_fu_1564_p2;
wire  signed [15:0] grp_fu_1572_p1;
wire   [23:0] grp_fu_1572_p2;
wire  signed [15:0] grp_fu_1580_p1;
wire   [23:0] grp_fu_1580_p2;
wire  signed [15:0] grp_fu_1588_p1;
wire   [23:0] grp_fu_1588_p2;
wire  signed [15:0] grp_fu_1596_p1;
wire   [23:0] grp_fu_1596_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_0_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_0_address0),
    .ce0(layer1_weights_0_ce0),
    .q0(layer1_weights_0_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_1_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_1_address0),
    .ce0(layer1_weights_1_ce0),
    .q0(layer1_weights_1_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_2_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_2_address0),
    .ce0(layer1_weights_2_ce0),
    .q0(layer1_weights_2_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_3_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_3_address0),
    .ce0(layer1_weights_3_ce0),
    .q0(layer1_weights_3_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_4_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_4_address0),
    .ce0(layer1_weights_4_ce0),
    .q0(layer1_weights_4_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_5_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_5_address0),
    .ce0(layer1_weights_5_ce0),
    .q0(layer1_weights_5_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_6_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_6_address0),
    .ce0(layer1_weights_6_ce0),
    .q0(layer1_weights_6_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_7_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_7_address0),
    .ce0(layer1_weights_7_ce0),
    .q0(layer1_weights_7_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_8_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_8_address0),
    .ce0(layer1_weights_8_ce0),
    .q0(layer1_weights_8_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_9_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_9_address0),
    .ce0(layer1_weights_9_ce0),
    .q0(layer1_weights_9_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_10_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_10_address0),
    .ce0(layer1_weights_10_ce0),
    .q0(layer1_weights_10_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_11_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_11_address0),
    .ce0(layer1_weights_11_ce0),
    .q0(layer1_weights_11_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_12_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_12_address0),
    .ce0(layer1_weights_12_ce0),
    .q0(layer1_weights_12_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_13_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_13_address0),
    .ce0(layer1_weights_13_ce0),
    .q0(layer1_weights_13_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_14_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_14_address0),
    .ce0(layer1_weights_14_ce0),
    .q0(layer1_weights_14_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_15_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_15_address0),
    .ce0(layer1_weights_15_ce0),
    .q0(layer1_weights_15_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_16_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_16_address0),
    .ce0(layer1_weights_16_ce0),
    .q0(layer1_weights_16_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_17_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_weights_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_17_address0),
    .ce0(layer1_weights_17_ce0),
    .q0(layer1_weights_17_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_bias_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_bias_address0),
    .ce0(layer1_bias_ce0),
    .q0(layer1_bias_q0)
);

neural_network_mul_10s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_10s_16s_24_1_1_U1(
    .din0(layer1_weights_0_load_reg_1861),
    .din1(mul_ln63_fu_883_p1),
    .dout(mul_ln63_fu_883_p2)
);

neural_network_mac_muladd_9s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9s_16s_24ns_24_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_1_q0),
    .din1(grp_fu_1468_p1),
    .din2(grp_fu_1468_p2),
    .ce(1'b1),
    .dout(grp_fu_1468_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_2_q0),
    .din1(grp_fu_1476_p1),
    .din2(grp_fu_1476_p2),
    .ce(1'b1),
    .dout(grp_fu_1476_p3)
);

neural_network_mac_muladd_9s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9s_16s_24ns_24_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_3_q0),
    .din1(grp_fu_1484_p1),
    .din2(grp_fu_1484_p2),
    .ce(1'b1),
    .dout(grp_fu_1484_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_4_q0),
    .din1(grp_fu_1492_p1),
    .din2(grp_fu_1492_p2),
    .ce(1'b1),
    .dout(grp_fu_1492_p3)
);

neural_network_mac_muladd_9s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9s_16s_24ns_24_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_5_q0),
    .din1(grp_fu_1500_p1),
    .din2(grp_fu_1500_p2),
    .ce(1'b1),
    .dout(grp_fu_1500_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_6_q0),
    .din1(grp_fu_1508_p1),
    .din2(grp_fu_1508_p2),
    .ce(1'b1),
    .dout(grp_fu_1508_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_7_q0),
    .din1(grp_fu_1516_p1),
    .din2(grp_fu_1516_p2),
    .ce(1'b1),
    .dout(grp_fu_1516_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_8_q0),
    .din1(grp_fu_1524_p1),
    .din2(grp_fu_1524_p2),
    .ce(1'b1),
    .dout(grp_fu_1524_p3)
);

neural_network_mac_muladd_9s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9s_16s_24ns_24_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_9_q0),
    .din1(grp_fu_1532_p1),
    .din2(grp_fu_1532_p2),
    .ce(1'b1),
    .dout(grp_fu_1532_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_10_q0),
    .din1(grp_fu_1540_p1),
    .din2(grp_fu_1540_p2),
    .ce(1'b1),
    .dout(grp_fu_1540_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_11_q0),
    .din1(grp_fu_1548_p1),
    .din2(grp_fu_1548_p2),
    .ce(1'b1),
    .dout(grp_fu_1548_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_12_q0),
    .din1(grp_fu_1556_p1),
    .din2(grp_fu_1556_p2),
    .ce(1'b1),
    .dout(grp_fu_1556_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_13_load_reg_2066),
    .din1(grp_fu_1564_p1),
    .din2(grp_fu_1564_p2),
    .ce(1'b1),
    .dout(grp_fu_1564_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_14_load_reg_2071_pp0_iter13_reg),
    .din1(grp_fu_1572_p1),
    .din2(grp_fu_1572_p2),
    .ce(1'b1),
    .dout(grp_fu_1572_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_15_load_reg_2076_pp0_iter14_reg),
    .din1(grp_fu_1580_p1),
    .din2(grp_fu_1580_p2),
    .ce(1'b1),
    .dout(grp_fu_1580_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_16_load_reg_2081_pp0_iter15_reg),
    .din1(grp_fu_1588_p1),
    .din2(grp_fu_1588_p2),
    .ce(1'b1),
    .dout(grp_fu_1588_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_17_load_reg_2086_pp0_iter16_reg),
    .din1(grp_fu_1596_p1),
    .din2(grp_fu_1596_p2),
    .ce(1'b1),
    .dout(grp_fu_1596_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln58_fu_853_p2 == 1'd0))) begin
            i_fu_194 <= add_ln58_fu_859_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_194 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln60_reg_2157 <= add_ln60_fu_1266_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_2_reg_1822_pp0_iter10_reg <= i_2_reg_1822_pp0_iter9_reg;
        i_2_reg_1822_pp0_iter11_reg <= i_2_reg_1822_pp0_iter10_reg;
        i_2_reg_1822_pp0_iter12_reg <= i_2_reg_1822_pp0_iter11_reg;
        i_2_reg_1822_pp0_iter13_reg <= i_2_reg_1822_pp0_iter12_reg;
        i_2_reg_1822_pp0_iter14_reg <= i_2_reg_1822_pp0_iter13_reg;
        i_2_reg_1822_pp0_iter15_reg <= i_2_reg_1822_pp0_iter14_reg;
        i_2_reg_1822_pp0_iter16_reg <= i_2_reg_1822_pp0_iter15_reg;
        i_2_reg_1822_pp0_iter17_reg <= i_2_reg_1822_pp0_iter16_reg;
        i_2_reg_1822_pp0_iter18_reg <= i_2_reg_1822_pp0_iter17_reg;
        i_2_reg_1822_pp0_iter19_reg <= i_2_reg_1822_pp0_iter18_reg;
        i_2_reg_1822_pp0_iter20_reg <= i_2_reg_1822_pp0_iter19_reg;
        i_2_reg_1822_pp0_iter2_reg <= i_2_reg_1822_pp0_iter1_reg;
        i_2_reg_1822_pp0_iter3_reg <= i_2_reg_1822_pp0_iter2_reg;
        i_2_reg_1822_pp0_iter4_reg <= i_2_reg_1822_pp0_iter3_reg;
        i_2_reg_1822_pp0_iter5_reg <= i_2_reg_1822_pp0_iter4_reg;
        i_2_reg_1822_pp0_iter6_reg <= i_2_reg_1822_pp0_iter5_reg;
        i_2_reg_1822_pp0_iter7_reg <= i_2_reg_1822_pp0_iter6_reg;
        i_2_reg_1822_pp0_iter8_reg <= i_2_reg_1822_pp0_iter7_reg;
        i_2_reg_1822_pp0_iter9_reg <= i_2_reg_1822_pp0_iter8_reg;
        icmp_ln14_reg_2162 <= icmp_ln14_fu_1272_p2;
        icmp_ln58_reg_1826_pp0_iter10_reg <= icmp_ln58_reg_1826_pp0_iter9_reg;
        icmp_ln58_reg_1826_pp0_iter11_reg <= icmp_ln58_reg_1826_pp0_iter10_reg;
        icmp_ln58_reg_1826_pp0_iter12_reg <= icmp_ln58_reg_1826_pp0_iter11_reg;
        icmp_ln58_reg_1826_pp0_iter13_reg <= icmp_ln58_reg_1826_pp0_iter12_reg;
        icmp_ln58_reg_1826_pp0_iter14_reg <= icmp_ln58_reg_1826_pp0_iter13_reg;
        icmp_ln58_reg_1826_pp0_iter15_reg <= icmp_ln58_reg_1826_pp0_iter14_reg;
        icmp_ln58_reg_1826_pp0_iter16_reg <= icmp_ln58_reg_1826_pp0_iter15_reg;
        icmp_ln58_reg_1826_pp0_iter17_reg <= icmp_ln58_reg_1826_pp0_iter16_reg;
        icmp_ln58_reg_1826_pp0_iter18_reg <= icmp_ln58_reg_1826_pp0_iter17_reg;
        icmp_ln58_reg_1826_pp0_iter19_reg <= icmp_ln58_reg_1826_pp0_iter18_reg;
        icmp_ln58_reg_1826_pp0_iter2_reg <= icmp_ln58_reg_1826_pp0_iter1_reg;
        icmp_ln58_reg_1826_pp0_iter3_reg <= icmp_ln58_reg_1826_pp0_iter2_reg;
        icmp_ln58_reg_1826_pp0_iter4_reg <= icmp_ln58_reg_1826_pp0_iter3_reg;
        icmp_ln58_reg_1826_pp0_iter5_reg <= icmp_ln58_reg_1826_pp0_iter4_reg;
        icmp_ln58_reg_1826_pp0_iter6_reg <= icmp_ln58_reg_1826_pp0_iter5_reg;
        icmp_ln58_reg_1826_pp0_iter7_reg <= icmp_ln58_reg_1826_pp0_iter6_reg;
        icmp_ln58_reg_1826_pp0_iter8_reg <= icmp_ln58_reg_1826_pp0_iter7_reg;
        icmp_ln58_reg_1826_pp0_iter9_reg <= icmp_ln58_reg_1826_pp0_iter8_reg;
        layer1_bias_load_reg_2091 <= layer1_bias_q0;
        layer1_bias_load_reg_2091_pp0_iter13_reg <= layer1_bias_load_reg_2091;
        layer1_bias_load_reg_2091_pp0_iter14_reg <= layer1_bias_load_reg_2091_pp0_iter13_reg;
        layer1_bias_load_reg_2091_pp0_iter15_reg <= layer1_bias_load_reg_2091_pp0_iter14_reg;
        layer1_bias_load_reg_2091_pp0_iter16_reg <= layer1_bias_load_reg_2091_pp0_iter15_reg;
        layer1_bias_load_reg_2091_pp0_iter17_reg <= layer1_bias_load_reg_2091_pp0_iter16_reg;
        layer1_bias_load_reg_2091_pp0_iter18_reg <= layer1_bias_load_reg_2091_pp0_iter17_reg;
        layer1_bias_load_reg_2091_pp0_iter19_reg <= layer1_bias_load_reg_2091_pp0_iter18_reg;
        layer1_weights_13_load_reg_2066 <= layer1_weights_13_q0;
        layer1_weights_14_load_reg_2071 <= layer1_weights_14_q0;
        layer1_weights_14_load_reg_2071_pp0_iter13_reg <= layer1_weights_14_load_reg_2071;
        layer1_weights_15_load_reg_2076 <= layer1_weights_15_q0;
        layer1_weights_15_load_reg_2076_pp0_iter13_reg <= layer1_weights_15_load_reg_2076;
        layer1_weights_15_load_reg_2076_pp0_iter14_reg <= layer1_weights_15_load_reg_2076_pp0_iter13_reg;
        layer1_weights_16_load_reg_2081 <= layer1_weights_16_q0;
        layer1_weights_16_load_reg_2081_pp0_iter13_reg <= layer1_weights_16_load_reg_2081;
        layer1_weights_16_load_reg_2081_pp0_iter14_reg <= layer1_weights_16_load_reg_2081_pp0_iter13_reg;
        layer1_weights_16_load_reg_2081_pp0_iter15_reg <= layer1_weights_16_load_reg_2081_pp0_iter14_reg;
        layer1_weights_17_load_reg_2086 <= layer1_weights_17_q0;
        layer1_weights_17_load_reg_2086_pp0_iter13_reg <= layer1_weights_17_load_reg_2086;
        layer1_weights_17_load_reg_2086_pp0_iter14_reg <= layer1_weights_17_load_reg_2086_pp0_iter13_reg;
        layer1_weights_17_load_reg_2086_pp0_iter15_reg <= layer1_weights_17_load_reg_2086_pp0_iter14_reg;
        layer1_weights_17_load_reg_2086_pp0_iter16_reg <= layer1_weights_17_load_reg_2086_pp0_iter15_reg;
        tmp_6_reg_1876 <= {{mul_ln63_fu_883_p2[23:8]}};
        zext_ln58_reg_1830_pp0_iter10_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter9_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter2_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter1_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter3_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter2_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter4_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter3_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter5_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter4_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter6_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter5_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter7_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter6_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter8_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter7_reg[4 : 0];
        zext_ln58_reg_1830_pp0_iter9_reg[4 : 0] <= zext_ln58_reg_1830_pp0_iter8_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_2_reg_1822 <= ap_sig_allocacmp_i_2;
        i_2_reg_1822_pp0_iter1_reg <= i_2_reg_1822;
        icmp_ln58_reg_1826 <= icmp_ln58_fu_853_p2;
        icmp_ln58_reg_1826_pp0_iter1_reg <= icmp_ln58_reg_1826;
        layer1_weights_0_load_reg_1861 <= layer1_weights_0_q0;
        sext_ln63_10_cast_reg_1767 <= sext_ln63_10_cast_fu_801_p1;
        sext_ln63_11_cast_reg_1762 <= sext_ln63_11_cast_fu_797_p1;
        sext_ln63_12_cast_reg_1757 <= sext_ln63_12_cast_fu_793_p1;
        sext_ln63_13_cast_reg_1752 <= sext_ln63_13_cast_fu_789_p1;
        sext_ln63_14_cast_reg_1747 <= sext_ln63_14_cast_fu_785_p1;
        sext_ln63_15_cast_reg_1742 <= sext_ln63_15_cast_fu_781_p1;
        sext_ln63_16_cast_reg_1737 <= sext_ln63_16_cast_fu_777_p1;
        sext_ln63_17_cast_reg_1732 <= sext_ln63_17_cast_fu_773_p1;
        sext_ln63_1_cast_reg_1812 <= sext_ln63_1_cast_fu_837_p1;
        sext_ln63_2_cast_reg_1807 <= sext_ln63_2_cast_fu_833_p1;
        sext_ln63_3_cast_reg_1802 <= sext_ln63_3_cast_fu_829_p1;
        sext_ln63_4_cast_reg_1797 <= sext_ln63_4_cast_fu_825_p1;
        sext_ln63_5_cast_reg_1792 <= sext_ln63_5_cast_fu_821_p1;
        sext_ln63_6_cast_reg_1787 <= sext_ln63_6_cast_fu_817_p1;
        sext_ln63_7_cast_reg_1782 <= sext_ln63_7_cast_fu_813_p1;
        sext_ln63_8_cast_reg_1777 <= sext_ln63_8_cast_fu_809_p1;
        sext_ln63_9_cast_reg_1772 <= sext_ln63_9_cast_fu_805_p1;
        sext_ln63_cast_reg_1817 <= sext_ln63_cast_fu_841_p1;
        zext_ln58_reg_1830_pp0_iter1_reg[4 : 0] <= zext_ln58_reg_1830[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd10) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_10_fu_238[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd11) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_11_fu_242[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd12) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_12_fu_246[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd13) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_13_fu_250[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd14) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_14_fu_254[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd15) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_15_fu_258[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd16) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_16_fu_262[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd17) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_17_fu_266[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd18) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_18_fu_270[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((i_2_reg_1822_pp0_iter20_reg == 5'd19) | ((i_2_reg_1822_pp0_iter20_reg == 5'd20) | ((i_2_reg_1822_pp0_iter20_reg == 5'd21) | ((i_2_reg_1822_pp0_iter20_reg == 5'd22) | ((i_2_reg_1822_pp0_iter20_reg == 5'd23) | ((i_2_reg_1822_pp0_iter20_reg == 5'd24) | ((i_2_reg_1822_pp0_iter20_reg == 5'd25) | ((i_2_reg_1822_pp0_iter20_reg == 5'd26) | ((i_2_reg_1822_pp0_iter20_reg == 5'd27) | ((i_2_reg_1822_pp0_iter20_reg == 5'd28) | ((i_2_reg_1822_pp0_iter20_reg == 5'd29) | ((i_2_reg_1822_pp0_iter20_reg == 5'd30) | (i_2_reg_1822_pp0_iter20_reg == 5'd31))))))))))))))) begin
        layer1_output_19_fu_274[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd1) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_1_fu_202[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd2) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_2_fu_206[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd3) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_3_fu_210[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd4) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_4_fu_214[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd5) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_5_fu_218[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd6) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_6_fu_222[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd7) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_7_fu_226[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd8) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_8_fu_230[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd9) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_9_fu_234[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_2_reg_1822_pp0_iter20_reg == 5'd0) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_fu_198[14 : 0] <= zext_ln66_fu_1284_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln58_fu_853_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln58_reg_1830[4 : 0] <= zext_ln58_fu_865_p1[4 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln58_fu_853_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_194;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_bias_ce0 = 1'b1;
    end else begin
        layer1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_10_out_ap_vld = 1'b1;
    end else begin
        layer1_output_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_11_out_ap_vld = 1'b1;
    end else begin
        layer1_output_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_12_out_ap_vld = 1'b1;
    end else begin
        layer1_output_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_13_out_ap_vld = 1'b1;
    end else begin
        layer1_output_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_14_out_ap_vld = 1'b1;
    end else begin
        layer1_output_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_15_out_ap_vld = 1'b1;
    end else begin
        layer1_output_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_16_out_ap_vld = 1'b1;
    end else begin
        layer1_output_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_17_out_ap_vld = 1'b1;
    end else begin
        layer1_output_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_18_out_ap_vld = 1'b1;
    end else begin
        layer1_output_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_19_out_ap_vld = 1'b1;
    end else begin
        layer1_output_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_1_out_ap_vld = 1'b1;
    end else begin
        layer1_output_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_2_out_ap_vld = 1'b1;
    end else begin
        layer1_output_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_3_out_ap_vld = 1'b1;
    end else begin
        layer1_output_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_4_out_ap_vld = 1'b1;
    end else begin
        layer1_output_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_5_out_ap_vld = 1'b1;
    end else begin
        layer1_output_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_6_out_ap_vld = 1'b1;
    end else begin
        layer1_output_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_7_out_ap_vld = 1'b1;
    end else begin
        layer1_output_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_8_out_ap_vld = 1'b1;
    end else begin
        layer1_output_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_9_out_ap_vld = 1'b1;
    end else begin
        layer1_output_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_1826_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_out_ap_vld = 1'b1;
    end else begin
        layer1_output_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_0_ce0 = 1'b1;
    end else begin
        layer1_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_10_ce0 = 1'b1;
    end else begin
        layer1_weights_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_11_ce0 = 1'b1;
    end else begin
        layer1_weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_12_ce0 = 1'b1;
    end else begin
        layer1_weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_13_ce0 = 1'b1;
    end else begin
        layer1_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_14_ce0 = 1'b1;
    end else begin
        layer1_weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_15_ce0 = 1'b1;
    end else begin
        layer1_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_16_ce0 = 1'b1;
    end else begin
        layer1_weights_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_17_ce0 = 1'b1;
    end else begin
        layer1_weights_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_1_ce0 = 1'b1;
    end else begin
        layer1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_2_ce0 = 1'b1;
    end else begin
        layer1_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_3_ce0 = 1'b1;
    end else begin
        layer1_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_4_ce0 = 1'b1;
    end else begin
        layer1_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_5_ce0 = 1'b1;
    end else begin
        layer1_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_6_ce0 = 1'b1;
    end else begin
        layer1_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_7_ce0 = 1'b1;
    end else begin
        layer1_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_8_ce0 = 1'b1;
    end else begin
        layer1_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_9_ce0 = 1'b1;
    end else begin
        layer1_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_fu_859_p2 = (ap_sig_allocacmp_i_2 + 5'd1);

assign add_ln60_fu_1266_p2 = ($signed(sext_ln65_1_fu_1257_p1) + $signed(trunc_ln_fu_1248_p4));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_1468_p1 = sext_ln63_1_cast_reg_1812;

assign grp_fu_1468_p2 = {{tmp_6_reg_1876}, {8'd0}};

assign grp_fu_1476_p1 = sext_ln63_2_cast_reg_1807;

assign grp_fu_1476_p2 = {{tmp_7_fu_913_p4}, {8'd0}};

assign grp_fu_1484_p1 = sext_ln63_3_cast_reg_1802;

assign grp_fu_1484_p2 = {{tmp_8_fu_934_p4}, {8'd0}};

assign grp_fu_1492_p1 = sext_ln63_4_cast_reg_1797;

assign grp_fu_1492_p2 = {{tmp_9_fu_955_p4}, {8'd0}};

assign grp_fu_1500_p1 = sext_ln63_5_cast_reg_1792;

assign grp_fu_1500_p2 = {{tmp_10_fu_976_p4}, {8'd0}};

assign grp_fu_1508_p1 = sext_ln63_6_cast_reg_1787;

assign grp_fu_1508_p2 = {{tmp_11_fu_997_p4}, {8'd0}};

assign grp_fu_1516_p1 = sext_ln63_7_cast_reg_1782;

assign grp_fu_1516_p2 = {{tmp_12_fu_1018_p4}, {8'd0}};

assign grp_fu_1524_p1 = sext_ln63_8_cast_reg_1777;

assign grp_fu_1524_p2 = {{tmp_13_fu_1039_p4}, {8'd0}};

assign grp_fu_1532_p1 = sext_ln63_9_cast_reg_1772;

assign grp_fu_1532_p2 = {{tmp_14_fu_1060_p4}, {8'd0}};

assign grp_fu_1540_p1 = sext_ln63_10_cast_reg_1767;

assign grp_fu_1540_p2 = {{tmp_15_fu_1081_p4}, {8'd0}};

assign grp_fu_1548_p1 = sext_ln63_11_cast_reg_1762;

assign grp_fu_1548_p2 = {{tmp_16_fu_1102_p4}, {8'd0}};

assign grp_fu_1556_p1 = sext_ln63_12_cast_reg_1757;

assign grp_fu_1556_p2 = {{tmp_17_fu_1122_p4}, {8'd0}};

assign grp_fu_1564_p1 = sext_ln63_13_cast_reg_1752;

assign grp_fu_1564_p2 = {{tmp_18_fu_1142_p4}, {8'd0}};

assign grp_fu_1572_p1 = sext_ln63_14_cast_reg_1747;

assign grp_fu_1572_p2 = {{tmp_s_fu_1162_p4}, {8'd0}};

assign grp_fu_1580_p1 = sext_ln63_15_cast_reg_1742;

assign grp_fu_1580_p2 = {{tmp_19_fu_1182_p4}, {8'd0}};

assign grp_fu_1588_p1 = sext_ln63_16_cast_reg_1737;

assign grp_fu_1588_p2 = {{tmp_20_fu_1202_p4}, {8'd0}};

assign grp_fu_1596_p1 = sext_ln63_17_cast_reg_1732;

assign grp_fu_1596_p2 = {{tmp_21_fu_1219_p4}, {8'd0}};

assign icmp_ln14_fu_1272_p2 = (($signed(sum_3_fu_1260_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_853_p2 = ((ap_sig_allocacmp_i_2 == 5'd20) ? 1'b1 : 1'b0);

assign layer1_bias_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_output_10_out = layer1_output_10_fu_238;

assign layer1_output_11_out = layer1_output_11_fu_242;

assign layer1_output_12_out = layer1_output_12_fu_246;

assign layer1_output_13_out = layer1_output_13_fu_250;

assign layer1_output_14_out = layer1_output_14_fu_254;

assign layer1_output_15_out = layer1_output_15_fu_258;

assign layer1_output_16_out = layer1_output_16_fu_262;

assign layer1_output_17_out = layer1_output_17_fu_266;

assign layer1_output_18_out = layer1_output_18_fu_270;

assign layer1_output_19_out = layer1_output_19_fu_274;

assign layer1_output_1_out = layer1_output_1_fu_202;

assign layer1_output_20_fu_1278_p3 = ((icmp_ln14_reg_2162[0:0] == 1'b1) ? add_ln60_reg_2157 : 15'd0);

assign layer1_output_2_out = layer1_output_2_fu_206;

assign layer1_output_3_out = layer1_output_3_fu_210;

assign layer1_output_4_out = layer1_output_4_fu_214;

assign layer1_output_5_out = layer1_output_5_fu_218;

assign layer1_output_6_out = layer1_output_6_fu_222;

assign layer1_output_7_out = layer1_output_7_fu_226;

assign layer1_output_8_out = layer1_output_8_fu_230;

assign layer1_output_9_out = layer1_output_9_fu_234;

assign layer1_output_out = layer1_output_fu_198;

assign layer1_weights_0_address0 = zext_ln58_fu_865_p1;

assign layer1_weights_10_address0 = zext_ln58_reg_1830_pp0_iter8_reg;

assign layer1_weights_11_address0 = zext_ln58_reg_1830_pp0_iter9_reg;

assign layer1_weights_12_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_weights_13_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_weights_14_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_weights_15_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_weights_16_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_weights_17_address0 = zext_ln58_reg_1830_pp0_iter10_reg;

assign layer1_weights_1_address0 = zext_ln58_fu_865_p1;

assign layer1_weights_2_address0 = zext_ln58_reg_1830;

assign layer1_weights_3_address0 = zext_ln58_reg_1830_pp0_iter1_reg;

assign layer1_weights_4_address0 = zext_ln58_reg_1830_pp0_iter2_reg;

assign layer1_weights_5_address0 = zext_ln58_reg_1830_pp0_iter3_reg;

assign layer1_weights_6_address0 = zext_ln58_reg_1830_pp0_iter4_reg;

assign layer1_weights_7_address0 = zext_ln58_reg_1830_pp0_iter5_reg;

assign layer1_weights_8_address0 = zext_ln58_reg_1830_pp0_iter6_reg;

assign layer1_weights_9_address0 = zext_ln58_reg_1830_pp0_iter7_reg;

assign mul_ln63_fu_883_p1 = sext_ln63_cast_reg_1817;

assign sext_ln63_10_cast_fu_801_p1 = $signed(sext_ln63_10);

assign sext_ln63_11_cast_fu_797_p1 = $signed(sext_ln63_11);

assign sext_ln63_12_cast_fu_793_p1 = $signed(sext_ln63_12);

assign sext_ln63_13_cast_fu_789_p1 = $signed(sext_ln63_13);

assign sext_ln63_14_cast_fu_785_p1 = $signed(sext_ln63_14);

assign sext_ln63_15_cast_fu_781_p1 = $signed(sext_ln63_15);

assign sext_ln63_16_cast_fu_777_p1 = $signed(sext_ln63_16);

assign sext_ln63_17_cast_fu_773_p1 = $signed(sext_ln63_17);

assign sext_ln63_1_cast_fu_837_p1 = $signed(sext_ln63_1);

assign sext_ln63_2_cast_fu_833_p1 = $signed(sext_ln63_2);

assign sext_ln63_3_cast_fu_829_p1 = $signed(sext_ln63_3);

assign sext_ln63_4_cast_fu_825_p1 = $signed(sext_ln63_4);

assign sext_ln63_5_cast_fu_821_p1 = $signed(sext_ln63_5);

assign sext_ln63_6_cast_fu_817_p1 = $signed(sext_ln63_6);

assign sext_ln63_7_cast_fu_813_p1 = $signed(sext_ln63_7);

assign sext_ln63_8_cast_fu_809_p1 = $signed(sext_ln63_8);

assign sext_ln63_9_cast_fu_805_p1 = $signed(sext_ln63_9);

assign sext_ln63_cast_fu_841_p1 = $signed(sext_ln63);

assign sext_ln65_1_fu_1257_p1 = layer1_bias_load_reg_2091_pp0_iter19_reg;

assign sext_ln65_fu_1245_p1 = layer1_bias_load_reg_2091_pp0_iter19_reg;

assign sum_3_fu_1260_p2 = ($signed(sext_ln65_fu_1245_p1) + $signed(sum_fu_1236_p4));

assign sum_fu_1236_p1 = grp_fu_1596_p3;

assign sum_fu_1236_p4 = {{sum_fu_1236_p1[23:8]}};

assign tmp_10_fu_976_p1 = grp_fu_1492_p3;

assign tmp_10_fu_976_p4 = {{tmp_10_fu_976_p1[23:8]}};

assign tmp_11_fu_997_p1 = grp_fu_1500_p3;

assign tmp_11_fu_997_p4 = {{tmp_11_fu_997_p1[23:8]}};

assign tmp_12_fu_1018_p1 = grp_fu_1508_p3;

assign tmp_12_fu_1018_p4 = {{tmp_12_fu_1018_p1[23:8]}};

assign tmp_13_fu_1039_p1 = grp_fu_1516_p3;

assign tmp_13_fu_1039_p4 = {{tmp_13_fu_1039_p1[23:8]}};

assign tmp_14_fu_1060_p1 = grp_fu_1524_p3;

assign tmp_14_fu_1060_p4 = {{tmp_14_fu_1060_p1[23:8]}};

assign tmp_15_fu_1081_p1 = grp_fu_1532_p3;

assign tmp_15_fu_1081_p4 = {{tmp_15_fu_1081_p1[23:8]}};

assign tmp_16_fu_1102_p1 = grp_fu_1540_p3;

assign tmp_16_fu_1102_p4 = {{tmp_16_fu_1102_p1[23:8]}};

assign tmp_17_fu_1122_p1 = grp_fu_1548_p3;

assign tmp_17_fu_1122_p4 = {{tmp_17_fu_1122_p1[23:8]}};

assign tmp_18_fu_1142_p1 = grp_fu_1556_p3;

assign tmp_18_fu_1142_p4 = {{tmp_18_fu_1142_p1[23:8]}};

assign tmp_19_fu_1182_p1 = grp_fu_1572_p3;

assign tmp_19_fu_1182_p4 = {{tmp_19_fu_1182_p1[23:8]}};

assign tmp_20_fu_1202_p1 = grp_fu_1580_p3;

assign tmp_20_fu_1202_p4 = {{tmp_20_fu_1202_p1[23:8]}};

assign tmp_21_fu_1219_p1 = grp_fu_1588_p3;

assign tmp_21_fu_1219_p4 = {{tmp_21_fu_1219_p1[23:8]}};

assign tmp_7_fu_913_p1 = grp_fu_1468_p3;

assign tmp_7_fu_913_p4 = {{tmp_7_fu_913_p1[23:8]}};

assign tmp_8_fu_934_p1 = grp_fu_1476_p3;

assign tmp_8_fu_934_p4 = {{tmp_8_fu_934_p1[23:8]}};

assign tmp_9_fu_955_p1 = grp_fu_1484_p3;

assign tmp_9_fu_955_p4 = {{tmp_9_fu_955_p1[23:8]}};

assign tmp_s_fu_1162_p1 = grp_fu_1564_p3;

assign tmp_s_fu_1162_p4 = {{tmp_s_fu_1162_p1[23:8]}};

assign trunc_ln_fu_1248_p1 = grp_fu_1596_p3;

assign trunc_ln_fu_1248_p4 = {{trunc_ln_fu_1248_p1[22:8]}};

assign zext_ln58_fu_865_p1 = ap_sig_allocacmp_i_2;

assign zext_ln66_fu_1284_p1 = layer1_output_20_fu_1278_p3;

always @ (posedge ap_clk) begin
    zext_ln58_reg_1830[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter4_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter5_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter6_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter7_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter8_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter9_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1830_pp0_iter10_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    layer1_output_fu_198[15] <= 1'b0;
    layer1_output_1_fu_202[15] <= 1'b0;
    layer1_output_2_fu_206[15] <= 1'b0;
    layer1_output_3_fu_210[15] <= 1'b0;
    layer1_output_4_fu_214[15] <= 1'b0;
    layer1_output_5_fu_218[15] <= 1'b0;
    layer1_output_6_fu_222[15] <= 1'b0;
    layer1_output_7_fu_226[15] <= 1'b0;
    layer1_output_8_fu_230[15] <= 1'b0;
    layer1_output_9_fu_234[15] <= 1'b0;
    layer1_output_10_fu_238[15] <= 1'b0;
    layer1_output_11_fu_242[15] <= 1'b0;
    layer1_output_12_fu_246[15] <= 1'b0;
    layer1_output_13_fu_250[15] <= 1'b0;
    layer1_output_14_fu_254[15] <= 1'b0;
    layer1_output_15_fu_258[15] <= 1'b0;
    layer1_output_16_fu_262[15] <= 1'b0;
    layer1_output_17_fu_266[15] <= 1'b0;
    layer1_output_18_fu_270[15] <= 1'b0;
    layer1_output_19_fu_274[15] <= 1'b0;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_58_1
