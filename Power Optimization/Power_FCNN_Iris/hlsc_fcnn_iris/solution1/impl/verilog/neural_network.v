// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="neural_network_neural_network,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.893054,HLS_SYN_LAT=96,HLS_SYN_TPT=none,HLS_SYN_MEM=14,HLS_SYN_DSP=0,HLS_SYN_FF=3369,HLS_SYN_LUT=2803,HLS_VERSION=2023_1}" *)

module neural_network (
        ap_clk,
        ap_rst_n,
        s_axi_CONTROL_AWVALID,
        s_axi_CONTROL_AWREADY,
        s_axi_CONTROL_AWADDR,
        s_axi_CONTROL_WVALID,
        s_axi_CONTROL_WREADY,
        s_axi_CONTROL_WDATA,
        s_axi_CONTROL_WSTRB,
        s_axi_CONTROL_ARVALID,
        s_axi_CONTROL_ARREADY,
        s_axi_CONTROL_ARADDR,
        s_axi_CONTROL_RVALID,
        s_axi_CONTROL_RREADY,
        s_axi_CONTROL_RDATA,
        s_axi_CONTROL_RRESP,
        s_axi_CONTROL_BVALID,
        s_axi_CONTROL_BREADY,
        s_axi_CONTROL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_OUTPUT_AWVALID,
        s_axi_OUTPUT_AWREADY,
        s_axi_OUTPUT_AWADDR,
        s_axi_OUTPUT_WVALID,
        s_axi_OUTPUT_WREADY,
        s_axi_OUTPUT_WDATA,
        s_axi_OUTPUT_WSTRB,
        s_axi_OUTPUT_ARVALID,
        s_axi_OUTPUT_ARREADY,
        s_axi_OUTPUT_ARADDR,
        s_axi_OUTPUT_RVALID,
        s_axi_OUTPUT_RREADY,
        s_axi_OUTPUT_RDATA,
        s_axi_OUTPUT_RRESP,
        s_axi_OUTPUT_BVALID,
        s_axi_OUTPUT_BREADY,
        s_axi_OUTPUT_BRESP
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 5;
parameter    C_S_AXI_OUTPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_OUTPUT_ADDR_WIDTH = 5;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_OUTPUT_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CONTROL_AWVALID;
output   s_axi_CONTROL_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR;
input   s_axi_CONTROL_WVALID;
output   s_axi_CONTROL_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_CONTROL_WSTRB;
input   s_axi_CONTROL_ARVALID;
output   s_axi_CONTROL_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR;
output   s_axi_CONTROL_RVALID;
input   s_axi_CONTROL_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA;
output  [1:0] s_axi_CONTROL_RRESP;
output   s_axi_CONTROL_BVALID;
input   s_axi_CONTROL_BREADY;
output  [1:0] s_axi_CONTROL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_OUTPUT_AWVALID;
output   s_axi_OUTPUT_AWREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_AWADDR;
input   s_axi_OUTPUT_WVALID;
output   s_axi_OUTPUT_WREADY;
input  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_WDATA;
input  [C_S_AXI_OUTPUT_WSTRB_WIDTH - 1:0] s_axi_OUTPUT_WSTRB;
input   s_axi_OUTPUT_ARVALID;
output   s_axi_OUTPUT_ARREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_ARADDR;
output   s_axi_OUTPUT_RVALID;
input   s_axi_OUTPUT_RREADY;
output  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_RDATA;
output  [1:0] s_axi_OUTPUT_RRESP;
output   s_axi_OUTPUT_BVALID;
input   s_axi_OUTPUT_BREADY;
output  [1:0] s_axi_OUTPUT_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [1:0] input_r_address0;
reg    input_r_ce0;
wire   [15:0] input_r_q0;
reg   [1:0] output_r_address0;
reg    output_r_ce0;
reg    output_r_we0;
reg   [15:0] output_r_d0;
wire   [15:0] output_r_q0;
reg   [15:0] input_r_load_reg_399;
wire    ap_CS_fsm_state2;
reg   [15:0] input_r_load_1_reg_409;
wire    ap_CS_fsm_state3;
reg   [15:0] input_r_load_2_reg_419;
wire    ap_CS_fsm_state4;
reg   [15:0] input_r_load_3_reg_429;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire   [14:0] layer1_output_q1;
reg   [14:0] layer1_output_load_reg_444;
wire    ap_CS_fsm_state8;
wire   [14:0] layer1_output_q0;
reg   [14:0] layer1_output_load_1_reg_449;
reg   [14:0] layer1_output_load_2_reg_464;
wire    ap_CS_fsm_state9;
reg   [14:0] layer1_output_load_3_reg_469;
reg   [14:0] layer1_output_load_4_reg_484;
wire    ap_CS_fsm_state10;
reg   [14:0] layer1_output_load_5_reg_489;
reg   [14:0] layer1_output_load_6_reg_504;
wire    ap_CS_fsm_state11;
reg   [14:0] layer1_output_load_7_reg_509;
reg   [2:0] layer1_output_address0;
reg    layer1_output_ce0;
reg    layer1_output_we0;
reg   [2:0] layer1_output_address1;
reg    layer1_output_ce1;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_ready;
wire   [2:0] grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_we0;
wire   [14:0] grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_d0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_ready;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_2_03_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_2_03_out_ap_vld;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_1_02_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_1_02_out_ap_vld;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_0_01_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_0_01_out_ap_vld;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_max_val_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_max_val_out_ap_vld;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_ready;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_max_val_1_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_max_val_1_out_ap_vld;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_ready;
wire   [1:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_we0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_d0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_sum_4_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_sum_4_out_ap_vld;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_ready;
wire   [1:0] grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_we0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_d0;
reg    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start_reg;
wire    ap_CS_fsm_state12;
reg    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start_reg = 1'b0;
end

neural_network_layer1_output_RAM_AUTO_1R1W #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
layer1_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer1_output_address0),
    .ce0(layer1_output_ce0),
    .we0(layer1_output_we0),
    .d0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_d0),
    .q0(layer1_output_q0),
    .address1(layer1_output_address1),
    .ce1(layer1_output_ce1),
    .q1(layer1_output_q1)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1 grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_ready),
    .sext_ln61(input_r_load_reg_399),
    .sext_ln61_1(input_r_load_1_reg_409),
    .sext_ln61_2(input_r_load_2_reg_419),
    .sext_ln61_3(input_r_load_3_reg_429),
    .layer1_output_address0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_address0),
    .layer1_output_ce0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_ce0),
    .layer1_output_we0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_we0),
    .layer1_output_d0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_d0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3 grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_ready),
    .zext_ln73(layer1_output_load_reg_444),
    .conv_i86_1_cast(layer1_output_load_1_reg_449),
    .conv_i86_2_cast(layer1_output_load_2_reg_464),
    .conv_i86_3_cast(layer1_output_load_3_reg_469),
    .conv_i86_4_cast(layer1_output_load_4_reg_484),
    .conv_i86_5_cast(layer1_output_load_5_reg_489),
    .conv_i86_6_cast(layer1_output_load_6_reg_504),
    .zext_ln73_1(layer1_output_load_7_reg_509),
    .layer2_output_2_03_out(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_2_03_out),
    .layer2_output_2_03_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_2_03_out_ap_vld),
    .layer2_output_1_02_out(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_1_02_out),
    .layer2_output_1_02_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_1_02_out_ap_vld),
    .layer2_output_0_01_out(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_0_01_out),
    .layer2_output_0_01_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_0_01_out_ap_vld),
    .max_val_out(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_max_val_out),
    .max_val_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_max_val_out_ap_vld)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_22_1 grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_ready),
    .max_val_reload(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_max_val_out),
    .layer2_output_1_02_reload(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_1_02_out),
    .layer2_output_2_03_reload(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_2_03_out),
    .max_val_1_out(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_max_val_1_out),
    .max_val_1_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_max_val_1_out_ap_vld)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_28_2 grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_ready),
    .layer2_output_0_01_reload(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_0_01_out),
    .layer2_output_1_02_reload(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_1_02_out),
    .layer2_output_2_03_reload(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_layer2_output_2_03_out),
    .conv_i_i13_i_i8(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_max_val_1_out),
    .output_r_address0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_address0),
    .output_r_ce0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_ce0),
    .output_r_we0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_we0),
    .output_r_d0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_d0),
    .sum_4_out(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_sum_4_out),
    .sum_4_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_sum_4_out_ap_vld)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_35_3 grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_ready),
    .output_r_address0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_address0),
    .output_r_ce0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_ce0),
    .output_r_we0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_we0),
    .output_r_d0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_d0),
    .output_r_q0(output_r_q0),
    .sext_ln35(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_sum_4_out)
);

neural_network_CONTROL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
CONTROL_s_axi_U(
    .AWVALID(s_axi_CONTROL_AWVALID),
    .AWREADY(s_axi_CONTROL_AWREADY),
    .AWADDR(s_axi_CONTROL_AWADDR),
    .WVALID(s_axi_CONTROL_WVALID),
    .WREADY(s_axi_CONTROL_WREADY),
    .WDATA(s_axi_CONTROL_WDATA),
    .WSTRB(s_axi_CONTROL_WSTRB),
    .ARVALID(s_axi_CONTROL_ARVALID),
    .ARREADY(s_axi_CONTROL_ARREADY),
    .ARADDR(s_axi_CONTROL_ARADDR),
    .RVALID(s_axi_CONTROL_RVALID),
    .RREADY(s_axi_CONTROL_RREADY),
    .RDATA(s_axi_CONTROL_RDATA),
    .RRESP(s_axi_CONTROL_RRESP),
    .BVALID(s_axi_CONTROL_BVALID),
    .BREADY(s_axi_CONTROL_BREADY),
    .BRESP(s_axi_CONTROL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

neural_network_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_r_address0(input_r_address0),
    .input_r_ce0(input_r_ce0),
    .input_r_q0(input_r_q0)
);

neural_network_OUTPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_OUTPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_OUTPUT_DATA_WIDTH ))
OUTPUT_s_axi_U(
    .AWVALID(s_axi_OUTPUT_AWVALID),
    .AWREADY(s_axi_OUTPUT_AWREADY),
    .AWADDR(s_axi_OUTPUT_AWADDR),
    .WVALID(s_axi_OUTPUT_WVALID),
    .WREADY(s_axi_OUTPUT_WREADY),
    .WDATA(s_axi_OUTPUT_WDATA),
    .WSTRB(s_axi_OUTPUT_WSTRB),
    .ARVALID(s_axi_OUTPUT_ARVALID),
    .ARREADY(s_axi_OUTPUT_ARREADY),
    .ARADDR(s_axi_OUTPUT_ARADDR),
    .RVALID(s_axi_OUTPUT_RVALID),
    .RREADY(s_axi_OUTPUT_RREADY),
    .RDATA(s_axi_OUTPUT_RDATA),
    .RRESP(s_axi_OUTPUT_RRESP),
    .BVALID(s_axi_OUTPUT_BVALID),
    .BREADY(s_axi_OUTPUT_BREADY),
    .BRESP(s_axi_OUTPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .output_r_address0(output_r_address0),
    .output_r_ce0(output_r_ce0),
    .output_r_we0(output_r_we0),
    .output_r_d0(output_r_d0),
    .output_r_q0(output_r_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_load_1_reg_409 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_load_2_reg_419 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_load_3_reg_429 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_r_load_reg_399 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        layer1_output_load_1_reg_449 <= layer1_output_q0;
        layer1_output_load_reg_444 <= layer1_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        layer1_output_load_2_reg_464 <= layer1_output_q1;
        layer1_output_load_3_reg_469 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        layer1_output_load_4_reg_484 <= layer1_output_q1;
        layer1_output_load_5_reg_489 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        layer1_output_load_6_reg_504 <= layer1_output_q1;
        layer1_output_load_7_reg_509 <= layer1_output_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_r_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        input_r_address0 = 64'd0;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        layer1_output_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer1_output_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer1_output_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer1_output_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        layer1_output_address0 = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_address0;
    end else begin
        layer1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        layer1_output_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer1_output_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer1_output_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer1_output_address1 = 64'd0;
    end else begin
        layer1_output_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        layer1_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        layer1_output_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_ce0;
    end else begin
        layer1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        layer1_output_ce1 = 1'b1;
    end else begin
        layer1_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer1_output_we0 = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_layer1_output_we0;
    end else begin
        layer1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_r_address0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_address0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_address0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_r_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_ce0;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_r_d0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_d0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_d0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_r_we0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_output_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_we0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_output_r_we0;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_302_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_310_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_327_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_246_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_266_ap_start_reg;

endmodule //neural_network
