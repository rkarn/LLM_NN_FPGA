// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="neural_network_neural_network,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.201000,HLS_SYN_LAT=167,HLS_SYN_TPT=none,HLS_SYN_MEM=40,HLS_SYN_DSP=0,HLS_SYN_FF=4258,HLS_SYN_LUT=2977,HLS_VERSION=2023_1}" *)

module neural_network (
        ap_clk,
        ap_rst_n,
        s_axi_CONTROL_AWVALID,
        s_axi_CONTROL_AWREADY,
        s_axi_CONTROL_AWADDR,
        s_axi_CONTROL_WVALID,
        s_axi_CONTROL_WREADY,
        s_axi_CONTROL_WDATA,
        s_axi_CONTROL_WSTRB,
        s_axi_CONTROL_ARVALID,
        s_axi_CONTROL_ARREADY,
        s_axi_CONTROL_ARADDR,
        s_axi_CONTROL_RVALID,
        s_axi_CONTROL_RREADY,
        s_axi_CONTROL_RDATA,
        s_axi_CONTROL_RRESP,
        s_axi_CONTROL_BVALID,
        s_axi_CONTROL_BREADY,
        s_axi_CONTROL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_OUTPUT_AWVALID,
        s_axi_OUTPUT_AWREADY,
        s_axi_OUTPUT_AWADDR,
        s_axi_OUTPUT_WVALID,
        s_axi_OUTPUT_WREADY,
        s_axi_OUTPUT_WDATA,
        s_axi_OUTPUT_WSTRB,
        s_axi_OUTPUT_ARVALID,
        s_axi_OUTPUT_ARREADY,
        s_axi_OUTPUT_ARADDR,
        s_axi_OUTPUT_RVALID,
        s_axi_OUTPUT_RREADY,
        s_axi_OUTPUT_RDATA,
        s_axi_OUTPUT_RRESP,
        s_axi_OUTPUT_BVALID,
        s_axi_OUTPUT_BREADY,
        s_axi_OUTPUT_BRESP
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 7;
parameter    C_S_AXI_OUTPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_OUTPUT_ADDR_WIDTH = 5;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_OUTPUT_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CONTROL_AWVALID;
output   s_axi_CONTROL_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR;
input   s_axi_CONTROL_WVALID;
output   s_axi_CONTROL_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_CONTROL_WSTRB;
input   s_axi_CONTROL_ARVALID;
output   s_axi_CONTROL_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR;
output   s_axi_CONTROL_RVALID;
input   s_axi_CONTROL_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA;
output  [1:0] s_axi_CONTROL_RRESP;
output   s_axi_CONTROL_BVALID;
input   s_axi_CONTROL_BREADY;
output  [1:0] s_axi_CONTROL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_OUTPUT_AWVALID;
output   s_axi_OUTPUT_AWREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_AWADDR;
input   s_axi_OUTPUT_WVALID;
output   s_axi_OUTPUT_WREADY;
input  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_WDATA;
input  [C_S_AXI_OUTPUT_WSTRB_WIDTH - 1:0] s_axi_OUTPUT_WSTRB;
input   s_axi_OUTPUT_ARVALID;
output   s_axi_OUTPUT_ARREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_ARADDR;
output   s_axi_OUTPUT_RVALID;
input   s_axi_OUTPUT_RREADY;
output  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_RDATA;
output  [1:0] s_axi_OUTPUT_RRESP;
output   s_axi_OUTPUT_BVALID;
input   s_axi_OUTPUT_BREADY;
output  [1:0] s_axi_OUTPUT_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [4:0] input_r_address0;
reg    input_r_ce0;
wire   [15:0] input_r_q0;
reg   [2:0] output_r_address0;
reg    output_r_ce0;
reg    output_r_we0;
reg   [15:0] output_r_d0;
wire   [15:0] output_r_q0;
reg   [15:0] input_r_load_reg_730;
wire    ap_CS_fsm_state2;
reg   [15:0] input_r_load_1_reg_740;
wire    ap_CS_fsm_state3;
reg   [15:0] input_r_load_2_reg_750;
wire    ap_CS_fsm_state4;
reg   [15:0] input_r_load_3_reg_760;
wire    ap_CS_fsm_state5;
reg   [15:0] input_r_load_4_reg_770;
wire    ap_CS_fsm_state6;
reg   [15:0] input_r_load_5_reg_780;
wire    ap_CS_fsm_state7;
reg   [15:0] input_r_load_6_reg_790;
wire    ap_CS_fsm_state8;
reg   [15:0] input_r_load_7_reg_800;
wire    ap_CS_fsm_state9;
reg   [15:0] input_r_load_8_reg_810;
wire    ap_CS_fsm_state10;
reg   [15:0] input_r_load_9_reg_820;
wire    ap_CS_fsm_state11;
reg   [15:0] input_r_load_10_reg_830;
wire    ap_CS_fsm_state12;
reg   [15:0] input_r_load_11_reg_840;
wire    ap_CS_fsm_state13;
reg   [15:0] input_r_load_12_reg_850;
wire    ap_CS_fsm_state14;
reg   [15:0] input_r_load_13_reg_860;
wire    ap_CS_fsm_state15;
reg   [15:0] input_r_load_14_reg_870;
wire    ap_CS_fsm_state16;
reg   [15:0] input_r_load_15_reg_880;
wire    ap_CS_fsm_state17;
reg   [15:0] input_r_load_16_reg_890;
wire    ap_CS_fsm_state18;
reg   [15:0] input_r_load_17_reg_900;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire   [14:0] layer1_output_q1;
reg   [14:0] layer1_output_load_reg_915;
wire    ap_CS_fsm_state22;
wire   [14:0] layer1_output_q0;
reg   [14:0] layer1_output_load_1_reg_920;
reg   [14:0] layer1_output_load_2_reg_935;
wire    ap_CS_fsm_state23;
reg   [14:0] layer1_output_load_3_reg_940;
reg   [14:0] layer1_output_load_4_reg_955;
wire    ap_CS_fsm_state24;
reg   [14:0] layer1_output_load_5_reg_960;
reg   [14:0] layer1_output_load_6_reg_975;
wire    ap_CS_fsm_state25;
reg   [14:0] layer1_output_load_7_reg_980;
reg   [14:0] layer1_output_load_8_reg_995;
wire    ap_CS_fsm_state26;
reg   [14:0] layer1_output_load_9_reg_1000;
reg   [14:0] layer1_output_load_10_reg_1015;
wire    ap_CS_fsm_state27;
reg   [14:0] layer1_output_load_11_reg_1020;
reg   [14:0] layer1_output_load_12_reg_1035;
wire    ap_CS_fsm_state28;
reg   [14:0] layer1_output_load_13_reg_1040;
reg   [14:0] layer1_output_load_14_reg_1055;
wire    ap_CS_fsm_state29;
reg   [14:0] layer1_output_load_15_reg_1060;
reg   [14:0] layer1_output_load_16_reg_1075;
wire    ap_CS_fsm_state30;
reg   [14:0] layer1_output_load_17_reg_1080;
reg   [14:0] layer1_output_load_18_reg_1095;
wire    ap_CS_fsm_state31;
reg   [14:0] layer1_output_load_19_reg_1100;
wire    ap_CS_fsm_state33;
wire   [15:0] layer2_output_q0;
reg   [15:0] max_val_reg_1110;
wire    ap_CS_fsm_state34;
reg   [4:0] layer1_output_address0;
reg    layer1_output_ce0;
reg    layer1_output_we0;
reg   [4:0] layer1_output_address1;
reg    layer1_output_ce1;
reg   [2:0] layer2_output_address0;
reg    layer2_output_ce0;
reg    layer2_output_we0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_ready;
wire   [4:0] grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_we0;
wire   [14:0] grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_d0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_ready;
wire   [2:0] grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_we0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_d0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_ready;
wire   [2:0] grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_layer2_output_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_layer2_output_ce0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_max_val_1_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_max_val_1_out_ap_vld;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_ready;
wire   [2:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_layer2_output_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_layer2_output_ce0;
wire   [2:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_we0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_d0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_sum_4_out;
wire    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_sum_4_out_ap_vld;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_done;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_idle;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_ready;
wire   [2:0] grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_address0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_ce0;
wire    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_we0;
wire   [15:0] grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_d0;
reg    grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start_reg;
wire    ap_CS_fsm_state32;
reg    grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start_reg;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
reg    grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start_reg;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
reg    grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start_reg;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
reg   [39:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
reg    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
reg    ap_ST_fsm_state40_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start_reg = 1'b0;
#0 grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start_reg = 1'b0;
end

neural_network_layer1_output_RAM_AUTO_1R1W #(
    .DataWidth( 15 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
layer1_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer1_output_address0),
    .ce0(layer1_output_ce0),
    .we0(layer1_output_we0),
    .d0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_d0),
    .q0(layer1_output_q0),
    .address1(layer1_output_address1),
    .ce1(layer1_output_ce1),
    .q1(layer1_output_q1)
);

neural_network_layer2_output_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer2_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer2_output_address0),
    .ce0(layer2_output_ce0),
    .we0(layer2_output_we0),
    .d0(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_d0),
    .q0(layer2_output_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1 grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_ready),
    .sext_ln61(input_r_load_reg_730),
    .sext_ln61_1(input_r_load_1_reg_740),
    .sext_ln61_2(input_r_load_2_reg_750),
    .sext_ln61_3(input_r_load_3_reg_760),
    .sext_ln61_4(input_r_load_4_reg_770),
    .sext_ln61_5(input_r_load_5_reg_780),
    .sext_ln61_6(input_r_load_6_reg_790),
    .sext_ln61_7(input_r_load_7_reg_800),
    .sext_ln61_8(input_r_load_8_reg_810),
    .sext_ln61_9(input_r_load_9_reg_820),
    .sext_ln61_10(input_r_load_10_reg_830),
    .sext_ln61_11(input_r_load_11_reg_840),
    .sext_ln61_12(input_r_load_12_reg_850),
    .sext_ln61_13(input_r_load_13_reg_860),
    .sext_ln61_14(input_r_load_14_reg_870),
    .sext_ln61_15(input_r_load_15_reg_880),
    .sext_ln61_16(input_r_load_16_reg_890),
    .sext_ln61_17(input_r_load_17_reg_900),
    .layer1_output_address0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_address0),
    .layer1_output_ce0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_ce0),
    .layer1_output_we0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_we0),
    .layer1_output_d0(grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_d0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3 grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_ready),
    .zext_ln73(layer1_output_load_reg_915),
    .zext_ln73_1(layer1_output_load_1_reg_920),
    .zext_ln73_2(layer1_output_load_2_reg_935),
    .zext_ln73_3(layer1_output_load_3_reg_940),
    .zext_ln73_4(layer1_output_load_4_reg_955),
    .zext_ln73_5(layer1_output_load_5_reg_960),
    .zext_ln73_6(layer1_output_load_6_reg_975),
    .zext_ln73_7(layer1_output_load_7_reg_980),
    .zext_ln73_8(layer1_output_load_8_reg_995),
    .zext_ln73_9(layer1_output_load_9_reg_1000),
    .zext_ln73_10(layer1_output_load_10_reg_1015),
    .zext_ln73_11(layer1_output_load_11_reg_1020),
    .zext_ln73_12(layer1_output_load_12_reg_1035),
    .zext_ln73_13(layer1_output_load_13_reg_1040),
    .zext_ln73_14(layer1_output_load_14_reg_1055),
    .zext_ln73_15(layer1_output_load_15_reg_1060),
    .zext_ln73_16(layer1_output_load_16_reg_1075),
    .zext_ln73_17(layer1_output_load_17_reg_1080),
    .zext_ln73_18(layer1_output_load_18_reg_1095),
    .zext_ln73_19(layer1_output_load_19_reg_1100),
    .layer2_output_address0(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_address0),
    .layer2_output_ce0(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_ce0),
    .layer2_output_we0(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_we0),
    .layer2_output_d0(grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_d0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_22_1 grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_ready),
    .max_val(max_val_reg_1110),
    .layer2_output_address0(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_layer2_output_address0),
    .layer2_output_ce0(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_layer2_output_ce0),
    .layer2_output_q0(layer2_output_q0),
    .max_val_1_out(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_max_val_1_out),
    .max_val_1_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_max_val_1_out_ap_vld)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_28_2 grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_ready),
    .layer2_output_address0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_layer2_output_address0),
    .layer2_output_ce0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_layer2_output_ce0),
    .layer2_output_q0(layer2_output_q0),
    .conv_i_i13_i_i8(grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_max_val_1_out),
    .output_r_address0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_address0),
    .output_r_ce0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_ce0),
    .output_r_we0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_we0),
    .output_r_d0(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_d0),
    .sum_4_out(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_sum_4_out),
    .sum_4_out_ap_vld(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_sum_4_out_ap_vld)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_35_3 grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start),
    .ap_done(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_done),
    .ap_idle(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_idle),
    .ap_ready(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_ready),
    .output_r_address0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_address0),
    .output_r_ce0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_ce0),
    .output_r_we0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_we0),
    .output_r_d0(grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_d0),
    .output_r_q0(output_r_q0),
    .sext_ln35(grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_sum_4_out)
);

neural_network_CONTROL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
CONTROL_s_axi_U(
    .AWVALID(s_axi_CONTROL_AWVALID),
    .AWREADY(s_axi_CONTROL_AWREADY),
    .AWADDR(s_axi_CONTROL_AWADDR),
    .WVALID(s_axi_CONTROL_WVALID),
    .WREADY(s_axi_CONTROL_WREADY),
    .WDATA(s_axi_CONTROL_WDATA),
    .WSTRB(s_axi_CONTROL_WSTRB),
    .ARVALID(s_axi_CONTROL_ARVALID),
    .ARREADY(s_axi_CONTROL_ARREADY),
    .ARADDR(s_axi_CONTROL_ARADDR),
    .RVALID(s_axi_CONTROL_RVALID),
    .RREADY(s_axi_CONTROL_RREADY),
    .RDATA(s_axi_CONTROL_RDATA),
    .RRESP(s_axi_CONTROL_RRESP),
    .BVALID(s_axi_CONTROL_BVALID),
    .BREADY(s_axi_CONTROL_BREADY),
    .BRESP(s_axi_CONTROL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

neural_network_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_r_address0(input_r_address0),
    .input_r_ce0(input_r_ce0),
    .input_r_q0(input_r_q0)
);

neural_network_OUTPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_OUTPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_OUTPUT_DATA_WIDTH ))
OUTPUT_s_axi_U(
    .AWVALID(s_axi_OUTPUT_AWVALID),
    .AWREADY(s_axi_OUTPUT_AWREADY),
    .AWADDR(s_axi_OUTPUT_AWADDR),
    .WVALID(s_axi_OUTPUT_WVALID),
    .WREADY(s_axi_OUTPUT_WREADY),
    .WDATA(s_axi_OUTPUT_WDATA),
    .WSTRB(s_axi_OUTPUT_WSTRB),
    .ARVALID(s_axi_OUTPUT_ARVALID),
    .ARREADY(s_axi_OUTPUT_ARREADY),
    .ARADDR(s_axi_OUTPUT_ARADDR),
    .RVALID(s_axi_OUTPUT_RVALID),
    .RREADY(s_axi_OUTPUT_RREADY),
    .RDATA(s_axi_OUTPUT_RDATA),
    .RRESP(s_axi_OUTPUT_RRESP),
    .BVALID(s_axi_OUTPUT_BVALID),
    .BREADY(s_axi_OUTPUT_BREADY),
    .BRESP(s_axi_OUTPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .output_r_address0(output_r_address0),
    .output_r_ce0(output_r_ce0),
    .output_r_we0(output_r_we0),
    .output_r_d0(output_r_d0),
    .output_r_q0(output_r_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state39)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state31)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start_reg <= 1'b1;
        end else if ((grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_ready == 1'b1)) begin
            grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_load_10_reg_830 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_load_11_reg_840 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        input_r_load_12_reg_850 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_r_load_13_reg_860 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        input_r_load_14_reg_870 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        input_r_load_15_reg_880 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        input_r_load_16_reg_890 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_load_17_reg_900 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_load_1_reg_740 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_load_2_reg_750 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_load_3_reg_760 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_load_4_reg_770 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_load_5_reg_780 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_load_6_reg_790 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_load_7_reg_800 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_load_8_reg_810 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_load_9_reg_820 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_r_load_reg_730 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        layer1_output_load_10_reg_1015 <= layer1_output_q1;
        layer1_output_load_11_reg_1020 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        layer1_output_load_12_reg_1035 <= layer1_output_q1;
        layer1_output_load_13_reg_1040 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        layer1_output_load_14_reg_1055 <= layer1_output_q1;
        layer1_output_load_15_reg_1060 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer1_output_load_16_reg_1075 <= layer1_output_q1;
        layer1_output_load_17_reg_1080 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        layer1_output_load_18_reg_1095 <= layer1_output_q1;
        layer1_output_load_19_reg_1100 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer1_output_load_1_reg_920 <= layer1_output_q0;
        layer1_output_load_reg_915 <= layer1_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer1_output_load_2_reg_935 <= layer1_output_q1;
        layer1_output_load_3_reg_940 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer1_output_load_4_reg_955 <= layer1_output_q1;
        layer1_output_load_5_reg_960 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        layer1_output_load_6_reg_975 <= layer1_output_q1;
        layer1_output_load_7_reg_980 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        layer1_output_load_8_reg_995 <= layer1_output_q1;
        layer1_output_load_9_reg_1000 <= layer1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        max_val_reg_1110 <= layer2_output_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_done == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_done == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_done == 1'b0)) begin
        ap_ST_fsm_state36_blk = 1'b1;
    end else begin
        ap_ST_fsm_state36_blk = 1'b0;
    end
end

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_done == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_done == 1'b0)) begin
        ap_ST_fsm_state40_blk = 1'b1;
    end else begin
        ap_ST_fsm_state40_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        input_r_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        input_r_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        input_r_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        input_r_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        input_r_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_r_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        input_r_address0 = 64'd0;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer1_output_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer1_output_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer1_output_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer1_output_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer1_output_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer1_output_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer1_output_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer1_output_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer1_output_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer1_output_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer1_output_address0 = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_address0;
    end else begin
        layer1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer1_output_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer1_output_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer1_output_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer1_output_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer1_output_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer1_output_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer1_output_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer1_output_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer1_output_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer1_output_address1 = 64'd0;
    end else begin
        layer1_output_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        layer1_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer1_output_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_ce0;
    end else begin
        layer1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        layer1_output_ce1 = 1'b1;
    end else begin
        layer1_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        layer1_output_we0 = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_layer1_output_we0;
    end else begin
        layer1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        layer2_output_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer2_output_address0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_layer2_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer2_output_address0 = grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_layer2_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer2_output_address0 = grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_address0;
    end else begin
        layer2_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        layer2_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer2_output_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_layer2_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer2_output_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_layer2_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer2_output_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_ce0;
    end else begin
        layer2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        layer2_output_we0 = grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_layer2_output_we0;
    end else begin
        layer2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        output_r_address0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_r_address0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_address0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        output_r_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_r_ce0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_ce0;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        output_r_d0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_r_d0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_d0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        output_r_we0 = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_output_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_r_we0 = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_output_r_we0;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_22_1_fu_676_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_28_2_fu_683_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_35_3_fu_698_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_56_1_fu_545_ap_start_reg;

assign grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start = grp_neural_network_Pipeline_VITIS_LOOP_68_3_fu_607_ap_start_reg;

endmodule //neural_network
