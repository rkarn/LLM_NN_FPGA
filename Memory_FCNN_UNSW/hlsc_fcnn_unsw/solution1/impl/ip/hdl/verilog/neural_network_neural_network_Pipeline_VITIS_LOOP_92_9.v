// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_92_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cmp131,
        layer2_weight_tile_address0,
        layer2_weight_tile_ce0,
        layer2_weight_tile_q0,
        layer2_weight_tile_1_address0,
        layer2_weight_tile_1_ce0,
        layer2_weight_tile_1_q0,
        layer2_weight_tile_2_address0,
        layer2_weight_tile_2_ce0,
        layer2_weight_tile_2_q0,
        layer2_weight_tile_3_address0,
        layer2_weight_tile_3_ce0,
        layer2_weight_tile_3_q0,
        tile_1,
        layer1_output_address0,
        layer1_output_ce0,
        layer1_output_q0,
        layer1_output_1_address0,
        layer1_output_1_ce0,
        layer1_output_1_q0,
        layer1_output_2_address0,
        layer1_output_2_ce0,
        layer1_output_2_q0,
        layer1_output_3_address0,
        layer1_output_3_ce0,
        layer1_output_3_q0,
        conv_i_i_le34_out_i,
        conv_i_i_le34_out_o,
        conv_i_i_le34_out_o_ap_vld,
        conv_i_i_le32_out_i,
        conv_i_i_le32_out_o,
        conv_i_i_le32_out_o_ap_vld,
        conv_i_i_le30_out_i,
        conv_i_i_le30_out_o,
        conv_i_i_le30_out_o_ap_vld,
        conv_i_i_le28_out_i,
        conv_i_i_le28_out_o,
        conv_i_i_le28_out_o_ap_vld,
        conv_i_i_le26_out_i,
        conv_i_i_le26_out_o,
        conv_i_i_le26_out_o_ap_vld,
        conv_i_i_le24_out_i,
        conv_i_i_le24_out_o,
        conv_i_i_le24_out_o_ap_vld,
        conv_i_i_le22_out_i,
        conv_i_i_le22_out_o,
        conv_i_i_le22_out_o_ap_vld,
        conv_i_i_le20_out_i,
        conv_i_i_le20_out_o,
        conv_i_i_le20_out_o_ap_vld,
        conv_i_i_le18_out_i,
        conv_i_i_le18_out_o,
        conv_i_i_le18_out_o_ap_vld,
        conv_i_i_le16_out_i,
        conv_i_i_le16_out_o,
        conv_i_i_le16_out_o_ap_vld,
        p_0_0_0114_i3_out_i,
        p_0_0_0114_i3_out_o,
        p_0_0_0114_i3_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] cmp131;
output  [3:0] layer2_weight_tile_address0;
output   layer2_weight_tile_ce0;
input  [12:0] layer2_weight_tile_q0;
output  [3:0] layer2_weight_tile_1_address0;
output   layer2_weight_tile_1_ce0;
input  [12:0] layer2_weight_tile_1_q0;
output  [3:0] layer2_weight_tile_2_address0;
output   layer2_weight_tile_2_ce0;
input  [12:0] layer2_weight_tile_2_q0;
output  [3:0] layer2_weight_tile_3_address0;
output   layer2_weight_tile_3_ce0;
input  [12:0] layer2_weight_tile_3_q0;
input  [5:0] tile_1;
output  [3:0] layer1_output_address0;
output   layer1_output_ce0;
input  [14:0] layer1_output_q0;
output  [3:0] layer1_output_1_address0;
output   layer1_output_1_ce0;
input  [14:0] layer1_output_1_q0;
output  [3:0] layer1_output_2_address0;
output   layer1_output_2_ce0;
input  [14:0] layer1_output_2_q0;
output  [3:0] layer1_output_3_address0;
output   layer1_output_3_ce0;
input  [14:0] layer1_output_3_q0;
input  [15:0] conv_i_i_le34_out_i;
output  [15:0] conv_i_i_le34_out_o;
output   conv_i_i_le34_out_o_ap_vld;
input  [15:0] conv_i_i_le32_out_i;
output  [15:0] conv_i_i_le32_out_o;
output   conv_i_i_le32_out_o_ap_vld;
input  [15:0] conv_i_i_le30_out_i;
output  [15:0] conv_i_i_le30_out_o;
output   conv_i_i_le30_out_o_ap_vld;
input  [15:0] conv_i_i_le28_out_i;
output  [15:0] conv_i_i_le28_out_o;
output   conv_i_i_le28_out_o_ap_vld;
input  [15:0] conv_i_i_le26_out_i;
output  [15:0] conv_i_i_le26_out_o;
output   conv_i_i_le26_out_o_ap_vld;
input  [15:0] conv_i_i_le24_out_i;
output  [15:0] conv_i_i_le24_out_o;
output   conv_i_i_le24_out_o_ap_vld;
input  [15:0] conv_i_i_le22_out_i;
output  [15:0] conv_i_i_le22_out_o;
output   conv_i_i_le22_out_o_ap_vld;
input  [15:0] conv_i_i_le20_out_i;
output  [15:0] conv_i_i_le20_out_o;
output   conv_i_i_le20_out_o_ap_vld;
input  [15:0] conv_i_i_le18_out_i;
output  [15:0] conv_i_i_le18_out_o;
output   conv_i_i_le18_out_o_ap_vld;
input  [15:0] conv_i_i_le16_out_i;
output  [15:0] conv_i_i_le16_out_o;
output   conv_i_i_le16_out_o_ap_vld;
input  [15:0] p_0_0_0114_i3_out_i;
output  [15:0] p_0_0_0114_i3_out_o;
output   p_0_0_0114_i3_out_o_ap_vld;

reg ap_idle;
reg layer2_weight_tile_ce0;
reg layer2_weight_tile_1_ce0;
reg layer2_weight_tile_2_ce0;
reg layer2_weight_tile_3_ce0;
reg layer1_output_ce0;
reg layer1_output_1_ce0;
reg layer1_output_2_ce0;
reg layer1_output_3_ce0;
reg[15:0] conv_i_i_le34_out_o;
reg conv_i_i_le34_out_o_ap_vld;
reg[15:0] conv_i_i_le32_out_o;
reg conv_i_i_le32_out_o_ap_vld;
reg[15:0] conv_i_i_le30_out_o;
reg conv_i_i_le30_out_o_ap_vld;
reg[15:0] conv_i_i_le28_out_o;
reg conv_i_i_le28_out_o_ap_vld;
reg[15:0] conv_i_i_le26_out_o;
reg conv_i_i_le26_out_o_ap_vld;
reg[15:0] conv_i_i_le24_out_o;
reg conv_i_i_le24_out_o_ap_vld;
reg[15:0] conv_i_i_le22_out_o;
reg conv_i_i_le22_out_o_ap_vld;
reg[15:0] conv_i_i_le20_out_o;
reg conv_i_i_le20_out_o_ap_vld;
reg[15:0] conv_i_i_le18_out_o;
reg conv_i_i_le18_out_o_ap_vld;
reg[15:0] conv_i_i_le16_out_o;
reg conv_i_i_le16_out_o_ap_vld;
reg[15:0] p_0_0_0114_i3_out_o;
reg p_0_0_0114_i3_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln92_reg_768;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] layer2_bias_address0;
reg    layer2_bias_ce0;
wire   [10:0] layer2_bias_q0;
wire   [0:0] cmp131_read_reg_748;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_754;
reg   [3:0] i_1_reg_754_pp0_iter1_reg;
wire   [0:0] icmp_ln92_fu_245_p2;
reg   [10:0] layer2_bias_load_reg_817;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg  signed [12:0] layer2_weight_tile_1_load_reg_822;
reg  signed [12:0] layer2_weight_tile_2_load_reg_827;
reg  signed [12:0] layer2_weight_tile_3_load_reg_832;
reg   [14:0] layer1_output_1_load_reg_837;
reg   [14:0] layer1_output_2_load_reg_842;
reg   [14:0] layer1_output_3_load_reg_847;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [15:0] conv_i_i_le16_out_load_reg_872;
wire    ap_block_pp0_stage3_11001;
reg   [15:0] conv_i_i_le18_out_load_reg_878;
reg   [15:0] conv_i_i_le20_out_load_reg_883;
reg   [15:0] conv_i_i_le22_out_load_reg_888;
reg   [15:0] conv_i_i_le24_out_load_reg_893;
reg   [15:0] conv_i_i_le26_out_load_reg_898;
reg   [15:0] conv_i_i_le28_out_load_reg_903;
reg   [15:0] conv_i_i_le30_out_load_reg_908;
reg   [15:0] conv_i_i_le32_out_load_reg_913;
reg   [15:0] conv_i_i_le34_out_load_reg_918;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln92_fu_257_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln96_fu_276_p1;
wire   [15:0] layer2_output_fu_561_p3;
wire    ap_block_pp0_stage3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le34_out_load;
wire   [15:0] layer2_output_2_fu_568_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le32_out_load;
wire   [15:0] layer2_output_3_fu_575_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le30_out_load;
wire   [15:0] layer2_output_4_fu_582_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le28_out_load;
wire   [15:0] layer2_output_5_fu_589_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le26_out_load;
wire   [15:0] layer2_output_6_fu_596_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le24_out_load;
wire   [15:0] layer2_output_7_fu_603_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le22_out_load;
wire   [15:0] layer2_output_8_fu_610_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le20_out_load;
wire   [15:0] layer2_output_9_fu_617_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le18_out_load;
wire   [15:0] layer2_output_10_fu_624_p3;
reg   [15:0] ap_sig_allocacmp_conv_i_i_le16_out_load;
wire   [15:0] max_val_fu_631_p3;
reg   [3:0] i_fu_104;
wire   [3:0] add_ln92_fu_251_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
wire   [3:0] lshr_ln1_fu_266_p4;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire  signed [15:0] sext_ln94_fu_343_p1;
wire   [15:0] tmp_4_fu_346_p12;
wire   [15:0] empty_fu_371_p3;
wire  signed [23:0] tmp_s_fu_392_p1;
wire   [23:0] grp_fu_705_p3;
wire   [15:0] tmp_s_fu_392_p4;
wire  signed [23:0] tmp_1_fu_415_p1;
wire   [23:0] grp_fu_714_p3;
wire   [15:0] tmp_1_fu_415_p4;
wire  signed [23:0] tmp_2_fu_432_p1;
wire   [23:0] grp_fu_723_p3;
wire   [15:0] tmp_2_fu_432_p4;
wire  signed [23:0] trunc_ln96_3_fu_459_p1;
wire   [23:0] grp_fu_732_p3;
wire   [0:0] icmp_ln98_fu_468_p2;
wire   [0:0] icmp_ln98_1_fu_473_p2;
wire   [0:0] icmp_ln98_2_fu_478_p2;
wire   [0:0] icmp_ln98_3_fu_483_p2;
wire   [0:0] or_ln98_1_fu_519_p2;
wire   [0:0] or_ln98_fu_513_p2;
wire   [0:0] icmp_ln98_4_fu_488_p2;
wire   [0:0] icmp_ln98_5_fu_493_p2;
wire   [0:0] icmp_ln98_7_fu_503_p2;
wire   [0:0] icmp_ln98_8_fu_508_p2;
wire   [0:0] or_ln98_4_fu_537_p2;
wire   [0:0] icmp_ln98_6_fu_498_p2;
wire   [0:0] or_ln98_5_fu_543_p2;
wire   [0:0] or_ln98_3_fu_531_p2;
wire   [0:0] or_ln98_6_fu_549_p2;
wire   [0:0] or_ln98_2_fu_525_p2;
wire   [0:0] or_ln98_7_fu_555_p2;
wire   [15:0] trunc_ln96_3_fu_459_p4;
wire   [15:0] layer2_output_1_fu_453_p3;
wire   [14:0] grp_fu_705_p1;
wire   [23:0] grp_fu_705_p2;
wire   [14:0] grp_fu_714_p1;
wire   [23:0] grp_fu_714_p2;
wire   [14:0] grp_fu_723_p1;
wire   [23:0] grp_fu_723_p2;
wire   [14:0] grp_fu_732_p1;
wire   [23:0] grp_fu_732_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [23:0] grp_fu_705_p10;
wire   [23:0] grp_fu_714_p10;
wire   [23:0] grp_fu_723_p10;
wire   [23:0] grp_fu_732_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_92_9_layer2_bias_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_bias_address0),
    .ce0(layer2_bias_ce0),
    .q0(layer2_bias_q0)
);

neural_network_mux_10_4_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_10_4_16_1_1_U191(
    .din0(ap_sig_allocacmp_conv_i_i_le16_out_load),
    .din1(ap_sig_allocacmp_conv_i_i_le18_out_load),
    .din2(ap_sig_allocacmp_conv_i_i_le20_out_load),
    .din3(ap_sig_allocacmp_conv_i_i_le22_out_load),
    .din4(ap_sig_allocacmp_conv_i_i_le24_out_load),
    .din5(ap_sig_allocacmp_conv_i_i_le26_out_load),
    .din6(ap_sig_allocacmp_conv_i_i_le28_out_load),
    .din7(ap_sig_allocacmp_conv_i_i_le30_out_load),
    .din8(ap_sig_allocacmp_conv_i_i_le32_out_load),
    .din9(ap_sig_allocacmp_conv_i_i_le34_out_load),
    .din10(i_1_reg_754),
    .dout(tmp_4_fu_346_p12)
);

neural_network_mac_muladd_13s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_15ns_24ns_24_4_1_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weight_tile_q0),
    .din1(grp_fu_705_p1),
    .din2(grp_fu_705_p2),
    .ce(1'b1),
    .dout(grp_fu_705_p3)
);

neural_network_mac_muladd_13s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_15ns_24ns_24_4_1_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weight_tile_1_load_reg_822),
    .din1(grp_fu_714_p1),
    .din2(grp_fu_714_p2),
    .ce(1'b1),
    .dout(grp_fu_714_p3)
);

neural_network_mac_muladd_13s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_15ns_24ns_24_4_1_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weight_tile_2_load_reg_827),
    .din1(grp_fu_723_p1),
    .din2(grp_fu_723_p2),
    .ce(1'b1),
    .dout(grp_fu_723_p3)
);

neural_network_mac_muladd_13s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_15ns_24ns_24_4_1_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weight_tile_3_load_reg_832),
    .din1(grp_fu_732_p1),
    .din2(grp_fu_732_p2),
    .ce(1'b1),
    .dout(grp_fu_732_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln92_fu_245_p2 == 1'd0))) begin
            i_fu_104 <= add_ln92_fu_251_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_768 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le16_out_load_reg_872 <= ap_sig_allocacmp_conv_i_i_le16_out_load;
        conv_i_i_le18_out_load_reg_878 <= ap_sig_allocacmp_conv_i_i_le18_out_load;
        conv_i_i_le20_out_load_reg_883 <= ap_sig_allocacmp_conv_i_i_le20_out_load;
        conv_i_i_le22_out_load_reg_888 <= ap_sig_allocacmp_conv_i_i_le22_out_load;
        conv_i_i_le24_out_load_reg_893 <= ap_sig_allocacmp_conv_i_i_le24_out_load;
        conv_i_i_le26_out_load_reg_898 <= ap_sig_allocacmp_conv_i_i_le26_out_load;
        conv_i_i_le28_out_load_reg_903 <= ap_sig_allocacmp_conv_i_i_le28_out_load;
        conv_i_i_le30_out_load_reg_908 <= ap_sig_allocacmp_conv_i_i_le30_out_load;
        conv_i_i_le32_out_load_reg_913 <= ap_sig_allocacmp_conv_i_i_le32_out_load;
        conv_i_i_le34_out_load_reg_918 <= ap_sig_allocacmp_conv_i_i_le34_out_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_754 <= ap_sig_allocacmp_i_1;
        i_1_reg_754_pp0_iter1_reg <= i_1_reg_754;
        icmp_ln92_reg_768 <= icmp_ln92_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_768 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer1_output_1_load_reg_837 <= layer1_output_1_q0;
        layer1_output_2_load_reg_842 <= layer1_output_2_q0;
        layer1_output_3_load_reg_847 <= layer1_output_3_q0;
        layer2_weight_tile_1_load_reg_822 <= layer2_weight_tile_1_q0;
        layer2_weight_tile_2_load_reg_827 <= layer2_weight_tile_2_q0;
        layer2_weight_tile_3_load_reg_832 <= layer2_weight_tile_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_768 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp131_read_reg_748 == 1'd1))) begin
        layer2_bias_load_reg_817 <= layer2_bias_q0;
    end
end

always @ (*) begin
    if (((icmp_ln92_reg_768 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le16_out_load = layer2_output_10_fu_624_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le16_out_load = conv_i_i_le16_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le18_out_load = layer2_output_9_fu_617_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le18_out_load = conv_i_i_le18_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le20_out_load = layer2_output_8_fu_610_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le20_out_load = conv_i_i_le20_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le22_out_load = layer2_output_7_fu_603_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le22_out_load = conv_i_i_le22_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le24_out_load = layer2_output_6_fu_596_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le24_out_load = conv_i_i_le24_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le26_out_load = layer2_output_5_fu_589_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le26_out_load = conv_i_i_le26_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le28_out_load = layer2_output_4_fu_582_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le28_out_load = conv_i_i_le28_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le30_out_load = layer2_output_3_fu_575_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le30_out_load = conv_i_i_le30_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le32_out_load = layer2_output_2_fu_568_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le32_out_load = conv_i_i_le32_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_conv_i_i_le34_out_load = layer2_output_fu_561_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_le34_out_load = conv_i_i_le34_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le16_out_o = layer2_output_10_fu_624_p3;
    end else begin
        conv_i_i_le16_out_o = conv_i_i_le16_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le16_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le16_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le18_out_o = layer2_output_9_fu_617_p3;
    end else begin
        conv_i_i_le18_out_o = conv_i_i_le18_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le18_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le18_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le20_out_o = layer2_output_8_fu_610_p3;
    end else begin
        conv_i_i_le20_out_o = conv_i_i_le20_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le20_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le20_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le22_out_o = layer2_output_7_fu_603_p3;
    end else begin
        conv_i_i_le22_out_o = conv_i_i_le22_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le22_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le22_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le24_out_o = layer2_output_6_fu_596_p3;
    end else begin
        conv_i_i_le24_out_o = conv_i_i_le24_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le24_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le24_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le26_out_o = layer2_output_5_fu_589_p3;
    end else begin
        conv_i_i_le26_out_o = conv_i_i_le26_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le26_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le26_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le28_out_o = layer2_output_4_fu_582_p3;
    end else begin
        conv_i_i_le28_out_o = conv_i_i_le28_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le28_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le28_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le30_out_o = layer2_output_3_fu_575_p3;
    end else begin
        conv_i_i_le30_out_o = conv_i_i_le30_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le30_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le30_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le32_out_o = layer2_output_2_fu_568_p3;
    end else begin
        conv_i_i_le32_out_o = conv_i_i_le32_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le32_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le32_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le34_out_o = layer2_output_fu_561_p3;
    end else begin
        conv_i_i_le34_out_o = conv_i_i_le34_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_i_i_le34_out_o_ap_vld = 1'b1;
    end else begin
        conv_i_i_le34_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_1_ce0 = 1'b1;
    end else begin
        layer1_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_2_ce0 = 1'b1;
    end else begin
        layer1_output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_3_ce0 = 1'b1;
    end else begin
        layer1_output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_ce0 = 1'b1;
    end else begin
        layer1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_bias_ce0 = 1'b1;
    end else begin
        layer2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weight_tile_1_ce0 = 1'b1;
    end else begin
        layer2_weight_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weight_tile_2_ce0 = 1'b1;
    end else begin
        layer2_weight_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weight_tile_3_ce0 = 1'b1;
    end else begin
        layer2_weight_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weight_tile_ce0 = 1'b1;
    end else begin
        layer2_weight_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_0_0_0114_i3_out_o = max_val_fu_631_p3;
    end else begin
        p_0_0_0114_i3_out_o = p_0_0_0114_i3_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_0_0_0114_i3_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0114_i3_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln92_fu_251_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign cmp131_read_reg_748 = cmp131;

assign empty_fu_371_p3 = ((cmp131[0:0] == 1'b1) ? sext_ln94_fu_343_p1 : tmp_4_fu_346_p12);

assign grp_fu_705_p1 = grp_fu_705_p10;

assign grp_fu_705_p10 = layer1_output_q0;

assign grp_fu_705_p2 = {{empty_fu_371_p3}, {8'd0}};

assign grp_fu_714_p1 = grp_fu_714_p10;

assign grp_fu_714_p10 = layer1_output_1_load_reg_837;

assign grp_fu_714_p2 = {{tmp_s_fu_392_p4}, {8'd0}};

assign grp_fu_723_p1 = grp_fu_723_p10;

assign grp_fu_723_p10 = layer1_output_2_load_reg_842;

assign grp_fu_723_p2 = {{tmp_1_fu_415_p4}, {8'd0}};

assign grp_fu_732_p1 = grp_fu_732_p10;

assign grp_fu_732_p10 = layer1_output_3_load_reg_847;

assign grp_fu_732_p2 = {{tmp_2_fu_432_p4}, {8'd0}};

assign icmp_ln92_fu_245_p2 = ((ap_sig_allocacmp_i_1 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln98_1_fu_473_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln98_2_fu_478_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln98_3_fu_483_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln98_4_fu_488_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln98_5_fu_493_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln98_6_fu_498_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln98_7_fu_503_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln98_8_fu_508_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_468_p2 = ((i_1_reg_754_pp0_iter1_reg == 4'd0) ? 1'b1 : 1'b0);

assign layer1_output_1_address0 = zext_ln96_fu_276_p1;

assign layer1_output_2_address0 = zext_ln96_fu_276_p1;

assign layer1_output_3_address0 = zext_ln96_fu_276_p1;

assign layer1_output_address0 = zext_ln96_fu_276_p1;

assign layer2_bias_address0 = zext_ln92_fu_257_p1;

assign layer2_output_10_fu_624_p3 = ((icmp_ln98_fu_468_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le16_out_load_reg_872);

assign layer2_output_1_fu_453_p3 = ((cmp131[0:0] == 1'b1) ? p_0_0_0114_i3_out_i : conv_i_i_le16_out_load_reg_872);

assign layer2_output_2_fu_568_p3 = ((icmp_ln98_8_fu_508_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le32_out_load_reg_913);

assign layer2_output_3_fu_575_p3 = ((icmp_ln98_7_fu_503_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le30_out_load_reg_908);

assign layer2_output_4_fu_582_p3 = ((icmp_ln98_6_fu_498_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le28_out_load_reg_903);

assign layer2_output_5_fu_589_p3 = ((icmp_ln98_5_fu_493_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le26_out_load_reg_898);

assign layer2_output_6_fu_596_p3 = ((icmp_ln98_4_fu_488_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le24_out_load_reg_893);

assign layer2_output_7_fu_603_p3 = ((icmp_ln98_3_fu_483_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le22_out_load_reg_888);

assign layer2_output_8_fu_610_p3 = ((icmp_ln98_2_fu_478_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le20_out_load_reg_883);

assign layer2_output_9_fu_617_p3 = ((icmp_ln98_1_fu_473_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : conv_i_i_le18_out_load_reg_878);

assign layer2_output_fu_561_p3 = ((or_ln98_7_fu_555_p2[0:0] == 1'b1) ? conv_i_i_le34_out_load_reg_918 : trunc_ln96_3_fu_459_p4);

assign layer2_weight_tile_1_address0 = zext_ln92_fu_257_p1;

assign layer2_weight_tile_2_address0 = zext_ln92_fu_257_p1;

assign layer2_weight_tile_3_address0 = zext_ln92_fu_257_p1;

assign layer2_weight_tile_address0 = zext_ln92_fu_257_p1;

assign lshr_ln1_fu_266_p4 = {{tile_1[5:2]}};

assign max_val_fu_631_p3 = ((icmp_ln98_fu_468_p2[0:0] == 1'b1) ? trunc_ln96_3_fu_459_p4 : layer2_output_1_fu_453_p3);

assign or_ln98_1_fu_519_p2 = (icmp_ln98_3_fu_483_p2 | icmp_ln98_2_fu_478_p2);

assign or_ln98_2_fu_525_p2 = (or_ln98_fu_513_p2 | or_ln98_1_fu_519_p2);

assign or_ln98_3_fu_531_p2 = (icmp_ln98_5_fu_493_p2 | icmp_ln98_4_fu_488_p2);

assign or_ln98_4_fu_537_p2 = (icmp_ln98_8_fu_508_p2 | icmp_ln98_7_fu_503_p2);

assign or_ln98_5_fu_543_p2 = (or_ln98_4_fu_537_p2 | icmp_ln98_6_fu_498_p2);

assign or_ln98_6_fu_549_p2 = (or_ln98_5_fu_543_p2 | or_ln98_3_fu_531_p2);

assign or_ln98_7_fu_555_p2 = (or_ln98_6_fu_549_p2 | or_ln98_2_fu_525_p2);

assign or_ln98_fu_513_p2 = (icmp_ln98_fu_468_p2 | icmp_ln98_1_fu_473_p2);

assign sext_ln94_fu_343_p1 = $signed(layer2_bias_load_reg_817);

assign tmp_1_fu_415_p1 = grp_fu_714_p3;

assign tmp_1_fu_415_p4 = {{tmp_1_fu_415_p1[23:8]}};

assign tmp_2_fu_432_p1 = grp_fu_723_p3;

assign tmp_2_fu_432_p4 = {{tmp_2_fu_432_p1[23:8]}};

assign tmp_s_fu_392_p1 = grp_fu_705_p3;

assign tmp_s_fu_392_p4 = {{tmp_s_fu_392_p1[23:8]}};

assign trunc_ln96_3_fu_459_p1 = grp_fu_732_p3;

assign trunc_ln96_3_fu_459_p4 = {{trunc_ln96_3_fu_459_p1[23:8]}};

assign zext_ln92_fu_257_p1 = ap_sig_allocacmp_i_1;

assign zext_ln96_fu_276_p1 = lshr_ln1_fu_266_p4;

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_92_9
