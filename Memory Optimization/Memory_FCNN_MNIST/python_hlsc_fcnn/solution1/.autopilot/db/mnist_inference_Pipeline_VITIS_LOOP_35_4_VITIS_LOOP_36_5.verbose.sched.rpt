

================================================================
== Vitis HLS Report for 'mnist_inference_Pipeline_VITIS_LOOP_35_4_VITIS_LOOP_36_5'
================================================================
* Date:           Sun Sep 15 04:39:33 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        python_hlsc_fcnn
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.058 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min    |    max    | min |  max |   Type  |
    +---------+---------+-----------+-----------+-----+------+---------+
    |        2|     1280|  20.000 ns|  12.800 us|    2|  1280|       no|
    +---------+---------+-----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip   |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  |   Count  | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |- VITIS_LOOP_35_4_VITIS_LOOP_36_5  |        0|     1278|        10|          1|          1|  0 ~ 1270|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.75>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 13 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 14 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 15 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tile_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %tile"   --->   Operation 16 'read' 'tile_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%add_ln35_1_read = read i14 @_ssdm_op_Read.ap_auto.i14, i14 %add_ln35_1"   --->   Operation 17 'read' 'add_ln35_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%select_ln27_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %select_ln27"   --->   Operation 18 'read' 'select_ln27_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.61ns)   --->   "%store_ln0 = store i14 0, i14 %indvar_flatten"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 20 [1/1] (1.61ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 21 [1/1] (1.61ns)   --->   "%store_ln0 = store i7 0, i7 %j"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.cond49"   --->   Operation 22 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j_1 = load i7 %j" [fcnn.cpp:36]   --->   Operation 23 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i14 %indvar_flatten" [fcnn.cpp:35]   --->   Operation 24 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i7 %j_1" [fcnn.cpp:36]   --->   Operation 25 'zext' 'zext_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (2.12ns)   --->   "%icmp_ln36 = icmp_eq  i10 %zext_ln36, i10 %select_ln27_read" [fcnn.cpp:36]   --->   Operation 26 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 2.12> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (2.13ns)   --->   "%icmp_ln35 = icmp_eq  i14 %indvar_flatten_load, i14 %add_ln35_1_read" [fcnn.cpp:35]   --->   Operation 27 'icmp' 'icmp_ln35' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (2.13ns)   --->   "%add_ln35_2 = add i14 %indvar_flatten_load, i14 1" [fcnn.cpp:35]   --->   Operation 28 'add' 'add_ln35_2' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln35 = br i1 %icmp_ln35, void %for.inc70, void %for.body86.lr.ph.preheader.exitStub" [fcnn.cpp:35]   --->   Operation 29 'br' 'br_ln35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%i_load = load i4 %i" [fcnn.cpp:35]   --->   Operation 30 'load' 'i_load' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.77ns)   --->   "%add_ln35 = add i4 %i_load, i4 1" [fcnn.cpp:35]   --->   Operation 31 'add' 'add_ln35' <Predicate = (!icmp_ln35)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.99ns)   --->   "%select_ln35 = select i1 %icmp_ln36, i7 0, i7 %j_1" [fcnn.cpp:35]   --->   Operation 32 'select' 'select_ln35' <Predicate = (!icmp_ln35)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.99ns)   --->   "%select_ln35_1 = select i1 %icmp_ln36, i4 %add_ln35, i4 %i_load" [fcnn.cpp:35]   --->   Operation 33 'select' 'select_ln35_1' <Predicate = (!icmp_ln35)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln38_1 = zext i4 %select_ln35_1" [fcnn.cpp:38]   --->   Operation 34 'zext' 'zext_ln38_1' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_1 : Operation 35 [3/3] (1.45ns) (grouped into DSP with root node add_ln38_2)   --->   "%mul_ln38 = mul i13 %zext_ln38_1, i13 784" [fcnn.cpp:38]   --->   Operation 35 'mul' 'mul_ln38' <Predicate = (!icmp_ln35)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 36 [1/1] (2.03ns)   --->   "%add_ln36_1 = add i7 %select_ln35, i7 1" [fcnn.cpp:36]   --->   Operation 36 'add' 'add_ln36_1' <Predicate = (!icmp_ln35)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.61ns)   --->   "%store_ln36 = store i14 %add_ln35_2, i14 %indvar_flatten" [fcnn.cpp:36]   --->   Operation 37 'store' 'store_ln36' <Predicate = (!icmp_ln35)> <Delay = 1.61>
ST_1 : Operation 38 [1/1] (1.61ns)   --->   "%store_ln36 = store i4 %select_ln35_1, i4 %i" [fcnn.cpp:36]   --->   Operation 38 'store' 'store_ln36' <Predicate = (!icmp_ln35)> <Delay = 1.61>
ST_1 : Operation 39 [1/1] (1.61ns)   --->   "%store_ln36 = store i7 %add_ln36_1, i7 %j" [fcnn.cpp:36]   --->   Operation 39 'store' 'store_ln36' <Predicate = (!icmp_ln35)> <Delay = 1.61>

State 2 <SV = 1> <Delay = 1.45>
ST_2 : Operation 40 [2/3] (1.45ns) (grouped into DSP with root node add_ln38_2)   --->   "%mul_ln38 = mul i13 %zext_ln38_1, i13 784" [fcnn.cpp:38]   --->   Operation 40 'mul' 'mul_ln38' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 4.22>
ST_3 : Operation 41 [1/3] (0.00ns) (grouped into DSP with root node add_ln38_2)   --->   "%mul_ln38 = mul i13 %zext_ln38_1, i13 784" [fcnn.cpp:38]   --->   Operation 41 'mul' 'mul_ln38' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln38_2 = zext i7 %select_ln35" [fcnn.cpp:38]   --->   Operation 42 'zext' 'zext_ln38_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (2.12ns)   --->   "%add_ln36 = add i10 %zext_ln38_2, i10 %tile_read" [fcnn.cpp:36]   --->   Operation 43 'add' 'add_ln36' <Predicate = true> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln38_4 = zext i10 %add_ln36" [fcnn.cpp:38]   --->   Operation 44 'zext' 'zext_ln38_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln38_2 = add i13 %mul_ln38, i13 %zext_ln38_4" [fcnn.cpp:38]   --->   Operation 45 'add' 'add_ln38_2' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 5.35>
ST_4 : Operation 46 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln38_2 = add i13 %mul_ln38, i13 %zext_ln38_4" [fcnn.cpp:38]   --->   Operation 46 'add' 'add_ln38_2' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln38_5 = zext i13 %add_ln38_2" [fcnn.cpp:38]   --->   Operation 47 'zext' 'zext_ln38_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%weights_addr = getelementptr i32 %weights, i64 0, i64 %zext_ln38_5" [fcnn.cpp:38]   --->   Operation 48 'getelementptr' 'weights_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [2/2] (3.25ns)   --->   "%weights_load = load i13 %weights_addr" [fcnn.cpp:38]   --->   Operation 49 'load' 'weights_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 7840> <ROM>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 50 [1/2] (3.25ns)   --->   "%weights_load = load i13 %weights_addr" [fcnn.cpp:38]   --->   Operation 50 'load' 'weights_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 7840> <ROM>

State 6 <SV = 5> <Delay = 4.09>
ST_6 : [1/1] (1.61ns)   --->   Input mux for Operation 51 '%pf = fpext i32 %weights_load'
ST_6 : Operation 51 [2/2] (2.48ns)   --->   "%pf = fpext i32 %weights_load" [fcnn.cpp:38]   --->   Operation 51 'fpext' 'pf' <Predicate = true> <Delay = 2.48> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.09>
ST_7 : Operation 52 [1/2] (4.09ns)   --->   "%pf = fpext i32 %weights_load" [fcnn.cpp:38]   --->   Operation 52 'fpext' 'pf' <Predicate = true> <Delay = 4.09> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_7 : Operation 53 [1/1] (0.00ns)   --->   "%bitcast_ln724 = bitcast i64 %pf" [fcnn.cpp:38]   --->   Operation 53 'bitcast' 'bitcast_ln724' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln38 = trunc i64 %bitcast_ln724" [fcnn.cpp:38]   --->   Operation 54 'trunc' 'trunc_ln38' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %bitcast_ln724, i32 63" [fcnn.cpp:38]   --->   Operation 55 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln724, i32 52, i32 62" [fcnn.cpp:38]   --->   Operation 56 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln38_1 = trunc i64 %bitcast_ln724" [fcnn.cpp:38]   --->   Operation 57 'trunc' 'trunc_ln38_1' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.05>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i11 %tmp_1" [fcnn.cpp:38]   --->   Operation 58 'zext' 'zext_ln38' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln38_1_cast = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln38_1" [fcnn.cpp:38]   --->   Operation 59 'bitconcatenate' 'zext_ln38_1_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln38_6 = zext i53 %zext_ln38_1_cast" [fcnn.cpp:38]   --->   Operation 60 'zext' 'zext_ln38_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (3.27ns)   --->   "%sub_ln38 = sub i54 0, i54 %zext_ln38_6" [fcnn.cpp:38]   --->   Operation 61 'sub' 'sub_ln38' <Predicate = (tmp)> <Delay = 3.27> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 62 [1/1] (1.38ns)   --->   "%select_ln38 = select i1 %tmp, i54 %sub_ln38, i54 %zext_ln38_6" [fcnn.cpp:38]   --->   Operation 62 'select' 'select_ln38' <Predicate = true> <Delay = 1.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 63 [1/1] (3.53ns)   --->   "%icmp_ln38 = icmp_eq  i63 %trunc_ln38, i63 0" [fcnn.cpp:38]   --->   Operation 63 'icmp' 'icmp_ln38' <Predicate = true> <Delay = 3.53> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.53> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 64 [1/1] (2.13ns)   --->   "%sub_ln38_1 = sub i12 1075, i12 %zext_ln38" [fcnn.cpp:38]   --->   Operation 64 'sub' 'sub_ln38_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 65 [1/1] (2.13ns)   --->   "%icmp_ln38_1 = icmp_sgt  i12 %sub_ln38_1, i12 8" [fcnn.cpp:38]   --->   Operation 65 'icmp' 'icmp_ln38_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 66 [1/1] (2.13ns)   --->   "%add_ln38 = add i12 %sub_ln38_1, i12 4088" [fcnn.cpp:38]   --->   Operation 66 'add' 'add_ln38' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 67 [1/1] (2.13ns)   --->   "%sub_ln38_2 = sub i12 8, i12 %sub_ln38_1" [fcnn.cpp:38]   --->   Operation 67 'sub' 'sub_ln38_2' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 68 [1/1] (0.68ns)   --->   "%select_ln38_1 = select i1 %icmp_ln38_1, i12 %add_ln38, i12 %sub_ln38_2" [fcnn.cpp:38]   --->   Operation 68 'select' 'select_ln38_1' <Predicate = true> <Delay = 0.68> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 69 [1/1] (2.13ns)   --->   "%icmp_ln38_2 = icmp_eq  i12 %sub_ln38_1, i12 8" [fcnn.cpp:38]   --->   Operation 69 'icmp' 'icmp_ln38_2' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln38_2 = trunc i54 %select_ln38" [fcnn.cpp:38]   --->   Operation 70 'trunc' 'trunc_ln38_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i12.i32.i32, i12 %select_ln38_1, i32 4, i32 11" [fcnn.cpp:38]   --->   Operation 71 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 72 [1/1] (2.11ns)   --->   "%icmp_ln38_4 = icmp_eq  i8 %tmp_3, i8 0" [fcnn.cpp:38]   --->   Operation 72 'icmp' 'icmp_ln38_4' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.25>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln38 = sext i12 %select_ln38_1" [fcnn.cpp:38]   --->   Operation 73 'sext' 'sext_ln38' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [1/1] (2.13ns)   --->   "%icmp_ln38_3 = icmp_ult  i12 %select_ln38_1, i12 54" [fcnn.cpp:38]   --->   Operation 74 'icmp' 'icmp_ln38_3' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln38_7 = zext i32 %sext_ln38" [fcnn.cpp:38]   --->   Operation 75 'zext' 'zext_ln38_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 76 [1/1] (4.28ns)   --->   "%ashr_ln38 = ashr i54 %select_ln38, i54 %zext_ln38_7" [fcnn.cpp:38]   --->   Operation 76 'ashr' 'ashr_ln38' <Predicate = true> <Delay = 4.28> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.28> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_6)   --->   "%trunc_ln38_3 = trunc i54 %ashr_ln38" [fcnn.cpp:38]   --->   Operation 77 'trunc' 'trunc_ln38_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_6)   --->   "%bitcast_ln724_1 = bitcast i32 %weights_load" [fcnn.cpp:38]   --->   Operation 78 'bitcast' 'bitcast_ln724_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_6)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln724_1, i32 31" [fcnn.cpp:38]   --->   Operation 79 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_6)   --->   "%select_ln38_7 = select i1 %tmp_2, i16 65535, i16 0" [fcnn.cpp:38]   --->   Operation 80 'select' 'select_ln38_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_6)   --->   "%select_ln38_2 = select i1 %icmp_ln38_3, i16 %trunc_ln38_3, i16 %select_ln38_7" [fcnn.cpp:38]   --->   Operation 81 'select' 'select_ln38_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "%sext_ln38cast = trunc i32 %sext_ln38" [fcnn.cpp:38]   --->   Operation 82 'trunc' 'sext_ln38cast' <Predicate = (!icmp_ln38 & icmp_ln38_4)> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (3.67ns)   --->   "%shl_ln38 = shl i16 %trunc_ln38_2, i16 %sext_ln38cast" [fcnn.cpp:38]   --->   Operation 83 'shl' 'shl_ln38' <Predicate = (!icmp_ln38 & icmp_ln38_4)> <Delay = 3.67> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.67> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_5)   --->   "%select_ln38_3 = select i1 %icmp_ln38_4, i16 %shl_ln38, i16 0" [fcnn.cpp:38]   --->   Operation 84 'select' 'select_ln38_3' <Predicate = (!icmp_ln38)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_5)   --->   "%select_ln38_4 = select i1 %icmp_ln38, i16 0, i16 %select_ln38_3" [fcnn.cpp:38]   --->   Operation 85 'select' 'select_ln38_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_5)   --->   "%xor_ln38 = xor i1 %icmp_ln38, i1 1" [fcnn.cpp:38]   --->   Operation 86 'xor' 'xor_ln38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node select_ln38_5)   --->   "%and_ln38 = and i1 %icmp_ln38_2, i1 %xor_ln38" [fcnn.cpp:38]   --->   Operation 87 'and' 'and_ln38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 88 [1/1] (1.29ns) (out node of the LUT)   --->   "%select_ln38_5 = select i1 %and_ln38, i16 %trunc_ln38_2, i16 %select_ln38_4" [fcnn.cpp:38]   --->   Operation 88 'select' 'select_ln38_5' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node and_ln38_1)   --->   "%or_ln38 = or i1 %icmp_ln38, i1 %icmp_ln38_2" [fcnn.cpp:38]   --->   Operation 89 'or' 'or_ln38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln38_1)   --->   "%xor_ln38_1 = xor i1 %or_ln38, i1 1" [fcnn.cpp:38]   --->   Operation 90 'xor' 'xor_ln38_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 91 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln38_1 = and i1 %icmp_ln38_1, i1 %xor_ln38_1" [fcnn.cpp:38]   --->   Operation 91 'and' 'and_ln38_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 92 [1/1] (1.29ns) (out node of the LUT)   --->   "%select_ln38_6 = select i1 %and_ln38_1, i16 %select_ln38_2, i16 %select_ln38_5" [fcnn.cpp:38]   --->   Operation 92 'select' 'select_ln38_6' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 103 'ret' 'ret_ln0' <Predicate = (icmp_ln35)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 5.37>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_35_4_VITIS_LOOP_36_5_str"   --->   Operation 93 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 1270, i64 0"   --->   Operation 94 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %select_ln35_1, i6 0" [fcnn.cpp:38]   --->   Operation 95 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (2.12ns)   --->   "%add_ln38_1 = add i10 %tmp_s, i10 %zext_ln38_2" [fcnn.cpp:38]   --->   Operation 96 'add' 'add_ln38_1' <Predicate = true> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln38_3 = zext i10 %add_ln38_1" [fcnn.cpp:38]   --->   Operation 97 'zext' 'zext_ln38_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%weight_tile_addr = getelementptr i16 %weight_tile, i64 0, i64 %zext_ln38_3" [fcnn.cpp:38]   --->   Operation 98 'getelementptr' 'weight_tile_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%specpipeline_ln37 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [fcnn.cpp:37]   --->   Operation 99 'specpipeline' 'specpipeline_ln37' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln36 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [fcnn.cpp:36]   --->   Operation 100 'specloopname' 'specloopname_ln36' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (3.25ns)   --->   "%store_ln38 = store i16 %select_ln38_6, i10 %weight_tile_addr" [fcnn.cpp:38]   --->   Operation 101 'store' 'store_ln38' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 640> <RAM>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.cond49" [fcnn.cpp:36]   --->   Operation 102 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.753ns
The critical path consists of the following:
	'alloca' operation ('j') [6]  (0.000 ns)
	'load' operation ('j', fcnn.cpp:36) on local variable 'j' [17]  (0.000 ns)
	'icmp' operation ('icmp_ln36', fcnn.cpp:36) [20]  (2.123 ns)
	'select' operation ('select_ln35', fcnn.cpp:35) [29]  (0.990 ns)
	'add' operation ('add_ln36_1', fcnn.cpp:36) [88]  (2.030 ns)
	'store' operation ('store_ln36', fcnn.cpp:36) of variable 'add_ln36_1', fcnn.cpp:36 on local variable 'j' [91]  (1.610 ns)

 <State 2>: 1.450ns
The critical path consists of the following:
	'mul' operation of DSP[40] ('mul_ln38', fcnn.cpp:38) [32]  (1.450 ns)

 <State 3>: 4.223ns
The critical path consists of the following:
	'add' operation ('add_ln36', fcnn.cpp:36) [38]  (2.123 ns)
	'add' operation of DSP[40] ('add_ln38_2', fcnn.cpp:38) [40]  (2.100 ns)

 <State 4>: 5.357ns
The critical path consists of the following:
	'add' operation of DSP[40] ('add_ln38_2', fcnn.cpp:38) [40]  (2.100 ns)
	'getelementptr' operation ('weights_addr', fcnn.cpp:38) [42]  (0.000 ns)
	'load' operation ('weights_load', fcnn.cpp:38) on array 'weights' [45]  (3.257 ns)

 <State 5>: 3.257ns
The critical path consists of the following:
	'load' operation ('weights_load', fcnn.cpp:38) on array 'weights' [45]  (3.257 ns)

 <State 6>: 4.098ns
The critical path consists of the following:
	multiplexor before operation 'fpext' with delay (1.610 ns)
'fpext' operation ('pf', fcnn.cpp:38) [46]  (2.488 ns)

 <State 7>: 4.098ns
The critical path consists of the following:
	'fpext' operation ('pf', fcnn.cpp:38) [46]  (4.098 ns)

 <State 8>: 7.058ns
The critical path consists of the following:
	'sub' operation ('sub_ln38_1', fcnn.cpp:38) [58]  (2.131 ns)
	'icmp' operation ('icmp_ln38_1', fcnn.cpp:38) [59]  (2.131 ns)
	'select' operation ('select_ln38_1', fcnn.cpp:38) [62]  (0.682 ns)
	'icmp' operation ('icmp_ln38_4', fcnn.cpp:38) [75]  (2.115 ns)

 <State 9>: 6.258ns
The critical path consists of the following:
	'shl' operation ('shl_ln38', fcnn.cpp:38) [77]  (3.672 ns)
	'select' operation ('select_ln38_3', fcnn.cpp:38) [78]  (0.000 ns)
	'select' operation ('select_ln38_4', fcnn.cpp:38) [79]  (0.000 ns)
	'select' operation ('select_ln38_5', fcnn.cpp:38) [82]  (1.293 ns)
	'select' operation ('select_ln38_6', fcnn.cpp:38) [86]  (1.293 ns)

 <State 10>: 5.380ns
The critical path consists of the following:
	'add' operation ('add_ln38_1', fcnn.cpp:38) [35]  (2.123 ns)
	'getelementptr' operation ('weight_tile_addr', fcnn.cpp:38) [37]  (0.000 ns)
	'store' operation ('store_ln38', fcnn.cpp:38) of variable 'select_ln38_6', fcnn.cpp:38 on array 'weight_tile' [87]  (3.257 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
