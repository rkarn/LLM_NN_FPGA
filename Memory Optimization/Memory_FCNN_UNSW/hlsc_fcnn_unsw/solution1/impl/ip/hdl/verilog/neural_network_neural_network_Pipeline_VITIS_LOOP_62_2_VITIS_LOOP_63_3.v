// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_62_2_VITIS_LOOP_63_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer1_weight_tile_address0,
        layer1_weight_tile_ce0,
        layer1_weight_tile_we0,
        layer1_weight_tile_d0,
        trunc_ln,
        layer1_weight_tile_42_address0,
        layer1_weight_tile_42_ce0,
        layer1_weight_tile_42_we0,
        layer1_weight_tile_42_d0,
        layer1_weight_tile_41_address0,
        layer1_weight_tile_41_ce0,
        layer1_weight_tile_41_we0,
        layer1_weight_tile_41_d0,
        layer1_weight_tile_40_address0,
        layer1_weight_tile_40_ce0,
        layer1_weight_tile_40_we0,
        layer1_weight_tile_40_d0,
        layer1_weight_tile_39_address0,
        layer1_weight_tile_39_ce0,
        layer1_weight_tile_39_we0,
        layer1_weight_tile_39_d0,
        layer1_weight_tile_38_address0,
        layer1_weight_tile_38_ce0,
        layer1_weight_tile_38_we0,
        layer1_weight_tile_38_d0,
        layer1_weight_tile_37_address0,
        layer1_weight_tile_37_ce0,
        layer1_weight_tile_37_we0,
        layer1_weight_tile_37_d0,
        layer1_weight_tile_36_address0,
        layer1_weight_tile_36_ce0,
        layer1_weight_tile_36_we0,
        layer1_weight_tile_36_d0,
        layer1_weight_tile_35_address0,
        layer1_weight_tile_35_ce0,
        layer1_weight_tile_35_we0,
        layer1_weight_tile_35_d0,
        layer1_weight_tile_34_address0,
        layer1_weight_tile_34_ce0,
        layer1_weight_tile_34_we0,
        layer1_weight_tile_34_d0,
        layer1_weight_tile_33_address0,
        layer1_weight_tile_33_ce0,
        layer1_weight_tile_33_we0,
        layer1_weight_tile_33_d0,
        layer1_weight_tile_32_address0,
        layer1_weight_tile_32_ce0,
        layer1_weight_tile_32_we0,
        layer1_weight_tile_32_d0,
        layer1_weight_tile_31_address0,
        layer1_weight_tile_31_ce0,
        layer1_weight_tile_31_we0,
        layer1_weight_tile_31_d0,
        layer1_weight_tile_30_address0,
        layer1_weight_tile_30_ce0,
        layer1_weight_tile_30_we0,
        layer1_weight_tile_30_d0,
        layer1_weight_tile_29_address0,
        layer1_weight_tile_29_ce0,
        layer1_weight_tile_29_we0,
        layer1_weight_tile_29_d0,
        layer1_weight_tile_28_address0,
        layer1_weight_tile_28_ce0,
        layer1_weight_tile_28_we0,
        layer1_weight_tile_28_d0,
        layer1_weight_tile_27_address0,
        layer1_weight_tile_27_ce0,
        layer1_weight_tile_27_we0,
        layer1_weight_tile_27_d0,
        layer1_weight_tile_26_address0,
        layer1_weight_tile_26_ce0,
        layer1_weight_tile_26_we0,
        layer1_weight_tile_26_d0,
        layer1_weight_tile_25_address0,
        layer1_weight_tile_25_ce0,
        layer1_weight_tile_25_we0,
        layer1_weight_tile_25_d0,
        layer1_weight_tile_24_address0,
        layer1_weight_tile_24_ce0,
        layer1_weight_tile_24_we0,
        layer1_weight_tile_24_d0,
        layer1_weight_tile_23_address0,
        layer1_weight_tile_23_ce0,
        layer1_weight_tile_23_we0,
        layer1_weight_tile_23_d0,
        layer1_weight_tile_22_address0,
        layer1_weight_tile_22_ce0,
        layer1_weight_tile_22_we0,
        layer1_weight_tile_22_d0,
        layer1_weight_tile_21_address0,
        layer1_weight_tile_21_ce0,
        layer1_weight_tile_21_we0,
        layer1_weight_tile_21_d0,
        layer1_weight_tile_20_address0,
        layer1_weight_tile_20_ce0,
        layer1_weight_tile_20_we0,
        layer1_weight_tile_20_d0,
        layer1_weight_tile_19_address0,
        layer1_weight_tile_19_ce0,
        layer1_weight_tile_19_we0,
        layer1_weight_tile_19_d0,
        layer1_weight_tile_18_address0,
        layer1_weight_tile_18_ce0,
        layer1_weight_tile_18_we0,
        layer1_weight_tile_18_d0,
        layer1_weight_tile_17_address0,
        layer1_weight_tile_17_ce0,
        layer1_weight_tile_17_we0,
        layer1_weight_tile_17_d0,
        layer1_weight_tile_16_address0,
        layer1_weight_tile_16_ce0,
        layer1_weight_tile_16_we0,
        layer1_weight_tile_16_d0,
        layer1_weight_tile_15_address0,
        layer1_weight_tile_15_ce0,
        layer1_weight_tile_15_we0,
        layer1_weight_tile_15_d0,
        layer1_weight_tile_14_address0,
        layer1_weight_tile_14_ce0,
        layer1_weight_tile_14_we0,
        layer1_weight_tile_14_d0,
        layer1_weight_tile_13_address0,
        layer1_weight_tile_13_ce0,
        layer1_weight_tile_13_we0,
        layer1_weight_tile_13_d0,
        layer1_weight_tile_12_address0,
        layer1_weight_tile_12_ce0,
        layer1_weight_tile_12_we0,
        layer1_weight_tile_12_d0,
        layer1_weight_tile_11_address0,
        layer1_weight_tile_11_ce0,
        layer1_weight_tile_11_we0,
        layer1_weight_tile_11_d0,
        layer1_weight_tile_10_address0,
        layer1_weight_tile_10_ce0,
        layer1_weight_tile_10_we0,
        layer1_weight_tile_10_d0,
        layer1_weight_tile_9_address0,
        layer1_weight_tile_9_ce0,
        layer1_weight_tile_9_we0,
        layer1_weight_tile_9_d0,
        layer1_weight_tile_8_address0,
        layer1_weight_tile_8_ce0,
        layer1_weight_tile_8_we0,
        layer1_weight_tile_8_d0,
        layer1_weight_tile_7_address0,
        layer1_weight_tile_7_ce0,
        layer1_weight_tile_7_we0,
        layer1_weight_tile_7_d0,
        layer1_weight_tile_6_address0,
        layer1_weight_tile_6_ce0,
        layer1_weight_tile_6_we0,
        layer1_weight_tile_6_d0,
        layer1_weight_tile_5_address0,
        layer1_weight_tile_5_ce0,
        layer1_weight_tile_5_we0,
        layer1_weight_tile_5_d0,
        layer1_weight_tile_4_address0,
        layer1_weight_tile_4_ce0,
        layer1_weight_tile_4_we0,
        layer1_weight_tile_4_d0,
        layer1_weight_tile_3_address0,
        layer1_weight_tile_3_ce0,
        layer1_weight_tile_3_we0,
        layer1_weight_tile_3_d0,
        layer1_weight_tile_2_address0,
        layer1_weight_tile_2_ce0,
        layer1_weight_tile_2_we0,
        layer1_weight_tile_2_d0,
        layer1_weight_tile_1_address0,
        layer1_weight_tile_1_ce0,
        layer1_weight_tile_1_we0,
        layer1_weight_tile_1_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] layer1_weight_tile_address0;
output   layer1_weight_tile_ce0;
output   layer1_weight_tile_we0;
output  [14:0] layer1_weight_tile_d0;
input  [5:0] trunc_ln;
output  [1:0] layer1_weight_tile_42_address0;
output   layer1_weight_tile_42_ce0;
output   layer1_weight_tile_42_we0;
output  [14:0] layer1_weight_tile_42_d0;
output  [1:0] layer1_weight_tile_41_address0;
output   layer1_weight_tile_41_ce0;
output   layer1_weight_tile_41_we0;
output  [14:0] layer1_weight_tile_41_d0;
output  [1:0] layer1_weight_tile_40_address0;
output   layer1_weight_tile_40_ce0;
output   layer1_weight_tile_40_we0;
output  [14:0] layer1_weight_tile_40_d0;
output  [1:0] layer1_weight_tile_39_address0;
output   layer1_weight_tile_39_ce0;
output   layer1_weight_tile_39_we0;
output  [14:0] layer1_weight_tile_39_d0;
output  [1:0] layer1_weight_tile_38_address0;
output   layer1_weight_tile_38_ce0;
output   layer1_weight_tile_38_we0;
output  [14:0] layer1_weight_tile_38_d0;
output  [1:0] layer1_weight_tile_37_address0;
output   layer1_weight_tile_37_ce0;
output   layer1_weight_tile_37_we0;
output  [14:0] layer1_weight_tile_37_d0;
output  [1:0] layer1_weight_tile_36_address0;
output   layer1_weight_tile_36_ce0;
output   layer1_weight_tile_36_we0;
output  [14:0] layer1_weight_tile_36_d0;
output  [1:0] layer1_weight_tile_35_address0;
output   layer1_weight_tile_35_ce0;
output   layer1_weight_tile_35_we0;
output  [14:0] layer1_weight_tile_35_d0;
output  [1:0] layer1_weight_tile_34_address0;
output   layer1_weight_tile_34_ce0;
output   layer1_weight_tile_34_we0;
output  [14:0] layer1_weight_tile_34_d0;
output  [1:0] layer1_weight_tile_33_address0;
output   layer1_weight_tile_33_ce0;
output   layer1_weight_tile_33_we0;
output  [14:0] layer1_weight_tile_33_d0;
output  [1:0] layer1_weight_tile_32_address0;
output   layer1_weight_tile_32_ce0;
output   layer1_weight_tile_32_we0;
output  [14:0] layer1_weight_tile_32_d0;
output  [1:0] layer1_weight_tile_31_address0;
output   layer1_weight_tile_31_ce0;
output   layer1_weight_tile_31_we0;
output  [14:0] layer1_weight_tile_31_d0;
output  [1:0] layer1_weight_tile_30_address0;
output   layer1_weight_tile_30_ce0;
output   layer1_weight_tile_30_we0;
output  [14:0] layer1_weight_tile_30_d0;
output  [1:0] layer1_weight_tile_29_address0;
output   layer1_weight_tile_29_ce0;
output   layer1_weight_tile_29_we0;
output  [14:0] layer1_weight_tile_29_d0;
output  [1:0] layer1_weight_tile_28_address0;
output   layer1_weight_tile_28_ce0;
output   layer1_weight_tile_28_we0;
output  [14:0] layer1_weight_tile_28_d0;
output  [1:0] layer1_weight_tile_27_address0;
output   layer1_weight_tile_27_ce0;
output   layer1_weight_tile_27_we0;
output  [14:0] layer1_weight_tile_27_d0;
output  [1:0] layer1_weight_tile_26_address0;
output   layer1_weight_tile_26_ce0;
output   layer1_weight_tile_26_we0;
output  [14:0] layer1_weight_tile_26_d0;
output  [1:0] layer1_weight_tile_25_address0;
output   layer1_weight_tile_25_ce0;
output   layer1_weight_tile_25_we0;
output  [14:0] layer1_weight_tile_25_d0;
output  [1:0] layer1_weight_tile_24_address0;
output   layer1_weight_tile_24_ce0;
output   layer1_weight_tile_24_we0;
output  [14:0] layer1_weight_tile_24_d0;
output  [1:0] layer1_weight_tile_23_address0;
output   layer1_weight_tile_23_ce0;
output   layer1_weight_tile_23_we0;
output  [14:0] layer1_weight_tile_23_d0;
output  [1:0] layer1_weight_tile_22_address0;
output   layer1_weight_tile_22_ce0;
output   layer1_weight_tile_22_we0;
output  [14:0] layer1_weight_tile_22_d0;
output  [1:0] layer1_weight_tile_21_address0;
output   layer1_weight_tile_21_ce0;
output   layer1_weight_tile_21_we0;
output  [14:0] layer1_weight_tile_21_d0;
output  [1:0] layer1_weight_tile_20_address0;
output   layer1_weight_tile_20_ce0;
output   layer1_weight_tile_20_we0;
output  [14:0] layer1_weight_tile_20_d0;
output  [1:0] layer1_weight_tile_19_address0;
output   layer1_weight_tile_19_ce0;
output   layer1_weight_tile_19_we0;
output  [14:0] layer1_weight_tile_19_d0;
output  [1:0] layer1_weight_tile_18_address0;
output   layer1_weight_tile_18_ce0;
output   layer1_weight_tile_18_we0;
output  [14:0] layer1_weight_tile_18_d0;
output  [1:0] layer1_weight_tile_17_address0;
output   layer1_weight_tile_17_ce0;
output   layer1_weight_tile_17_we0;
output  [14:0] layer1_weight_tile_17_d0;
output  [1:0] layer1_weight_tile_16_address0;
output   layer1_weight_tile_16_ce0;
output   layer1_weight_tile_16_we0;
output  [14:0] layer1_weight_tile_16_d0;
output  [1:0] layer1_weight_tile_15_address0;
output   layer1_weight_tile_15_ce0;
output   layer1_weight_tile_15_we0;
output  [14:0] layer1_weight_tile_15_d0;
output  [1:0] layer1_weight_tile_14_address0;
output   layer1_weight_tile_14_ce0;
output   layer1_weight_tile_14_we0;
output  [14:0] layer1_weight_tile_14_d0;
output  [1:0] layer1_weight_tile_13_address0;
output   layer1_weight_tile_13_ce0;
output   layer1_weight_tile_13_we0;
output  [14:0] layer1_weight_tile_13_d0;
output  [1:0] layer1_weight_tile_12_address0;
output   layer1_weight_tile_12_ce0;
output   layer1_weight_tile_12_we0;
output  [14:0] layer1_weight_tile_12_d0;
output  [1:0] layer1_weight_tile_11_address0;
output   layer1_weight_tile_11_ce0;
output   layer1_weight_tile_11_we0;
output  [14:0] layer1_weight_tile_11_d0;
output  [1:0] layer1_weight_tile_10_address0;
output   layer1_weight_tile_10_ce0;
output   layer1_weight_tile_10_we0;
output  [14:0] layer1_weight_tile_10_d0;
output  [1:0] layer1_weight_tile_9_address0;
output   layer1_weight_tile_9_ce0;
output   layer1_weight_tile_9_we0;
output  [14:0] layer1_weight_tile_9_d0;
output  [1:0] layer1_weight_tile_8_address0;
output   layer1_weight_tile_8_ce0;
output   layer1_weight_tile_8_we0;
output  [14:0] layer1_weight_tile_8_d0;
output  [1:0] layer1_weight_tile_7_address0;
output   layer1_weight_tile_7_ce0;
output   layer1_weight_tile_7_we0;
output  [14:0] layer1_weight_tile_7_d0;
output  [1:0] layer1_weight_tile_6_address0;
output   layer1_weight_tile_6_ce0;
output   layer1_weight_tile_6_we0;
output  [14:0] layer1_weight_tile_6_d0;
output  [1:0] layer1_weight_tile_5_address0;
output   layer1_weight_tile_5_ce0;
output   layer1_weight_tile_5_we0;
output  [14:0] layer1_weight_tile_5_d0;
output  [1:0] layer1_weight_tile_4_address0;
output   layer1_weight_tile_4_ce0;
output   layer1_weight_tile_4_we0;
output  [14:0] layer1_weight_tile_4_d0;
output  [1:0] layer1_weight_tile_3_address0;
output   layer1_weight_tile_3_ce0;
output   layer1_weight_tile_3_we0;
output  [14:0] layer1_weight_tile_3_d0;
output  [1:0] layer1_weight_tile_2_address0;
output   layer1_weight_tile_2_ce0;
output   layer1_weight_tile_2_we0;
output  [14:0] layer1_weight_tile_2_d0;
output  [1:0] layer1_weight_tile_1_address0;
output   layer1_weight_tile_1_ce0;
output   layer1_weight_tile_1_we0;
output  [14:0] layer1_weight_tile_1_d0;

reg ap_idle;
reg layer1_weight_tile_ce0;
reg layer1_weight_tile_we0;
reg layer1_weight_tile_42_ce0;
reg layer1_weight_tile_42_we0;
reg layer1_weight_tile_41_ce0;
reg layer1_weight_tile_41_we0;
reg layer1_weight_tile_40_ce0;
reg layer1_weight_tile_40_we0;
reg layer1_weight_tile_39_ce0;
reg layer1_weight_tile_39_we0;
reg layer1_weight_tile_38_ce0;
reg layer1_weight_tile_38_we0;
reg layer1_weight_tile_37_ce0;
reg layer1_weight_tile_37_we0;
reg layer1_weight_tile_36_ce0;
reg layer1_weight_tile_36_we0;
reg layer1_weight_tile_35_ce0;
reg layer1_weight_tile_35_we0;
reg layer1_weight_tile_34_ce0;
reg layer1_weight_tile_34_we0;
reg layer1_weight_tile_33_ce0;
reg layer1_weight_tile_33_we0;
reg layer1_weight_tile_32_ce0;
reg layer1_weight_tile_32_we0;
reg layer1_weight_tile_31_ce0;
reg layer1_weight_tile_31_we0;
reg layer1_weight_tile_30_ce0;
reg layer1_weight_tile_30_we0;
reg layer1_weight_tile_29_ce0;
reg layer1_weight_tile_29_we0;
reg layer1_weight_tile_28_ce0;
reg layer1_weight_tile_28_we0;
reg layer1_weight_tile_27_ce0;
reg layer1_weight_tile_27_we0;
reg layer1_weight_tile_26_ce0;
reg layer1_weight_tile_26_we0;
reg layer1_weight_tile_25_ce0;
reg layer1_weight_tile_25_we0;
reg layer1_weight_tile_24_ce0;
reg layer1_weight_tile_24_we0;
reg layer1_weight_tile_23_ce0;
reg layer1_weight_tile_23_we0;
reg layer1_weight_tile_22_ce0;
reg layer1_weight_tile_22_we0;
reg layer1_weight_tile_21_ce0;
reg layer1_weight_tile_21_we0;
reg layer1_weight_tile_20_ce0;
reg layer1_weight_tile_20_we0;
reg layer1_weight_tile_19_ce0;
reg layer1_weight_tile_19_we0;
reg layer1_weight_tile_18_ce0;
reg layer1_weight_tile_18_we0;
reg layer1_weight_tile_17_ce0;
reg layer1_weight_tile_17_we0;
reg layer1_weight_tile_16_ce0;
reg layer1_weight_tile_16_we0;
reg layer1_weight_tile_15_ce0;
reg layer1_weight_tile_15_we0;
reg layer1_weight_tile_14_ce0;
reg layer1_weight_tile_14_we0;
reg layer1_weight_tile_13_ce0;
reg layer1_weight_tile_13_we0;
reg layer1_weight_tile_12_ce0;
reg layer1_weight_tile_12_we0;
reg layer1_weight_tile_11_ce0;
reg layer1_weight_tile_11_we0;
reg layer1_weight_tile_10_ce0;
reg layer1_weight_tile_10_we0;
reg layer1_weight_tile_9_ce0;
reg layer1_weight_tile_9_we0;
reg layer1_weight_tile_8_ce0;
reg layer1_weight_tile_8_we0;
reg layer1_weight_tile_7_ce0;
reg layer1_weight_tile_7_we0;
reg layer1_weight_tile_6_ce0;
reg layer1_weight_tile_6_we0;
reg layer1_weight_tile_5_ce0;
reg layer1_weight_tile_5_we0;
reg layer1_weight_tile_4_ce0;
reg layer1_weight_tile_4_we0;
reg layer1_weight_tile_3_ce0;
reg layer1_weight_tile_3_we0;
reg layer1_weight_tile_2_ce0;
reg layer1_weight_tile_2_we0;
reg layer1_weight_tile_1_ce0;
reg layer1_weight_tile_1_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln62_fu_861_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [11:0] layer1_weights_address0;
reg    layer1_weights_ce0;
wire   [14:0] layer1_weights_q0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln62_reg_971;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln62_reg_971_pp0_iter1_reg;
wire   [7:0] add_ln62_2_fu_867_p2;
reg   [7:0] add_ln62_2_reg_975;
wire   [5:0] select_ln62_fu_891_p3;
reg   [5:0] select_ln62_reg_980;
reg   [5:0] select_ln62_reg_980_pp0_iter1_reg;
reg   [5:0] select_ln62_reg_980_pp0_iter2_reg;
wire   [63:0] select_ln62_1_fu_899_p3;
reg   [63:0] select_ln62_1_reg_986;
reg   [63:0] select_ln62_1_reg_986_pp0_iter1_reg;
reg   [63:0] select_ln62_1_reg_986_pp0_iter2_reg;
wire   [5:0] trunc_ln62_fu_907_p1;
reg   [5:0] trunc_ln62_reg_1034;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln65_2_fu_932_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg   [5:0] j_fu_210;
wire   [5:0] add_ln63_fu_911_p2;
wire    ap_loop_init;
reg   [63:0] i_fu_214;
reg   [7:0] indvar_flatten_fu_218;
wire   [0:0] icmp_ln63_fu_885_p2;
wire   [63:0] add_ln62_fu_879_p2;
wire   [11:0] grp_fu_936_p4;
wire   [5:0] grp_fu_936_p2;
wire   [5:0] grp_fu_936_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [11:0] grp_fu_936_p30;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_62_2_VITIS_LOOP_63_3_layer1_weights_ROM_AUbkb #(
    .DataWidth( 15 ),
    .AddressRange( 2752 ),
    .AddressWidth( 12 ))
layer1_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_address0),
    .ce0(layer1_weights_ce0),
    .q0(layer1_weights_q0)
);

neural_network_ama_addmuladd_6ns_6ns_6ns_6ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
ama_addmuladd_6ns_6ns_6ns_6ns_12_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln62_reg_1034),
    .din1(trunc_ln),
    .din2(grp_fu_936_p2),
    .din3(grp_fu_936_p3),
    .ce(1'b1),
    .dout(grp_fu_936_p4)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_214 <= 64'd0;
        end else if (((icmp_ln62_reg_971 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_214 <= select_ln62_1_reg_986;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_218 <= 8'd0;
        end else if (((icmp_ln62_reg_971 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_218 <= add_ln62_2_reg_975;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_210 <= 6'd0;
        end else if (((icmp_ln62_reg_971 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_210 <= add_ln63_fu_911_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln62_2_reg_975 <= add_ln62_2_fu_867_p2;
        icmp_ln62_reg_971 <= icmp_ln62_fu_861_p2;
        icmp_ln62_reg_971_pp0_iter1_reg <= icmp_ln62_reg_971;
        select_ln62_1_reg_986_pp0_iter1_reg <= select_ln62_1_reg_986;
        select_ln62_1_reg_986_pp0_iter2_reg <= select_ln62_1_reg_986_pp0_iter1_reg;
        select_ln62_reg_980_pp0_iter1_reg <= select_ln62_reg_980;
        select_ln62_reg_980_pp0_iter2_reg <= select_ln62_reg_980_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln62_fu_861_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln62_1_reg_986 <= select_ln62_1_fu_899_p3;
        select_ln62_reg_980 <= select_ln62_fu_891_p3;
        trunc_ln62_reg_1034 <= trunc_ln62_fu_907_p1;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_861_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln62_reg_971_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_10_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd10) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_10_we0 = 1'b1;
    end else begin
        layer1_weight_tile_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_11_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_11_we0 = 1'b1;
    end else begin
        layer1_weight_tile_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_12_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_12_we0 = 1'b1;
    end else begin
        layer1_weight_tile_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_13_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_13_we0 = 1'b1;
    end else begin
        layer1_weight_tile_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_14_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd14) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_14_we0 = 1'b1;
    end else begin
        layer1_weight_tile_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_15_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd15) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_15_we0 = 1'b1;
    end else begin
        layer1_weight_tile_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_16_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_16_we0 = 1'b1;
    end else begin
        layer1_weight_tile_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_17_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_17_we0 = 1'b1;
    end else begin
        layer1_weight_tile_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_18_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd18) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_18_we0 = 1'b1;
    end else begin
        layer1_weight_tile_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_19_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd19) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_19_we0 = 1'b1;
    end else begin
        layer1_weight_tile_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_1_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_1_we0 = 1'b1;
    end else begin
        layer1_weight_tile_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_20_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_20_we0 = 1'b1;
    end else begin
        layer1_weight_tile_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_21_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd21) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_21_we0 = 1'b1;
    end else begin
        layer1_weight_tile_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_22_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd22) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_22_we0 = 1'b1;
    end else begin
        layer1_weight_tile_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_23_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd23) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_23_we0 = 1'b1;
    end else begin
        layer1_weight_tile_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_24_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_24_we0 = 1'b1;
    end else begin
        layer1_weight_tile_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_25_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd25) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_25_we0 = 1'b1;
    end else begin
        layer1_weight_tile_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_26_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd26) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_26_we0 = 1'b1;
    end else begin
        layer1_weight_tile_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_27_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd27) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_27_we0 = 1'b1;
    end else begin
        layer1_weight_tile_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_28_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd28) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_28_we0 = 1'b1;
    end else begin
        layer1_weight_tile_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_29_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd29) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_29_we0 = 1'b1;
    end else begin
        layer1_weight_tile_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_2_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_2_we0 = 1'b1;
    end else begin
        layer1_weight_tile_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_30_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd30) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_30_we0 = 1'b1;
    end else begin
        layer1_weight_tile_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_31_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd31) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_31_we0 = 1'b1;
    end else begin
        layer1_weight_tile_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_32_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd32) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_32_we0 = 1'b1;
    end else begin
        layer1_weight_tile_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_33_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd33) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_33_we0 = 1'b1;
    end else begin
        layer1_weight_tile_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_34_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd34) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_34_we0 = 1'b1;
    end else begin
        layer1_weight_tile_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_35_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd35) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_35_we0 = 1'b1;
    end else begin
        layer1_weight_tile_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_36_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd36) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_36_we0 = 1'b1;
    end else begin
        layer1_weight_tile_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_37_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd37) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_37_we0 = 1'b1;
    end else begin
        layer1_weight_tile_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_38_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd38) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_38_we0 = 1'b1;
    end else begin
        layer1_weight_tile_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_39_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd39) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_39_we0 = 1'b1;
    end else begin
        layer1_weight_tile_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_3_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_3_we0 = 1'b1;
    end else begin
        layer1_weight_tile_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_40_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd40) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_40_we0 = 1'b1;
    end else begin
        layer1_weight_tile_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_41_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd41) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_41_we0 = 1'b1;
    end else begin
        layer1_weight_tile_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_42_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((select_ln62_reg_980_pp0_iter2_reg == 6'd42) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd43) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd44) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd45) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd46) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd47) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd48) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd49) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd50) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd51) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd52) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd53) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd54) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd55) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd56) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd57) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd58) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd59) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd60) | ((select_ln62_reg_980_pp0_iter2_reg 
    == 6'd61) | ((select_ln62_reg_980_pp0_iter2_reg == 6'd62) | (select_ln62_reg_980_pp0_iter2_reg == 6'd63)))))))))))))))))))))))) begin
        layer1_weight_tile_42_we0 = 1'b1;
    end else begin
        layer1_weight_tile_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_4_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_4_we0 = 1'b1;
    end else begin
        layer1_weight_tile_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_5_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_5_we0 = 1'b1;
    end else begin
        layer1_weight_tile_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_6_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_6_we0 = 1'b1;
    end else begin
        layer1_weight_tile_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_7_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_7_we0 = 1'b1;
    end else begin
        layer1_weight_tile_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_8_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_8_we0 = 1'b1;
    end else begin
        layer1_weight_tile_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_9_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_9_we0 = 1'b1;
    end else begin
        layer1_weight_tile_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln62_reg_980_pp0_iter2_reg == 6'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weight_tile_we0 = 1'b1;
    end else begin
        layer1_weight_tile_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer1_weights_ce0 = 1'b1;
    end else begin
        layer1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln62_2_fu_867_p2 = (indvar_flatten_fu_218 + 8'd1);

assign add_ln62_fu_879_p2 = (i_fu_214 + 64'd1);

assign add_ln63_fu_911_p2 = (select_ln62_reg_980 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_936_p2 = 12'd43;

assign grp_fu_936_p3 = grp_fu_936_p30;

assign grp_fu_936_p30 = select_ln62_reg_980_pp0_iter1_reg;

assign icmp_ln62_fu_861_p2 = ((indvar_flatten_fu_218 == 8'd172) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_885_p2 = ((j_fu_210 == 6'd43) ? 1'b1 : 1'b0);

assign layer1_weight_tile_10_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_10_d0 = layer1_weights_q0;

assign layer1_weight_tile_11_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_11_d0 = layer1_weights_q0;

assign layer1_weight_tile_12_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_12_d0 = layer1_weights_q0;

assign layer1_weight_tile_13_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_13_d0 = layer1_weights_q0;

assign layer1_weight_tile_14_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_14_d0 = layer1_weights_q0;

assign layer1_weight_tile_15_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_15_d0 = layer1_weights_q0;

assign layer1_weight_tile_16_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_16_d0 = layer1_weights_q0;

assign layer1_weight_tile_17_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_17_d0 = layer1_weights_q0;

assign layer1_weight_tile_18_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_18_d0 = layer1_weights_q0;

assign layer1_weight_tile_19_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_19_d0 = layer1_weights_q0;

assign layer1_weight_tile_1_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_1_d0 = layer1_weights_q0;

assign layer1_weight_tile_20_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_20_d0 = layer1_weights_q0;

assign layer1_weight_tile_21_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_21_d0 = layer1_weights_q0;

assign layer1_weight_tile_22_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_22_d0 = layer1_weights_q0;

assign layer1_weight_tile_23_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_23_d0 = layer1_weights_q0;

assign layer1_weight_tile_24_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_24_d0 = layer1_weights_q0;

assign layer1_weight_tile_25_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_25_d0 = layer1_weights_q0;

assign layer1_weight_tile_26_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_26_d0 = layer1_weights_q0;

assign layer1_weight_tile_27_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_27_d0 = layer1_weights_q0;

assign layer1_weight_tile_28_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_28_d0 = layer1_weights_q0;

assign layer1_weight_tile_29_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_29_d0 = layer1_weights_q0;

assign layer1_weight_tile_2_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_2_d0 = layer1_weights_q0;

assign layer1_weight_tile_30_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_30_d0 = layer1_weights_q0;

assign layer1_weight_tile_31_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_31_d0 = layer1_weights_q0;

assign layer1_weight_tile_32_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_32_d0 = layer1_weights_q0;

assign layer1_weight_tile_33_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_33_d0 = layer1_weights_q0;

assign layer1_weight_tile_34_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_34_d0 = layer1_weights_q0;

assign layer1_weight_tile_35_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_35_d0 = layer1_weights_q0;

assign layer1_weight_tile_36_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_36_d0 = layer1_weights_q0;

assign layer1_weight_tile_37_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_37_d0 = layer1_weights_q0;

assign layer1_weight_tile_38_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_38_d0 = layer1_weights_q0;

assign layer1_weight_tile_39_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_39_d0 = layer1_weights_q0;

assign layer1_weight_tile_3_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_3_d0 = layer1_weights_q0;

assign layer1_weight_tile_40_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_40_d0 = layer1_weights_q0;

assign layer1_weight_tile_41_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_41_d0 = layer1_weights_q0;

assign layer1_weight_tile_42_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_42_d0 = layer1_weights_q0;

assign layer1_weight_tile_4_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_4_d0 = layer1_weights_q0;

assign layer1_weight_tile_5_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_5_d0 = layer1_weights_q0;

assign layer1_weight_tile_6_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_6_d0 = layer1_weights_q0;

assign layer1_weight_tile_7_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_7_d0 = layer1_weights_q0;

assign layer1_weight_tile_8_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_8_d0 = layer1_weights_q0;

assign layer1_weight_tile_9_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_9_d0 = layer1_weights_q0;

assign layer1_weight_tile_address0 = select_ln62_1_reg_986_pp0_iter2_reg;

assign layer1_weight_tile_d0 = layer1_weights_q0;

assign layer1_weights_address0 = zext_ln65_2_fu_932_p1;

assign select_ln62_1_fu_899_p3 = ((icmp_ln63_fu_885_p2[0:0] == 1'b1) ? add_ln62_fu_879_p2 : i_fu_214);

assign select_ln62_fu_891_p3 = ((icmp_ln63_fu_885_p2[0:0] == 1'b1) ? 6'd0 : j_fu_210);

assign trunc_ln62_fu_907_p1 = select_ln62_1_fu_899_p3[5:0];

assign zext_ln65_2_fu_932_p1 = grp_fu_936_p4;

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_62_2_VITIS_LOOP_63_3
