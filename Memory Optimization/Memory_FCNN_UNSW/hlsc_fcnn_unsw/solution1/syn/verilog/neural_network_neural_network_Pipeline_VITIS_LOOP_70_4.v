// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_70_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer1_output_3_address0,
        layer1_output_3_ce0,
        layer1_output_3_we0,
        layer1_output_3_d0,
        layer1_output_2_address0,
        layer1_output_2_ce0,
        layer1_output_2_we0,
        layer1_output_2_d0,
        layer1_output_1_address0,
        layer1_output_1_ce0,
        layer1_output_1_we0,
        layer1_output_1_d0,
        layer1_output_address0,
        layer1_output_ce0,
        layer1_output_we0,
        layer1_output_d0,
        trunc_ln,
        layer1_weight_tile_address0,
        layer1_weight_tile_ce0,
        layer1_weight_tile_q0,
        sext_ln74,
        layer1_weight_tile_1_address0,
        layer1_weight_tile_1_ce0,
        layer1_weight_tile_1_q0,
        sext_ln74_1,
        layer1_weight_tile_2_address0,
        layer1_weight_tile_2_ce0,
        layer1_weight_tile_2_q0,
        sext_ln74_2,
        layer1_weight_tile_3_address0,
        layer1_weight_tile_3_ce0,
        layer1_weight_tile_3_q0,
        sext_ln74_3,
        layer1_weight_tile_4_address0,
        layer1_weight_tile_4_ce0,
        layer1_weight_tile_4_q0,
        sext_ln74_4,
        layer1_weight_tile_5_address0,
        layer1_weight_tile_5_ce0,
        layer1_weight_tile_5_q0,
        sext_ln74_5,
        layer1_weight_tile_6_address0,
        layer1_weight_tile_6_ce0,
        layer1_weight_tile_6_q0,
        sext_ln74_6,
        layer1_weight_tile_7_address0,
        layer1_weight_tile_7_ce0,
        layer1_weight_tile_7_q0,
        sext_ln74_7,
        layer1_weight_tile_8_address0,
        layer1_weight_tile_8_ce0,
        layer1_weight_tile_8_q0,
        sext_ln74_8,
        layer1_weight_tile_9_address0,
        layer1_weight_tile_9_ce0,
        layer1_weight_tile_9_q0,
        sext_ln74_9,
        layer1_weight_tile_10_address0,
        layer1_weight_tile_10_ce0,
        layer1_weight_tile_10_q0,
        sext_ln74_10,
        layer1_weight_tile_11_address0,
        layer1_weight_tile_11_ce0,
        layer1_weight_tile_11_q0,
        sext_ln74_11,
        layer1_weight_tile_12_address0,
        layer1_weight_tile_12_ce0,
        layer1_weight_tile_12_q0,
        sext_ln74_12,
        layer1_weight_tile_13_address0,
        layer1_weight_tile_13_ce0,
        layer1_weight_tile_13_q0,
        sext_ln74_13,
        layer1_weight_tile_14_address0,
        layer1_weight_tile_14_ce0,
        layer1_weight_tile_14_q0,
        sext_ln74_14,
        layer1_weight_tile_15_address0,
        layer1_weight_tile_15_ce0,
        layer1_weight_tile_15_q0,
        sext_ln74_15,
        layer1_weight_tile_16_address0,
        layer1_weight_tile_16_ce0,
        layer1_weight_tile_16_q0,
        sext_ln74_16,
        layer1_weight_tile_17_address0,
        layer1_weight_tile_17_ce0,
        layer1_weight_tile_17_q0,
        sext_ln74_17,
        layer1_weight_tile_18_address0,
        layer1_weight_tile_18_ce0,
        layer1_weight_tile_18_q0,
        sext_ln74_18,
        layer1_weight_tile_19_address0,
        layer1_weight_tile_19_ce0,
        layer1_weight_tile_19_q0,
        sext_ln74_19,
        layer1_weight_tile_20_address0,
        layer1_weight_tile_20_ce0,
        layer1_weight_tile_20_q0,
        sext_ln74_20,
        layer1_weight_tile_21_address0,
        layer1_weight_tile_21_ce0,
        layer1_weight_tile_21_q0,
        sext_ln74_21,
        layer1_weight_tile_22_address0,
        layer1_weight_tile_22_ce0,
        layer1_weight_tile_22_q0,
        sext_ln74_22,
        layer1_weight_tile_23_address0,
        layer1_weight_tile_23_ce0,
        layer1_weight_tile_23_q0,
        sext_ln74_23,
        layer1_weight_tile_24_address0,
        layer1_weight_tile_24_ce0,
        layer1_weight_tile_24_q0,
        sext_ln74_24,
        layer1_weight_tile_25_address0,
        layer1_weight_tile_25_ce0,
        layer1_weight_tile_25_q0,
        sext_ln74_25,
        layer1_weight_tile_26_address0,
        layer1_weight_tile_26_ce0,
        layer1_weight_tile_26_q0,
        sext_ln74_26,
        layer1_weight_tile_27_address0,
        layer1_weight_tile_27_ce0,
        layer1_weight_tile_27_q0,
        sext_ln74_27,
        layer1_weight_tile_28_address0,
        layer1_weight_tile_28_ce0,
        layer1_weight_tile_28_q0,
        sext_ln74_28,
        layer1_weight_tile_29_address0,
        layer1_weight_tile_29_ce0,
        layer1_weight_tile_29_q0,
        sext_ln74_29,
        layer1_weight_tile_30_address0,
        layer1_weight_tile_30_ce0,
        layer1_weight_tile_30_q0,
        sext_ln74_30,
        layer1_weight_tile_31_address0,
        layer1_weight_tile_31_ce0,
        layer1_weight_tile_31_q0,
        sext_ln74_31,
        layer1_weight_tile_32_address0,
        layer1_weight_tile_32_ce0,
        layer1_weight_tile_32_q0,
        sext_ln74_32,
        layer1_weight_tile_33_address0,
        layer1_weight_tile_33_ce0,
        layer1_weight_tile_33_q0,
        sext_ln74_33,
        layer1_weight_tile_34_address0,
        layer1_weight_tile_34_ce0,
        layer1_weight_tile_34_q0,
        sext_ln74_34,
        layer1_weight_tile_35_address0,
        layer1_weight_tile_35_ce0,
        layer1_weight_tile_35_q0,
        sext_ln74_35,
        layer1_weight_tile_36_address0,
        layer1_weight_tile_36_ce0,
        layer1_weight_tile_36_q0,
        sext_ln74_36,
        layer1_weight_tile_37_address0,
        layer1_weight_tile_37_ce0,
        layer1_weight_tile_37_q0,
        sext_ln74_37,
        layer1_weight_tile_38_address0,
        layer1_weight_tile_38_ce0,
        layer1_weight_tile_38_q0,
        sext_ln74_38,
        layer1_weight_tile_39_address0,
        layer1_weight_tile_39_ce0,
        layer1_weight_tile_39_q0,
        sext_ln74_39,
        layer1_weight_tile_40_address0,
        layer1_weight_tile_40_ce0,
        layer1_weight_tile_40_q0,
        sext_ln74_40,
        layer1_weight_tile_41_address0,
        layer1_weight_tile_41_ce0,
        layer1_weight_tile_41_q0,
        sext_ln74_41,
        layer1_weight_tile_42_address0,
        layer1_weight_tile_42_ce0,
        layer1_weight_tile_42_q0,
        sext_ln74_42
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] layer1_output_3_address0;
output   layer1_output_3_ce0;
output   layer1_output_3_we0;
output  [14:0] layer1_output_3_d0;
output  [3:0] layer1_output_2_address0;
output   layer1_output_2_ce0;
output   layer1_output_2_we0;
output  [14:0] layer1_output_2_d0;
output  [3:0] layer1_output_1_address0;
output   layer1_output_1_ce0;
output   layer1_output_1_we0;
output  [14:0] layer1_output_1_d0;
output  [3:0] layer1_output_address0;
output   layer1_output_ce0;
output   layer1_output_we0;
output  [14:0] layer1_output_d0;
input  [5:0] trunc_ln;
output  [1:0] layer1_weight_tile_address0;
output   layer1_weight_tile_ce0;
input  [14:0] layer1_weight_tile_q0;
input  [15:0] sext_ln74;
output  [1:0] layer1_weight_tile_1_address0;
output   layer1_weight_tile_1_ce0;
input  [14:0] layer1_weight_tile_1_q0;
input  [15:0] sext_ln74_1;
output  [1:0] layer1_weight_tile_2_address0;
output   layer1_weight_tile_2_ce0;
input  [14:0] layer1_weight_tile_2_q0;
input  [15:0] sext_ln74_2;
output  [1:0] layer1_weight_tile_3_address0;
output   layer1_weight_tile_3_ce0;
input  [14:0] layer1_weight_tile_3_q0;
input  [15:0] sext_ln74_3;
output  [1:0] layer1_weight_tile_4_address0;
output   layer1_weight_tile_4_ce0;
input  [14:0] layer1_weight_tile_4_q0;
input  [15:0] sext_ln74_4;
output  [1:0] layer1_weight_tile_5_address0;
output   layer1_weight_tile_5_ce0;
input  [14:0] layer1_weight_tile_5_q0;
input  [15:0] sext_ln74_5;
output  [1:0] layer1_weight_tile_6_address0;
output   layer1_weight_tile_6_ce0;
input  [14:0] layer1_weight_tile_6_q0;
input  [15:0] sext_ln74_6;
output  [1:0] layer1_weight_tile_7_address0;
output   layer1_weight_tile_7_ce0;
input  [14:0] layer1_weight_tile_7_q0;
input  [15:0] sext_ln74_7;
output  [1:0] layer1_weight_tile_8_address0;
output   layer1_weight_tile_8_ce0;
input  [14:0] layer1_weight_tile_8_q0;
input  [15:0] sext_ln74_8;
output  [1:0] layer1_weight_tile_9_address0;
output   layer1_weight_tile_9_ce0;
input  [14:0] layer1_weight_tile_9_q0;
input  [15:0] sext_ln74_9;
output  [1:0] layer1_weight_tile_10_address0;
output   layer1_weight_tile_10_ce0;
input  [14:0] layer1_weight_tile_10_q0;
input  [15:0] sext_ln74_10;
output  [1:0] layer1_weight_tile_11_address0;
output   layer1_weight_tile_11_ce0;
input  [14:0] layer1_weight_tile_11_q0;
input  [15:0] sext_ln74_11;
output  [1:0] layer1_weight_tile_12_address0;
output   layer1_weight_tile_12_ce0;
input  [14:0] layer1_weight_tile_12_q0;
input  [15:0] sext_ln74_12;
output  [1:0] layer1_weight_tile_13_address0;
output   layer1_weight_tile_13_ce0;
input  [14:0] layer1_weight_tile_13_q0;
input  [15:0] sext_ln74_13;
output  [1:0] layer1_weight_tile_14_address0;
output   layer1_weight_tile_14_ce0;
input  [14:0] layer1_weight_tile_14_q0;
input  [15:0] sext_ln74_14;
output  [1:0] layer1_weight_tile_15_address0;
output   layer1_weight_tile_15_ce0;
input  [14:0] layer1_weight_tile_15_q0;
input  [15:0] sext_ln74_15;
output  [1:0] layer1_weight_tile_16_address0;
output   layer1_weight_tile_16_ce0;
input  [14:0] layer1_weight_tile_16_q0;
input  [15:0] sext_ln74_16;
output  [1:0] layer1_weight_tile_17_address0;
output   layer1_weight_tile_17_ce0;
input  [14:0] layer1_weight_tile_17_q0;
input  [15:0] sext_ln74_17;
output  [1:0] layer1_weight_tile_18_address0;
output   layer1_weight_tile_18_ce0;
input  [14:0] layer1_weight_tile_18_q0;
input  [15:0] sext_ln74_18;
output  [1:0] layer1_weight_tile_19_address0;
output   layer1_weight_tile_19_ce0;
input  [14:0] layer1_weight_tile_19_q0;
input  [15:0] sext_ln74_19;
output  [1:0] layer1_weight_tile_20_address0;
output   layer1_weight_tile_20_ce0;
input  [14:0] layer1_weight_tile_20_q0;
input  [15:0] sext_ln74_20;
output  [1:0] layer1_weight_tile_21_address0;
output   layer1_weight_tile_21_ce0;
input  [14:0] layer1_weight_tile_21_q0;
input  [15:0] sext_ln74_21;
output  [1:0] layer1_weight_tile_22_address0;
output   layer1_weight_tile_22_ce0;
input  [14:0] layer1_weight_tile_22_q0;
input  [15:0] sext_ln74_22;
output  [1:0] layer1_weight_tile_23_address0;
output   layer1_weight_tile_23_ce0;
input  [14:0] layer1_weight_tile_23_q0;
input  [15:0] sext_ln74_23;
output  [1:0] layer1_weight_tile_24_address0;
output   layer1_weight_tile_24_ce0;
input  [14:0] layer1_weight_tile_24_q0;
input  [15:0] sext_ln74_24;
output  [1:0] layer1_weight_tile_25_address0;
output   layer1_weight_tile_25_ce0;
input  [14:0] layer1_weight_tile_25_q0;
input  [15:0] sext_ln74_25;
output  [1:0] layer1_weight_tile_26_address0;
output   layer1_weight_tile_26_ce0;
input  [14:0] layer1_weight_tile_26_q0;
input  [15:0] sext_ln74_26;
output  [1:0] layer1_weight_tile_27_address0;
output   layer1_weight_tile_27_ce0;
input  [14:0] layer1_weight_tile_27_q0;
input  [15:0] sext_ln74_27;
output  [1:0] layer1_weight_tile_28_address0;
output   layer1_weight_tile_28_ce0;
input  [14:0] layer1_weight_tile_28_q0;
input  [15:0] sext_ln74_28;
output  [1:0] layer1_weight_tile_29_address0;
output   layer1_weight_tile_29_ce0;
input  [14:0] layer1_weight_tile_29_q0;
input  [15:0] sext_ln74_29;
output  [1:0] layer1_weight_tile_30_address0;
output   layer1_weight_tile_30_ce0;
input  [14:0] layer1_weight_tile_30_q0;
input  [15:0] sext_ln74_30;
output  [1:0] layer1_weight_tile_31_address0;
output   layer1_weight_tile_31_ce0;
input  [14:0] layer1_weight_tile_31_q0;
input  [15:0] sext_ln74_31;
output  [1:0] layer1_weight_tile_32_address0;
output   layer1_weight_tile_32_ce0;
input  [14:0] layer1_weight_tile_32_q0;
input  [15:0] sext_ln74_32;
output  [1:0] layer1_weight_tile_33_address0;
output   layer1_weight_tile_33_ce0;
input  [14:0] layer1_weight_tile_33_q0;
input  [15:0] sext_ln74_33;
output  [1:0] layer1_weight_tile_34_address0;
output   layer1_weight_tile_34_ce0;
input  [14:0] layer1_weight_tile_34_q0;
input  [15:0] sext_ln74_34;
output  [1:0] layer1_weight_tile_35_address0;
output   layer1_weight_tile_35_ce0;
input  [14:0] layer1_weight_tile_35_q0;
input  [15:0] sext_ln74_35;
output  [1:0] layer1_weight_tile_36_address0;
output   layer1_weight_tile_36_ce0;
input  [14:0] layer1_weight_tile_36_q0;
input  [15:0] sext_ln74_36;
output  [1:0] layer1_weight_tile_37_address0;
output   layer1_weight_tile_37_ce0;
input  [14:0] layer1_weight_tile_37_q0;
input  [15:0] sext_ln74_37;
output  [1:0] layer1_weight_tile_38_address0;
output   layer1_weight_tile_38_ce0;
input  [14:0] layer1_weight_tile_38_q0;
input  [15:0] sext_ln74_38;
output  [1:0] layer1_weight_tile_39_address0;
output   layer1_weight_tile_39_ce0;
input  [14:0] layer1_weight_tile_39_q0;
input  [15:0] sext_ln74_39;
output  [1:0] layer1_weight_tile_40_address0;
output   layer1_weight_tile_40_ce0;
input  [14:0] layer1_weight_tile_40_q0;
input  [15:0] sext_ln74_40;
output  [1:0] layer1_weight_tile_41_address0;
output   layer1_weight_tile_41_ce0;
input  [14:0] layer1_weight_tile_41_q0;
input  [15:0] sext_ln74_41;
output  [1:0] layer1_weight_tile_42_address0;
output   layer1_weight_tile_42_ce0;
input  [14:0] layer1_weight_tile_42_q0;
input  [15:0] sext_ln74_42;

reg ap_idle;
reg layer1_output_3_ce0;
reg layer1_output_3_we0;
reg layer1_output_2_ce0;
reg layer1_output_2_we0;
reg layer1_output_1_ce0;
reg layer1_output_1_we0;
reg layer1_output_ce0;
reg layer1_output_we0;
reg layer1_weight_tile_ce0;
reg layer1_weight_tile_1_ce0;
reg layer1_weight_tile_2_ce0;
reg layer1_weight_tile_3_ce0;
reg layer1_weight_tile_4_ce0;
reg layer1_weight_tile_5_ce0;
reg layer1_weight_tile_6_ce0;
reg layer1_weight_tile_7_ce0;
reg layer1_weight_tile_8_ce0;
reg layer1_weight_tile_9_ce0;
reg layer1_weight_tile_10_ce0;
reg layer1_weight_tile_11_ce0;
reg layer1_weight_tile_12_ce0;
reg layer1_weight_tile_13_ce0;
reg layer1_weight_tile_14_ce0;
reg layer1_weight_tile_15_ce0;
reg layer1_weight_tile_16_ce0;
reg layer1_weight_tile_17_ce0;
reg layer1_weight_tile_18_ce0;
reg layer1_weight_tile_19_ce0;
reg layer1_weight_tile_20_ce0;
reg layer1_weight_tile_21_ce0;
reg layer1_weight_tile_22_ce0;
reg layer1_weight_tile_23_ce0;
reg layer1_weight_tile_24_ce0;
reg layer1_weight_tile_25_ce0;
reg layer1_weight_tile_26_ce0;
reg layer1_weight_tile_27_ce0;
reg layer1_weight_tile_28_ce0;
reg layer1_weight_tile_29_ce0;
reg layer1_weight_tile_30_ce0;
reg layer1_weight_tile_31_ce0;
reg layer1_weight_tile_32_ce0;
reg layer1_weight_tile_33_ce0;
reg layer1_weight_tile_34_ce0;
reg layer1_weight_tile_35_ce0;
reg layer1_weight_tile_36_ce0;
reg layer1_weight_tile_37_ce0;
reg layer1_weight_tile_38_ce0;
reg layer1_weight_tile_39_ce0;
reg layer1_weight_tile_40_ce0;
reg layer1_weight_tile_41_ce0;
reg layer1_weight_tile_42_ce0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
wire    ap_block_state40_pp0_stage1_iter19;
wire    ap_block_state42_pp0_stage1_iter20;
wire    ap_block_state44_pp0_stage1_iter21;
wire    ap_block_state46_pp0_stage1_iter22;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln70_reg_2908;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] layer1_bias_address0;
reg    layer1_bias_ce0;
wire   [10:0] layer1_bias_q0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state35_pp0_stage0_iter17;
wire    ap_block_state37_pp0_stage0_iter18;
wire    ap_block_state39_pp0_stage0_iter19;
wire    ap_block_state41_pp0_stage0_iter20;
wire    ap_block_state43_pp0_stage0_iter21;
wire    ap_block_state45_pp0_stage0_iter22;
wire    ap_block_state47_pp0_stage0_iter23;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln74_42_cast_fu_1134_p1;
reg  signed [23:0] sext_ln74_42_cast_reg_2644;
wire  signed [23:0] sext_ln74_41_cast_fu_1138_p1;
reg  signed [23:0] sext_ln74_41_cast_reg_2649;
wire  signed [23:0] sext_ln74_40_cast_fu_1142_p1;
reg  signed [23:0] sext_ln74_40_cast_reg_2654;
wire  signed [23:0] sext_ln74_39_cast_fu_1146_p1;
reg  signed [23:0] sext_ln74_39_cast_reg_2659;
wire  signed [23:0] sext_ln74_38_cast_fu_1150_p1;
reg  signed [23:0] sext_ln74_38_cast_reg_2664;
wire  signed [23:0] sext_ln74_37_cast_fu_1154_p1;
reg  signed [23:0] sext_ln74_37_cast_reg_2669;
wire  signed [23:0] sext_ln74_36_cast_fu_1158_p1;
reg  signed [23:0] sext_ln74_36_cast_reg_2674;
wire  signed [23:0] sext_ln74_35_cast_fu_1162_p1;
reg  signed [23:0] sext_ln74_35_cast_reg_2679;
wire  signed [23:0] sext_ln74_34_cast_fu_1166_p1;
reg  signed [23:0] sext_ln74_34_cast_reg_2684;
wire  signed [23:0] sext_ln74_33_cast_fu_1170_p1;
reg  signed [23:0] sext_ln74_33_cast_reg_2689;
wire  signed [23:0] sext_ln74_32_cast_fu_1174_p1;
reg  signed [23:0] sext_ln74_32_cast_reg_2694;
wire  signed [23:0] sext_ln74_31_cast_fu_1178_p1;
reg  signed [23:0] sext_ln74_31_cast_reg_2699;
wire  signed [23:0] sext_ln74_30_cast_fu_1182_p1;
reg  signed [23:0] sext_ln74_30_cast_reg_2704;
wire  signed [23:0] sext_ln74_29_cast_fu_1186_p1;
reg  signed [23:0] sext_ln74_29_cast_reg_2709;
wire  signed [23:0] sext_ln74_28_cast_fu_1190_p1;
reg  signed [23:0] sext_ln74_28_cast_reg_2714;
wire  signed [23:0] sext_ln74_27_cast_fu_1194_p1;
reg  signed [23:0] sext_ln74_27_cast_reg_2719;
wire  signed [23:0] sext_ln74_26_cast_fu_1198_p1;
reg  signed [23:0] sext_ln74_26_cast_reg_2724;
wire  signed [23:0] sext_ln74_25_cast_fu_1202_p1;
reg  signed [23:0] sext_ln74_25_cast_reg_2729;
wire  signed [23:0] sext_ln74_24_cast_fu_1206_p1;
reg  signed [23:0] sext_ln74_24_cast_reg_2734;
wire  signed [23:0] sext_ln74_23_cast_fu_1210_p1;
reg  signed [23:0] sext_ln74_23_cast_reg_2739;
wire  signed [23:0] sext_ln74_22_cast_fu_1214_p1;
reg  signed [23:0] sext_ln74_22_cast_reg_2744;
wire  signed [23:0] sext_ln74_21_cast_fu_1218_p1;
reg  signed [23:0] sext_ln74_21_cast_reg_2749;
wire  signed [23:0] sext_ln74_20_cast_fu_1222_p1;
reg  signed [23:0] sext_ln74_20_cast_reg_2754;
wire  signed [23:0] sext_ln74_19_cast_fu_1226_p1;
reg  signed [23:0] sext_ln74_19_cast_reg_2759;
wire  signed [23:0] sext_ln74_18_cast_fu_1230_p1;
reg  signed [23:0] sext_ln74_18_cast_reg_2764;
wire  signed [23:0] sext_ln74_17_cast_fu_1234_p1;
reg  signed [23:0] sext_ln74_17_cast_reg_2769;
wire  signed [23:0] sext_ln74_16_cast_fu_1238_p1;
reg  signed [23:0] sext_ln74_16_cast_reg_2774;
wire  signed [23:0] sext_ln74_15_cast_fu_1242_p1;
reg  signed [23:0] sext_ln74_15_cast_reg_2779;
wire  signed [23:0] sext_ln74_14_cast_fu_1246_p1;
reg  signed [23:0] sext_ln74_14_cast_reg_2784;
wire  signed [23:0] sext_ln74_13_cast_fu_1250_p1;
reg  signed [23:0] sext_ln74_13_cast_reg_2789;
wire  signed [23:0] sext_ln74_12_cast_fu_1254_p1;
reg  signed [23:0] sext_ln74_12_cast_reg_2794;
wire  signed [23:0] sext_ln74_11_cast_fu_1258_p1;
reg  signed [23:0] sext_ln74_11_cast_reg_2799;
wire  signed [23:0] sext_ln74_10_cast_fu_1262_p1;
reg  signed [23:0] sext_ln74_10_cast_reg_2804;
wire  signed [23:0] sext_ln74_9_cast_fu_1266_p1;
reg  signed [23:0] sext_ln74_9_cast_reg_2809;
wire  signed [23:0] sext_ln74_8_cast_fu_1270_p1;
reg  signed [23:0] sext_ln74_8_cast_reg_2814;
wire  signed [23:0] sext_ln74_7_cast_fu_1274_p1;
reg  signed [23:0] sext_ln74_7_cast_reg_2819;
wire  signed [23:0] sext_ln74_6_cast_fu_1278_p1;
reg  signed [23:0] sext_ln74_6_cast_reg_2824;
wire  signed [23:0] sext_ln74_5_cast_fu_1282_p1;
reg  signed [23:0] sext_ln74_5_cast_reg_2829;
wire  signed [23:0] sext_ln74_4_cast_fu_1286_p1;
reg  signed [23:0] sext_ln74_4_cast_reg_2834;
wire  signed [23:0] sext_ln74_3_cast_fu_1290_p1;
reg  signed [23:0] sext_ln74_3_cast_reg_2839;
wire  signed [23:0] sext_ln74_2_cast_fu_1294_p1;
reg  signed [23:0] sext_ln74_2_cast_reg_2844;
wire  signed [23:0] sext_ln74_1_cast_fu_1298_p1;
reg  signed [23:0] sext_ln74_1_cast_reg_2849;
wire  signed [23:0] sext_ln74_cast_fu_1302_p1;
reg  signed [23:0] sext_ln74_cast_reg_2854;
reg   [2:0] i_reg_2859;
reg   [2:0] i_reg_2859_pp0_iter1_reg;
reg   [2:0] i_reg_2859_pp0_iter2_reg;
reg   [2:0] i_reg_2859_pp0_iter3_reg;
reg   [2:0] i_reg_2859_pp0_iter4_reg;
reg   [2:0] i_reg_2859_pp0_iter5_reg;
reg   [2:0] i_reg_2859_pp0_iter6_reg;
reg   [2:0] i_reg_2859_pp0_iter7_reg;
reg   [2:0] i_reg_2859_pp0_iter8_reg;
reg   [2:0] i_reg_2859_pp0_iter9_reg;
reg   [2:0] i_reg_2859_pp0_iter10_reg;
reg   [2:0] i_reg_2859_pp0_iter11_reg;
reg   [2:0] i_reg_2859_pp0_iter12_reg;
reg   [2:0] i_reg_2859_pp0_iter13_reg;
reg   [2:0] i_reg_2859_pp0_iter14_reg;
reg   [2:0] i_reg_2859_pp0_iter15_reg;
reg   [2:0] i_reg_2859_pp0_iter16_reg;
reg   [2:0] i_reg_2859_pp0_iter17_reg;
reg   [2:0] i_reg_2859_pp0_iter18_reg;
reg   [2:0] i_reg_2859_pp0_iter19_reg;
reg   [2:0] i_reg_2859_pp0_iter20_reg;
reg   [2:0] i_reg_2859_pp0_iter21_reg;
wire   [63:0] zext_ln70_2_fu_1314_p1;
reg   [63:0] zext_ln70_2_reg_2864;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter1_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter2_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter3_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter4_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter5_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter6_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter7_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter8_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter9_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter10_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter11_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter12_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter13_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter14_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter15_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter16_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter17_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter18_reg;
reg   [63:0] zext_ln70_2_reg_2864_pp0_iter19_reg;
wire   [0:0] icmp_ln70_fu_1321_p2;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter1_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter2_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter3_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter4_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter5_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter6_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter7_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter8_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter9_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter10_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter11_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter12_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter13_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter14_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter15_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter16_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter17_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter18_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter19_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter20_reg;
reg   [0:0] icmp_ln70_reg_2908_pp0_iter21_reg;
wire   [1:0] trunc_ln70_fu_1333_p1;
reg   [1:0] trunc_ln70_reg_2912;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter1_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter2_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter3_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter4_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter5_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter6_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter7_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter8_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter9_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter10_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter11_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter12_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter13_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter14_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter15_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter16_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter17_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter18_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter19_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter20_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter21_reg;
reg   [1:0] trunc_ln70_reg_2912_pp0_iter22_reg;
reg  signed [14:0] layer1_weight_tile_load_reg_2931;
wire    ap_block_pp0_stage1_11001;
reg  signed [14:0] layer1_weight_tile_2_load_reg_2941;
reg   [15:0] tmp_7_reg_2946;
reg  signed [14:0] layer1_weight_tile_4_load_reg_2976;
reg  signed [14:0] layer1_weight_tile_6_load_reg_3011;
reg  signed [14:0] layer1_weight_tile_8_load_reg_3046;
reg  signed [14:0] layer1_weight_tile_10_load_reg_3081;
reg  signed [14:0] layer1_weight_tile_12_load_reg_3116;
reg  signed [14:0] layer1_weight_tile_14_load_reg_3151;
reg  signed [14:0] layer1_weight_tile_16_load_reg_3186;
reg  signed [14:0] layer1_weight_tile_18_load_reg_3221;
reg  signed [14:0] layer1_weight_tile_20_load_reg_3256;
reg  signed [14:0] layer1_weight_tile_22_load_reg_3291;
reg  signed [14:0] layer1_weight_tile_24_load_reg_3326;
reg  signed [14:0] layer1_weight_tile_26_load_reg_3361;
reg  signed [14:0] layer1_weight_tile_28_load_reg_3396;
reg  signed [14:0] layer1_weight_tile_30_load_reg_3431;
reg  signed [14:0] layer1_weight_tile_32_load_reg_3466;
reg  signed [14:0] layer1_weight_tile_34_load_reg_3501;
reg  signed [14:0] layer1_weight_tile_36_load_reg_3536;
reg  signed [14:0] layer1_weight_tile_38_load_reg_3571;
reg  signed [14:0] layer1_weight_tile_40_load_reg_3606;
reg  signed [14:0] layer1_weight_tile_42_load_reg_3641;
reg   [3:0] lshr_ln_reg_3661;
wire   [14:0] add_ln72_fu_2266_p2;
reg   [14:0] add_ln72_reg_3676;
wire   [0:0] icmp_ln14_fu_2272_p2;
reg   [0:0] icmp_ln14_reg_3681;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln70_fu_2202_p1;
wire   [63:0] zext_ln70_1_fu_2278_p1;
reg   [2:0] i_1_fu_242;
wire   [2:0] add_ln70_1_fu_1327_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i;
wire   [14:0] select_ln14_fu_2285_p3;
wire    ap_block_pp0_stage1;
wire  signed [15:0] mul_ln74_fu_1349_p1;
wire   [23:0] mul_ln74_fu_1349_p2;
wire  signed [23:0] tmp_8_fu_1378_p1;
wire   [23:0] grp_fu_2295_p3;
wire   [15:0] tmp_8_fu_1378_p4;
wire  signed [23:0] tmp_9_fu_1398_p1;
wire   [23:0] grp_fu_2303_p3;
wire   [15:0] tmp_9_fu_1398_p4;
wire  signed [23:0] tmp_s_fu_1419_p1;
wire   [23:0] grp_fu_2311_p3;
wire   [15:0] tmp_s_fu_1419_p4;
wire  signed [23:0] tmp_3_fu_1439_p1;
wire   [23:0] grp_fu_2319_p3;
wire   [15:0] tmp_3_fu_1439_p4;
wire  signed [23:0] tmp_4_fu_1460_p1;
wire   [23:0] grp_fu_2327_p3;
wire   [15:0] tmp_4_fu_1460_p4;
wire  signed [23:0] tmp_5_fu_1480_p1;
wire   [23:0] grp_fu_2335_p3;
wire   [15:0] tmp_5_fu_1480_p4;
wire  signed [23:0] tmp_6_fu_1501_p1;
wire   [23:0] grp_fu_2343_p3;
wire   [15:0] tmp_6_fu_1501_p4;
wire  signed [23:0] tmp_10_fu_1521_p1;
wire   [23:0] grp_fu_2351_p3;
wire   [15:0] tmp_10_fu_1521_p4;
wire  signed [23:0] tmp_11_fu_1542_p1;
wire   [23:0] grp_fu_2359_p3;
wire   [15:0] tmp_11_fu_1542_p4;
wire  signed [23:0] tmp_12_fu_1562_p1;
wire   [23:0] grp_fu_2367_p3;
wire   [15:0] tmp_12_fu_1562_p4;
wire  signed [23:0] tmp_13_fu_1583_p1;
wire   [23:0] grp_fu_2375_p3;
wire   [15:0] tmp_13_fu_1583_p4;
wire  signed [23:0] tmp_14_fu_1603_p1;
wire   [23:0] grp_fu_2383_p3;
wire   [15:0] tmp_14_fu_1603_p4;
wire  signed [23:0] tmp_15_fu_1624_p1;
wire   [23:0] grp_fu_2391_p3;
wire   [15:0] tmp_15_fu_1624_p4;
wire  signed [23:0] tmp_16_fu_1644_p1;
wire   [23:0] grp_fu_2399_p3;
wire   [15:0] tmp_16_fu_1644_p4;
wire  signed [23:0] tmp_17_fu_1665_p1;
wire   [23:0] grp_fu_2407_p3;
wire   [15:0] tmp_17_fu_1665_p4;
wire  signed [23:0] tmp_18_fu_1685_p1;
wire   [23:0] grp_fu_2415_p3;
wire   [15:0] tmp_18_fu_1685_p4;
wire  signed [23:0] tmp_19_fu_1706_p1;
wire   [23:0] grp_fu_2423_p3;
wire   [15:0] tmp_19_fu_1706_p4;
wire  signed [23:0] tmp_20_fu_1726_p1;
wire   [23:0] grp_fu_2431_p3;
wire   [15:0] tmp_20_fu_1726_p4;
wire  signed [23:0] tmp_21_fu_1747_p1;
wire   [23:0] grp_fu_2439_p3;
wire   [15:0] tmp_21_fu_1747_p4;
wire  signed [23:0] tmp_22_fu_1767_p1;
wire   [23:0] grp_fu_2447_p3;
wire   [15:0] tmp_22_fu_1767_p4;
wire  signed [23:0] tmp_23_fu_1788_p1;
wire   [23:0] grp_fu_2455_p3;
wire   [15:0] tmp_23_fu_1788_p4;
wire  signed [23:0] tmp_24_fu_1808_p1;
wire   [23:0] grp_fu_2463_p3;
wire   [15:0] tmp_24_fu_1808_p4;
wire  signed [23:0] tmp_25_fu_1829_p1;
wire   [23:0] grp_fu_2471_p3;
wire   [15:0] tmp_25_fu_1829_p4;
wire  signed [23:0] tmp_26_fu_1849_p1;
wire   [23:0] grp_fu_2479_p3;
wire   [15:0] tmp_26_fu_1849_p4;
wire  signed [23:0] tmp_27_fu_1870_p1;
wire   [23:0] grp_fu_2487_p3;
wire   [15:0] tmp_27_fu_1870_p4;
wire  signed [23:0] tmp_28_fu_1890_p1;
wire   [23:0] grp_fu_2495_p3;
wire   [15:0] tmp_28_fu_1890_p4;
wire  signed [23:0] tmp_29_fu_1911_p1;
wire   [23:0] grp_fu_2503_p3;
wire   [15:0] tmp_29_fu_1911_p4;
wire  signed [23:0] tmp_30_fu_1931_p1;
wire   [23:0] grp_fu_2511_p3;
wire   [15:0] tmp_30_fu_1931_p4;
wire  signed [23:0] tmp_31_fu_1952_p1;
wire   [23:0] grp_fu_2519_p3;
wire   [15:0] tmp_31_fu_1952_p4;
wire  signed [23:0] tmp_32_fu_1972_p1;
wire   [23:0] grp_fu_2527_p3;
wire   [15:0] tmp_32_fu_1972_p4;
wire  signed [23:0] tmp_33_fu_1993_p1;
wire   [23:0] grp_fu_2535_p3;
wire   [15:0] tmp_33_fu_1993_p4;
wire  signed [23:0] tmp_34_fu_2013_p1;
wire   [23:0] grp_fu_2543_p3;
wire   [15:0] tmp_34_fu_2013_p4;
wire  signed [23:0] tmp_35_fu_2034_p1;
wire   [23:0] grp_fu_2551_p3;
wire   [15:0] tmp_35_fu_2034_p4;
wire  signed [23:0] tmp_36_fu_2054_p1;
wire   [23:0] grp_fu_2559_p3;
wire   [15:0] tmp_36_fu_2054_p4;
wire  signed [23:0] tmp_37_fu_2075_p1;
wire   [23:0] grp_fu_2567_p3;
wire   [15:0] tmp_37_fu_2075_p4;
wire  signed [23:0] tmp_38_fu_2095_p1;
wire   [23:0] grp_fu_2575_p3;
wire   [15:0] tmp_38_fu_2095_p4;
wire  signed [23:0] tmp_39_fu_2116_p1;
wire   [23:0] grp_fu_2583_p3;
wire   [15:0] tmp_39_fu_2116_p4;
wire  signed [23:0] tmp_40_fu_2136_p1;
wire   [23:0] grp_fu_2591_p3;
wire   [15:0] tmp_40_fu_2136_p4;
wire  signed [23:0] tmp_41_fu_2157_p1;
wire   [23:0] grp_fu_2599_p3;
wire   [15:0] tmp_41_fu_2157_p4;
wire  signed [23:0] tmp_42_fu_2177_p1;
wire   [23:0] grp_fu_2607_p3;
wire   [15:0] tmp_42_fu_2177_p4;
wire   [5:0] zext_ln70_3_fu_2194_p1;
wire   [5:0] add_ln70_fu_2197_p2;
wire  signed [23:0] tmp_43_fu_2217_p1;
wire   [23:0] grp_fu_2615_p3;
wire   [15:0] tmp_43_fu_2217_p4;
wire  signed [23:0] sum_fu_2234_p1;
wire   [23:0] grp_fu_2623_p3;
wire  signed [10:0] sext_ln76_fu_2243_p0;
wire  signed [23:0] trunc_ln2_fu_2247_p1;
wire  signed [10:0] sext_ln76_1_fu_2256_p0;
wire  signed [15:0] sext_ln76_fu_2243_p1;
wire   [15:0] sum_fu_2234_p4;
wire  signed [14:0] sext_ln76_1_fu_2256_p1;
wire   [14:0] trunc_ln2_fu_2247_p4;
wire   [15:0] sum_2_fu_2260_p2;
wire  signed [15:0] grp_fu_2295_p1;
wire   [23:0] grp_fu_2295_p2;
wire  signed [15:0] grp_fu_2303_p1;
wire   [23:0] grp_fu_2303_p2;
wire  signed [15:0] grp_fu_2311_p1;
wire   [23:0] grp_fu_2311_p2;
wire  signed [15:0] grp_fu_2319_p1;
wire   [23:0] grp_fu_2319_p2;
wire  signed [15:0] grp_fu_2327_p1;
wire   [23:0] grp_fu_2327_p2;
wire  signed [15:0] grp_fu_2335_p1;
wire   [23:0] grp_fu_2335_p2;
wire  signed [15:0] grp_fu_2343_p1;
wire   [23:0] grp_fu_2343_p2;
wire  signed [15:0] grp_fu_2351_p1;
wire   [23:0] grp_fu_2351_p2;
wire  signed [15:0] grp_fu_2359_p1;
wire   [23:0] grp_fu_2359_p2;
wire  signed [15:0] grp_fu_2367_p1;
wire   [23:0] grp_fu_2367_p2;
wire  signed [15:0] grp_fu_2375_p1;
wire   [23:0] grp_fu_2375_p2;
wire  signed [15:0] grp_fu_2383_p1;
wire   [23:0] grp_fu_2383_p2;
wire  signed [15:0] grp_fu_2391_p1;
wire   [23:0] grp_fu_2391_p2;
wire  signed [15:0] grp_fu_2399_p1;
wire   [23:0] grp_fu_2399_p2;
wire  signed [15:0] grp_fu_2407_p1;
wire   [23:0] grp_fu_2407_p2;
wire  signed [15:0] grp_fu_2415_p1;
wire   [23:0] grp_fu_2415_p2;
wire  signed [15:0] grp_fu_2423_p1;
wire   [23:0] grp_fu_2423_p2;
wire  signed [15:0] grp_fu_2431_p1;
wire   [23:0] grp_fu_2431_p2;
wire  signed [15:0] grp_fu_2439_p1;
wire   [23:0] grp_fu_2439_p2;
wire  signed [15:0] grp_fu_2447_p1;
wire   [23:0] grp_fu_2447_p2;
wire  signed [15:0] grp_fu_2455_p1;
wire   [23:0] grp_fu_2455_p2;
wire  signed [15:0] grp_fu_2463_p1;
wire   [23:0] grp_fu_2463_p2;
wire  signed [15:0] grp_fu_2471_p1;
wire   [23:0] grp_fu_2471_p2;
wire  signed [15:0] grp_fu_2479_p1;
wire   [23:0] grp_fu_2479_p2;
wire  signed [15:0] grp_fu_2487_p1;
wire   [23:0] grp_fu_2487_p2;
wire  signed [15:0] grp_fu_2495_p1;
wire   [23:0] grp_fu_2495_p2;
wire  signed [15:0] grp_fu_2503_p1;
wire   [23:0] grp_fu_2503_p2;
wire  signed [15:0] grp_fu_2511_p1;
wire   [23:0] grp_fu_2511_p2;
wire  signed [15:0] grp_fu_2519_p1;
wire   [23:0] grp_fu_2519_p2;
wire  signed [15:0] grp_fu_2527_p1;
wire   [23:0] grp_fu_2527_p2;
wire  signed [15:0] grp_fu_2535_p1;
wire   [23:0] grp_fu_2535_p2;
wire  signed [15:0] grp_fu_2543_p1;
wire   [23:0] grp_fu_2543_p2;
wire  signed [15:0] grp_fu_2551_p1;
wire   [23:0] grp_fu_2551_p2;
wire  signed [15:0] grp_fu_2559_p1;
wire   [23:0] grp_fu_2559_p2;
wire  signed [15:0] grp_fu_2567_p1;
wire   [23:0] grp_fu_2567_p2;
wire  signed [15:0] grp_fu_2575_p1;
wire   [23:0] grp_fu_2575_p2;
wire  signed [15:0] grp_fu_2583_p1;
wire   [23:0] grp_fu_2583_p2;
wire  signed [15:0] grp_fu_2591_p1;
wire   [23:0] grp_fu_2591_p2;
wire  signed [15:0] grp_fu_2599_p1;
wire   [23:0] grp_fu_2599_p2;
wire  signed [15:0] grp_fu_2607_p1;
wire   [23:0] grp_fu_2607_p2;
wire  signed [15:0] grp_fu_2615_p1;
wire   [23:0] grp_fu_2615_p2;
wire  signed [15:0] grp_fu_2623_p1;
wire   [23:0] grp_fu_2623_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter22_stage0;
reg    ap_idle_pp0_0to21;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to23;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_70_4_layer1_bias_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_bias_address0),
    .ce0(layer1_bias_ce0),
    .q0(layer1_bias_q0)
);

neural_network_mul_15s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_15s_16s_24_1_1_U48(
    .din0(layer1_weight_tile_load_reg_2931),
    .din1(mul_ln74_fu_1349_p1),
    .dout(mul_ln74_fu_1349_p2)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_1_q0),
    .din1(grp_fu_2295_p1),
    .din2(grp_fu_2295_p2),
    .ce(1'b1),
    .dout(grp_fu_2295_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_2_load_reg_2941),
    .din1(grp_fu_2303_p1),
    .din2(grp_fu_2303_p2),
    .ce(1'b1),
    .dout(grp_fu_2303_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_3_q0),
    .din1(grp_fu_2311_p1),
    .din2(grp_fu_2311_p2),
    .ce(1'b1),
    .dout(grp_fu_2311_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_4_load_reg_2976),
    .din1(grp_fu_2319_p1),
    .din2(grp_fu_2319_p2),
    .ce(1'b1),
    .dout(grp_fu_2319_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_5_q0),
    .din1(grp_fu_2327_p1),
    .din2(grp_fu_2327_p2),
    .ce(1'b1),
    .dout(grp_fu_2327_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_6_load_reg_3011),
    .din1(grp_fu_2335_p1),
    .din2(grp_fu_2335_p2),
    .ce(1'b1),
    .dout(grp_fu_2335_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_7_q0),
    .din1(grp_fu_2343_p1),
    .din2(grp_fu_2343_p2),
    .ce(1'b1),
    .dout(grp_fu_2343_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_8_load_reg_3046),
    .din1(grp_fu_2351_p1),
    .din2(grp_fu_2351_p2),
    .ce(1'b1),
    .dout(grp_fu_2351_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_9_q0),
    .din1(grp_fu_2359_p1),
    .din2(grp_fu_2359_p2),
    .ce(1'b1),
    .dout(grp_fu_2359_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_10_load_reg_3081),
    .din1(grp_fu_2367_p1),
    .din2(grp_fu_2367_p2),
    .ce(1'b1),
    .dout(grp_fu_2367_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_11_q0),
    .din1(grp_fu_2375_p1),
    .din2(grp_fu_2375_p2),
    .ce(1'b1),
    .dout(grp_fu_2375_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_12_load_reg_3116),
    .din1(grp_fu_2383_p1),
    .din2(grp_fu_2383_p2),
    .ce(1'b1),
    .dout(grp_fu_2383_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_13_q0),
    .din1(grp_fu_2391_p1),
    .din2(grp_fu_2391_p2),
    .ce(1'b1),
    .dout(grp_fu_2391_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_14_load_reg_3151),
    .din1(grp_fu_2399_p1),
    .din2(grp_fu_2399_p2),
    .ce(1'b1),
    .dout(grp_fu_2399_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_15_q0),
    .din1(grp_fu_2407_p1),
    .din2(grp_fu_2407_p2),
    .ce(1'b1),
    .dout(grp_fu_2407_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_16_load_reg_3186),
    .din1(grp_fu_2415_p1),
    .din2(grp_fu_2415_p2),
    .ce(1'b1),
    .dout(grp_fu_2415_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_17_q0),
    .din1(grp_fu_2423_p1),
    .din2(grp_fu_2423_p2),
    .ce(1'b1),
    .dout(grp_fu_2423_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_18_load_reg_3221),
    .din1(grp_fu_2431_p1),
    .din2(grp_fu_2431_p2),
    .ce(1'b1),
    .dout(grp_fu_2431_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_19_q0),
    .din1(grp_fu_2439_p1),
    .din2(grp_fu_2439_p2),
    .ce(1'b1),
    .dout(grp_fu_2439_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_20_load_reg_3256),
    .din1(grp_fu_2447_p1),
    .din2(grp_fu_2447_p2),
    .ce(1'b1),
    .dout(grp_fu_2447_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_21_q0),
    .din1(grp_fu_2455_p1),
    .din2(grp_fu_2455_p2),
    .ce(1'b1),
    .dout(grp_fu_2455_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_22_load_reg_3291),
    .din1(grp_fu_2463_p1),
    .din2(grp_fu_2463_p2),
    .ce(1'b1),
    .dout(grp_fu_2463_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_23_q0),
    .din1(grp_fu_2471_p1),
    .din2(grp_fu_2471_p2),
    .ce(1'b1),
    .dout(grp_fu_2471_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_24_load_reg_3326),
    .din1(grp_fu_2479_p1),
    .din2(grp_fu_2479_p2),
    .ce(1'b1),
    .dout(grp_fu_2479_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_25_q0),
    .din1(grp_fu_2487_p1),
    .din2(grp_fu_2487_p2),
    .ce(1'b1),
    .dout(grp_fu_2487_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_26_load_reg_3361),
    .din1(grp_fu_2495_p1),
    .din2(grp_fu_2495_p2),
    .ce(1'b1),
    .dout(grp_fu_2495_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_27_q0),
    .din1(grp_fu_2503_p1),
    .din2(grp_fu_2503_p2),
    .ce(1'b1),
    .dout(grp_fu_2503_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_28_load_reg_3396),
    .din1(grp_fu_2511_p1),
    .din2(grp_fu_2511_p2),
    .ce(1'b1),
    .dout(grp_fu_2511_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_29_q0),
    .din1(grp_fu_2519_p1),
    .din2(grp_fu_2519_p2),
    .ce(1'b1),
    .dout(grp_fu_2519_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_30_load_reg_3431),
    .din1(grp_fu_2527_p1),
    .din2(grp_fu_2527_p2),
    .ce(1'b1),
    .dout(grp_fu_2527_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_31_q0),
    .din1(grp_fu_2535_p1),
    .din2(grp_fu_2535_p2),
    .ce(1'b1),
    .dout(grp_fu_2535_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_32_load_reg_3466),
    .din1(grp_fu_2543_p1),
    .din2(grp_fu_2543_p2),
    .ce(1'b1),
    .dout(grp_fu_2543_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_33_q0),
    .din1(grp_fu_2551_p1),
    .din2(grp_fu_2551_p2),
    .ce(1'b1),
    .dout(grp_fu_2551_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_34_load_reg_3501),
    .din1(grp_fu_2559_p1),
    .din2(grp_fu_2559_p2),
    .ce(1'b1),
    .dout(grp_fu_2559_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_35_q0),
    .din1(grp_fu_2567_p1),
    .din2(grp_fu_2567_p2),
    .ce(1'b1),
    .dout(grp_fu_2567_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_36_load_reg_3536),
    .din1(grp_fu_2575_p1),
    .din2(grp_fu_2575_p2),
    .ce(1'b1),
    .dout(grp_fu_2575_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_37_q0),
    .din1(grp_fu_2583_p1),
    .din2(grp_fu_2583_p2),
    .ce(1'b1),
    .dout(grp_fu_2583_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_38_load_reg_3571),
    .din1(grp_fu_2591_p1),
    .din2(grp_fu_2591_p2),
    .ce(1'b1),
    .dout(grp_fu_2591_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_39_q0),
    .din1(grp_fu_2599_p1),
    .din2(grp_fu_2599_p2),
    .ce(1'b1),
    .dout(grp_fu_2599_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_40_load_reg_3606),
    .din1(grp_fu_2607_p1),
    .din2(grp_fu_2607_p2),
    .ce(1'b1),
    .dout(grp_fu_2607_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_41_q0),
    .din1(grp_fu_2615_p1),
    .din2(grp_fu_2615_p2),
    .ce(1'b1),
    .dout(grp_fu_2615_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weight_tile_42_load_reg_3641),
    .din1(grp_fu_2623_p1),
    .din2(grp_fu_2623_p2),
    .ce(1'b1),
    .dout(grp_fu_2623_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter22_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter23 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln70_fu_1321_p2 == 1'd0))) begin
            i_1_fu_242 <= add_ln70_1_fu_1327_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_242 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln72_reg_3676 <= add_ln72_fu_2266_p2;
        icmp_ln14_reg_3681 <= icmp_ln14_fu_2272_p2;
        layer1_weight_tile_10_load_reg_3081 <= layer1_weight_tile_10_q0;
        layer1_weight_tile_12_load_reg_3116 <= layer1_weight_tile_12_q0;
        layer1_weight_tile_14_load_reg_3151 <= layer1_weight_tile_14_q0;
        layer1_weight_tile_16_load_reg_3186 <= layer1_weight_tile_16_q0;
        layer1_weight_tile_18_load_reg_3221 <= layer1_weight_tile_18_q0;
        layer1_weight_tile_20_load_reg_3256 <= layer1_weight_tile_20_q0;
        layer1_weight_tile_22_load_reg_3291 <= layer1_weight_tile_22_q0;
        layer1_weight_tile_24_load_reg_3326 <= layer1_weight_tile_24_q0;
        layer1_weight_tile_26_load_reg_3361 <= layer1_weight_tile_26_q0;
        layer1_weight_tile_28_load_reg_3396 <= layer1_weight_tile_28_q0;
        layer1_weight_tile_30_load_reg_3431 <= layer1_weight_tile_30_q0;
        layer1_weight_tile_32_load_reg_3466 <= layer1_weight_tile_32_q0;
        layer1_weight_tile_34_load_reg_3501 <= layer1_weight_tile_34_q0;
        layer1_weight_tile_36_load_reg_3536 <= layer1_weight_tile_36_q0;
        layer1_weight_tile_38_load_reg_3571 <= layer1_weight_tile_38_q0;
        layer1_weight_tile_40_load_reg_3606 <= layer1_weight_tile_40_q0;
        layer1_weight_tile_42_load_reg_3641 <= layer1_weight_tile_42_q0;
        layer1_weight_tile_4_load_reg_2976 <= layer1_weight_tile_4_q0;
        layer1_weight_tile_6_load_reg_3011 <= layer1_weight_tile_6_q0;
        layer1_weight_tile_8_load_reg_3046 <= layer1_weight_tile_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_2859 <= ap_sig_allocacmp_i;
        i_reg_2859_pp0_iter10_reg <= i_reg_2859_pp0_iter9_reg;
        i_reg_2859_pp0_iter11_reg <= i_reg_2859_pp0_iter10_reg;
        i_reg_2859_pp0_iter12_reg <= i_reg_2859_pp0_iter11_reg;
        i_reg_2859_pp0_iter13_reg <= i_reg_2859_pp0_iter12_reg;
        i_reg_2859_pp0_iter14_reg <= i_reg_2859_pp0_iter13_reg;
        i_reg_2859_pp0_iter15_reg <= i_reg_2859_pp0_iter14_reg;
        i_reg_2859_pp0_iter16_reg <= i_reg_2859_pp0_iter15_reg;
        i_reg_2859_pp0_iter17_reg <= i_reg_2859_pp0_iter16_reg;
        i_reg_2859_pp0_iter18_reg <= i_reg_2859_pp0_iter17_reg;
        i_reg_2859_pp0_iter19_reg <= i_reg_2859_pp0_iter18_reg;
        i_reg_2859_pp0_iter1_reg <= i_reg_2859;
        i_reg_2859_pp0_iter20_reg <= i_reg_2859_pp0_iter19_reg;
        i_reg_2859_pp0_iter21_reg <= i_reg_2859_pp0_iter20_reg;
        i_reg_2859_pp0_iter2_reg <= i_reg_2859_pp0_iter1_reg;
        i_reg_2859_pp0_iter3_reg <= i_reg_2859_pp0_iter2_reg;
        i_reg_2859_pp0_iter4_reg <= i_reg_2859_pp0_iter3_reg;
        i_reg_2859_pp0_iter5_reg <= i_reg_2859_pp0_iter4_reg;
        i_reg_2859_pp0_iter6_reg <= i_reg_2859_pp0_iter5_reg;
        i_reg_2859_pp0_iter7_reg <= i_reg_2859_pp0_iter6_reg;
        i_reg_2859_pp0_iter8_reg <= i_reg_2859_pp0_iter7_reg;
        i_reg_2859_pp0_iter9_reg <= i_reg_2859_pp0_iter8_reg;
        icmp_ln70_reg_2908 <= icmp_ln70_fu_1321_p2;
        icmp_ln70_reg_2908_pp0_iter10_reg <= icmp_ln70_reg_2908_pp0_iter9_reg;
        icmp_ln70_reg_2908_pp0_iter11_reg <= icmp_ln70_reg_2908_pp0_iter10_reg;
        icmp_ln70_reg_2908_pp0_iter12_reg <= icmp_ln70_reg_2908_pp0_iter11_reg;
        icmp_ln70_reg_2908_pp0_iter13_reg <= icmp_ln70_reg_2908_pp0_iter12_reg;
        icmp_ln70_reg_2908_pp0_iter14_reg <= icmp_ln70_reg_2908_pp0_iter13_reg;
        icmp_ln70_reg_2908_pp0_iter15_reg <= icmp_ln70_reg_2908_pp0_iter14_reg;
        icmp_ln70_reg_2908_pp0_iter16_reg <= icmp_ln70_reg_2908_pp0_iter15_reg;
        icmp_ln70_reg_2908_pp0_iter17_reg <= icmp_ln70_reg_2908_pp0_iter16_reg;
        icmp_ln70_reg_2908_pp0_iter18_reg <= icmp_ln70_reg_2908_pp0_iter17_reg;
        icmp_ln70_reg_2908_pp0_iter19_reg <= icmp_ln70_reg_2908_pp0_iter18_reg;
        icmp_ln70_reg_2908_pp0_iter1_reg <= icmp_ln70_reg_2908;
        icmp_ln70_reg_2908_pp0_iter20_reg <= icmp_ln70_reg_2908_pp0_iter19_reg;
        icmp_ln70_reg_2908_pp0_iter21_reg <= icmp_ln70_reg_2908_pp0_iter20_reg;
        icmp_ln70_reg_2908_pp0_iter2_reg <= icmp_ln70_reg_2908_pp0_iter1_reg;
        icmp_ln70_reg_2908_pp0_iter3_reg <= icmp_ln70_reg_2908_pp0_iter2_reg;
        icmp_ln70_reg_2908_pp0_iter4_reg <= icmp_ln70_reg_2908_pp0_iter3_reg;
        icmp_ln70_reg_2908_pp0_iter5_reg <= icmp_ln70_reg_2908_pp0_iter4_reg;
        icmp_ln70_reg_2908_pp0_iter6_reg <= icmp_ln70_reg_2908_pp0_iter5_reg;
        icmp_ln70_reg_2908_pp0_iter7_reg <= icmp_ln70_reg_2908_pp0_iter6_reg;
        icmp_ln70_reg_2908_pp0_iter8_reg <= icmp_ln70_reg_2908_pp0_iter7_reg;
        icmp_ln70_reg_2908_pp0_iter9_reg <= icmp_ln70_reg_2908_pp0_iter8_reg;
        lshr_ln_reg_3661 <= {{add_ln70_fu_2197_p2[5:2]}};
        sext_ln74_10_cast_reg_2804 <= sext_ln74_10_cast_fu_1262_p1;
        sext_ln74_11_cast_reg_2799 <= sext_ln74_11_cast_fu_1258_p1;
        sext_ln74_12_cast_reg_2794 <= sext_ln74_12_cast_fu_1254_p1;
        sext_ln74_13_cast_reg_2789 <= sext_ln74_13_cast_fu_1250_p1;
        sext_ln74_14_cast_reg_2784 <= sext_ln74_14_cast_fu_1246_p1;
        sext_ln74_15_cast_reg_2779 <= sext_ln74_15_cast_fu_1242_p1;
        sext_ln74_16_cast_reg_2774 <= sext_ln74_16_cast_fu_1238_p1;
        sext_ln74_17_cast_reg_2769 <= sext_ln74_17_cast_fu_1234_p1;
        sext_ln74_18_cast_reg_2764 <= sext_ln74_18_cast_fu_1230_p1;
        sext_ln74_19_cast_reg_2759 <= sext_ln74_19_cast_fu_1226_p1;
        sext_ln74_1_cast_reg_2849 <= sext_ln74_1_cast_fu_1298_p1;
        sext_ln74_20_cast_reg_2754 <= sext_ln74_20_cast_fu_1222_p1;
        sext_ln74_21_cast_reg_2749 <= sext_ln74_21_cast_fu_1218_p1;
        sext_ln74_22_cast_reg_2744 <= sext_ln74_22_cast_fu_1214_p1;
        sext_ln74_23_cast_reg_2739 <= sext_ln74_23_cast_fu_1210_p1;
        sext_ln74_24_cast_reg_2734 <= sext_ln74_24_cast_fu_1206_p1;
        sext_ln74_25_cast_reg_2729 <= sext_ln74_25_cast_fu_1202_p1;
        sext_ln74_26_cast_reg_2724 <= sext_ln74_26_cast_fu_1198_p1;
        sext_ln74_27_cast_reg_2719 <= sext_ln74_27_cast_fu_1194_p1;
        sext_ln74_28_cast_reg_2714 <= sext_ln74_28_cast_fu_1190_p1;
        sext_ln74_29_cast_reg_2709 <= sext_ln74_29_cast_fu_1186_p1;
        sext_ln74_2_cast_reg_2844 <= sext_ln74_2_cast_fu_1294_p1;
        sext_ln74_30_cast_reg_2704 <= sext_ln74_30_cast_fu_1182_p1;
        sext_ln74_31_cast_reg_2699 <= sext_ln74_31_cast_fu_1178_p1;
        sext_ln74_32_cast_reg_2694 <= sext_ln74_32_cast_fu_1174_p1;
        sext_ln74_33_cast_reg_2689 <= sext_ln74_33_cast_fu_1170_p1;
        sext_ln74_34_cast_reg_2684 <= sext_ln74_34_cast_fu_1166_p1;
        sext_ln74_35_cast_reg_2679 <= sext_ln74_35_cast_fu_1162_p1;
        sext_ln74_36_cast_reg_2674 <= sext_ln74_36_cast_fu_1158_p1;
        sext_ln74_37_cast_reg_2669 <= sext_ln74_37_cast_fu_1154_p1;
        sext_ln74_38_cast_reg_2664 <= sext_ln74_38_cast_fu_1150_p1;
        sext_ln74_39_cast_reg_2659 <= sext_ln74_39_cast_fu_1146_p1;
        sext_ln74_3_cast_reg_2839 <= sext_ln74_3_cast_fu_1290_p1;
        sext_ln74_40_cast_reg_2654 <= sext_ln74_40_cast_fu_1142_p1;
        sext_ln74_41_cast_reg_2649 <= sext_ln74_41_cast_fu_1138_p1;
        sext_ln74_42_cast_reg_2644 <= sext_ln74_42_cast_fu_1134_p1;
        sext_ln74_4_cast_reg_2834 <= sext_ln74_4_cast_fu_1286_p1;
        sext_ln74_5_cast_reg_2829 <= sext_ln74_5_cast_fu_1282_p1;
        sext_ln74_6_cast_reg_2824 <= sext_ln74_6_cast_fu_1278_p1;
        sext_ln74_7_cast_reg_2819 <= sext_ln74_7_cast_fu_1274_p1;
        sext_ln74_8_cast_reg_2814 <= sext_ln74_8_cast_fu_1270_p1;
        sext_ln74_9_cast_reg_2809 <= sext_ln74_9_cast_fu_1266_p1;
        sext_ln74_cast_reg_2854 <= sext_ln74_cast_fu_1302_p1;
        tmp_7_reg_2946 <= {{mul_ln74_fu_1349_p2[23:8]}};
        trunc_ln70_reg_2912_pp0_iter10_reg <= trunc_ln70_reg_2912_pp0_iter9_reg;
        trunc_ln70_reg_2912_pp0_iter11_reg <= trunc_ln70_reg_2912_pp0_iter10_reg;
        trunc_ln70_reg_2912_pp0_iter12_reg <= trunc_ln70_reg_2912_pp0_iter11_reg;
        trunc_ln70_reg_2912_pp0_iter13_reg <= trunc_ln70_reg_2912_pp0_iter12_reg;
        trunc_ln70_reg_2912_pp0_iter14_reg <= trunc_ln70_reg_2912_pp0_iter13_reg;
        trunc_ln70_reg_2912_pp0_iter15_reg <= trunc_ln70_reg_2912_pp0_iter14_reg;
        trunc_ln70_reg_2912_pp0_iter16_reg <= trunc_ln70_reg_2912_pp0_iter15_reg;
        trunc_ln70_reg_2912_pp0_iter17_reg <= trunc_ln70_reg_2912_pp0_iter16_reg;
        trunc_ln70_reg_2912_pp0_iter18_reg <= trunc_ln70_reg_2912_pp0_iter17_reg;
        trunc_ln70_reg_2912_pp0_iter19_reg <= trunc_ln70_reg_2912_pp0_iter18_reg;
        trunc_ln70_reg_2912_pp0_iter1_reg <= trunc_ln70_reg_2912;
        trunc_ln70_reg_2912_pp0_iter20_reg <= trunc_ln70_reg_2912_pp0_iter19_reg;
        trunc_ln70_reg_2912_pp0_iter21_reg <= trunc_ln70_reg_2912_pp0_iter20_reg;
        trunc_ln70_reg_2912_pp0_iter22_reg <= trunc_ln70_reg_2912_pp0_iter21_reg;
        trunc_ln70_reg_2912_pp0_iter2_reg <= trunc_ln70_reg_2912_pp0_iter1_reg;
        trunc_ln70_reg_2912_pp0_iter3_reg <= trunc_ln70_reg_2912_pp0_iter2_reg;
        trunc_ln70_reg_2912_pp0_iter4_reg <= trunc_ln70_reg_2912_pp0_iter3_reg;
        trunc_ln70_reg_2912_pp0_iter5_reg <= trunc_ln70_reg_2912_pp0_iter4_reg;
        trunc_ln70_reg_2912_pp0_iter6_reg <= trunc_ln70_reg_2912_pp0_iter5_reg;
        trunc_ln70_reg_2912_pp0_iter7_reg <= trunc_ln70_reg_2912_pp0_iter6_reg;
        trunc_ln70_reg_2912_pp0_iter8_reg <= trunc_ln70_reg_2912_pp0_iter7_reg;
        trunc_ln70_reg_2912_pp0_iter9_reg <= trunc_ln70_reg_2912_pp0_iter8_reg;
        zext_ln70_2_reg_2864[2 : 0] <= zext_ln70_2_fu_1314_p1[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter10_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter9_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter11_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter10_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter12_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter11_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter13_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter12_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter14_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter13_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter15_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter14_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter16_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter15_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter17_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter16_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter18_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter17_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter19_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter18_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter1_reg[2 : 0] <= zext_ln70_2_reg_2864[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter2_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter1_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter3_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter2_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter4_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter3_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter5_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter4_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter6_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter5_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter7_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter6_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter8_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter7_reg[2 : 0];
        zext_ln70_2_reg_2864_pp0_iter9_reg[2 : 0] <= zext_ln70_2_reg_2864_pp0_iter8_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln70_reg_2908 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        layer1_weight_tile_2_load_reg_2941 <= layer1_weight_tile_2_q0;
        layer1_weight_tile_load_reg_2931 <= layer1_weight_tile_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln70_fu_1321_p2 == 1'd0))) begin
        trunc_ln70_reg_2912 <= trunc_ln70_fu_1333_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln70_reg_2908 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln70_reg_2908_pp0_iter21_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter22_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter22_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter22_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to21 = 1'b1;
    end else begin
        ap_idle_pp0_0to21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to23 = 1'b1;
    end else begin
        ap_idle_pp0_1to23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 3'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_242;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_bias_ce0 = 1'b1;
    end else begin
        layer1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_1_ce0 = 1'b1;
    end else begin
        layer1_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln70_reg_2912_pp0_iter22_reg == 2'd1))) begin
        layer1_output_1_we0 = 1'b1;
    end else begin
        layer1_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_2_ce0 = 1'b1;
    end else begin
        layer1_output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln70_reg_2912_pp0_iter22_reg == 2'd2))) begin
        layer1_output_2_we0 = 1'b1;
    end else begin
        layer1_output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_3_ce0 = 1'b1;
    end else begin
        layer1_output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln70_reg_2912_pp0_iter22_reg == 2'd3))) begin
        layer1_output_3_we0 = 1'b1;
    end else begin
        layer1_output_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_ce0 = 1'b1;
    end else begin
        layer1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln70_reg_2912_pp0_iter22_reg == 2'd0))) begin
        layer1_output_we0 = 1'b1;
    end else begin
        layer1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_10_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_11_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_12_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_13_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_14_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_15_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_16_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_17_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_18_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_19_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_1_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_20_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_21_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_22_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_23_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_24_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_25_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_26_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_27_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_28_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_29_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_2_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_30_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_31_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_32_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_33_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_34_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_35_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_36_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_37_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_38_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_39_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_3_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_40_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_41_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_42_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_4_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_5_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_6_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_7_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_8_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_9_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weight_tile_ce0 = 1'b1;
    end else begin
        layer1_weight_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to21 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter22_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to23 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln70_1_fu_1327_p2 = (ap_sig_allocacmp_i + 3'd1);

assign add_ln70_fu_2197_p2 = (zext_ln70_3_fu_2194_p1 + trunc_ln);

assign add_ln72_fu_2266_p2 = ($signed(sext_ln76_1_fu_2256_p1) + $signed(trunc_ln2_fu_2247_p4));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_2295_p1 = sext_ln74_1_cast_reg_2849;

assign grp_fu_2295_p2 = {{tmp_7_reg_2946}, {8'd0}};

assign grp_fu_2303_p1 = sext_ln74_2_cast_reg_2844;

assign grp_fu_2303_p2 = {{tmp_8_fu_1378_p4}, {8'd0}};

assign grp_fu_2311_p1 = sext_ln74_3_cast_reg_2839;

assign grp_fu_2311_p2 = {{tmp_9_fu_1398_p4}, {8'd0}};

assign grp_fu_2319_p1 = sext_ln74_4_cast_reg_2834;

assign grp_fu_2319_p2 = {{tmp_s_fu_1419_p4}, {8'd0}};

assign grp_fu_2327_p1 = sext_ln74_5_cast_reg_2829;

assign grp_fu_2327_p2 = {{tmp_3_fu_1439_p4}, {8'd0}};

assign grp_fu_2335_p1 = sext_ln74_6_cast_reg_2824;

assign grp_fu_2335_p2 = {{tmp_4_fu_1460_p4}, {8'd0}};

assign grp_fu_2343_p1 = sext_ln74_7_cast_reg_2819;

assign grp_fu_2343_p2 = {{tmp_5_fu_1480_p4}, {8'd0}};

assign grp_fu_2351_p1 = sext_ln74_8_cast_reg_2814;

assign grp_fu_2351_p2 = {{tmp_6_fu_1501_p4}, {8'd0}};

assign grp_fu_2359_p1 = sext_ln74_9_cast_reg_2809;

assign grp_fu_2359_p2 = {{tmp_10_fu_1521_p4}, {8'd0}};

assign grp_fu_2367_p1 = sext_ln74_10_cast_reg_2804;

assign grp_fu_2367_p2 = {{tmp_11_fu_1542_p4}, {8'd0}};

assign grp_fu_2375_p1 = sext_ln74_11_cast_reg_2799;

assign grp_fu_2375_p2 = {{tmp_12_fu_1562_p4}, {8'd0}};

assign grp_fu_2383_p1 = sext_ln74_12_cast_reg_2794;

assign grp_fu_2383_p2 = {{tmp_13_fu_1583_p4}, {8'd0}};

assign grp_fu_2391_p1 = sext_ln74_13_cast_reg_2789;

assign grp_fu_2391_p2 = {{tmp_14_fu_1603_p4}, {8'd0}};

assign grp_fu_2399_p1 = sext_ln74_14_cast_reg_2784;

assign grp_fu_2399_p2 = {{tmp_15_fu_1624_p4}, {8'd0}};

assign grp_fu_2407_p1 = sext_ln74_15_cast_reg_2779;

assign grp_fu_2407_p2 = {{tmp_16_fu_1644_p4}, {8'd0}};

assign grp_fu_2415_p1 = sext_ln74_16_cast_reg_2774;

assign grp_fu_2415_p2 = {{tmp_17_fu_1665_p4}, {8'd0}};

assign grp_fu_2423_p1 = sext_ln74_17_cast_reg_2769;

assign grp_fu_2423_p2 = {{tmp_18_fu_1685_p4}, {8'd0}};

assign grp_fu_2431_p1 = sext_ln74_18_cast_reg_2764;

assign grp_fu_2431_p2 = {{tmp_19_fu_1706_p4}, {8'd0}};

assign grp_fu_2439_p1 = sext_ln74_19_cast_reg_2759;

assign grp_fu_2439_p2 = {{tmp_20_fu_1726_p4}, {8'd0}};

assign grp_fu_2447_p1 = sext_ln74_20_cast_reg_2754;

assign grp_fu_2447_p2 = {{tmp_21_fu_1747_p4}, {8'd0}};

assign grp_fu_2455_p1 = sext_ln74_21_cast_reg_2749;

assign grp_fu_2455_p2 = {{tmp_22_fu_1767_p4}, {8'd0}};

assign grp_fu_2463_p1 = sext_ln74_22_cast_reg_2744;

assign grp_fu_2463_p2 = {{tmp_23_fu_1788_p4}, {8'd0}};

assign grp_fu_2471_p1 = sext_ln74_23_cast_reg_2739;

assign grp_fu_2471_p2 = {{tmp_24_fu_1808_p4}, {8'd0}};

assign grp_fu_2479_p1 = sext_ln74_24_cast_reg_2734;

assign grp_fu_2479_p2 = {{tmp_25_fu_1829_p4}, {8'd0}};

assign grp_fu_2487_p1 = sext_ln74_25_cast_reg_2729;

assign grp_fu_2487_p2 = {{tmp_26_fu_1849_p4}, {8'd0}};

assign grp_fu_2495_p1 = sext_ln74_26_cast_reg_2724;

assign grp_fu_2495_p2 = {{tmp_27_fu_1870_p4}, {8'd0}};

assign grp_fu_2503_p1 = sext_ln74_27_cast_reg_2719;

assign grp_fu_2503_p2 = {{tmp_28_fu_1890_p4}, {8'd0}};

assign grp_fu_2511_p1 = sext_ln74_28_cast_reg_2714;

assign grp_fu_2511_p2 = {{tmp_29_fu_1911_p4}, {8'd0}};

assign grp_fu_2519_p1 = sext_ln74_29_cast_reg_2709;

assign grp_fu_2519_p2 = {{tmp_30_fu_1931_p4}, {8'd0}};

assign grp_fu_2527_p1 = sext_ln74_30_cast_reg_2704;

assign grp_fu_2527_p2 = {{tmp_31_fu_1952_p4}, {8'd0}};

assign grp_fu_2535_p1 = sext_ln74_31_cast_reg_2699;

assign grp_fu_2535_p2 = {{tmp_32_fu_1972_p4}, {8'd0}};

assign grp_fu_2543_p1 = sext_ln74_32_cast_reg_2694;

assign grp_fu_2543_p2 = {{tmp_33_fu_1993_p4}, {8'd0}};

assign grp_fu_2551_p1 = sext_ln74_33_cast_reg_2689;

assign grp_fu_2551_p2 = {{tmp_34_fu_2013_p4}, {8'd0}};

assign grp_fu_2559_p1 = sext_ln74_34_cast_reg_2684;

assign grp_fu_2559_p2 = {{tmp_35_fu_2034_p4}, {8'd0}};

assign grp_fu_2567_p1 = sext_ln74_35_cast_reg_2679;

assign grp_fu_2567_p2 = {{tmp_36_fu_2054_p4}, {8'd0}};

assign grp_fu_2575_p1 = sext_ln74_36_cast_reg_2674;

assign grp_fu_2575_p2 = {{tmp_37_fu_2075_p4}, {8'd0}};

assign grp_fu_2583_p1 = sext_ln74_37_cast_reg_2669;

assign grp_fu_2583_p2 = {{tmp_38_fu_2095_p4}, {8'd0}};

assign grp_fu_2591_p1 = sext_ln74_38_cast_reg_2664;

assign grp_fu_2591_p2 = {{tmp_39_fu_2116_p4}, {8'd0}};

assign grp_fu_2599_p1 = sext_ln74_39_cast_reg_2659;

assign grp_fu_2599_p2 = {{tmp_40_fu_2136_p4}, {8'd0}};

assign grp_fu_2607_p1 = sext_ln74_40_cast_reg_2654;

assign grp_fu_2607_p2 = {{tmp_41_fu_2157_p4}, {8'd0}};

assign grp_fu_2615_p1 = sext_ln74_41_cast_reg_2649;

assign grp_fu_2615_p2 = {{tmp_42_fu_2177_p4}, {8'd0}};

assign grp_fu_2623_p1 = sext_ln74_42_cast_reg_2644;

assign grp_fu_2623_p2 = {{tmp_43_fu_2217_p4}, {8'd0}};

assign icmp_ln14_fu_2272_p2 = (($signed(sum_2_fu_2260_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1321_p2 = ((ap_sig_allocacmp_i == 3'd4) ? 1'b1 : 1'b0);

assign layer1_bias_address0 = zext_ln70_fu_2202_p1;

assign layer1_output_1_address0 = zext_ln70_1_fu_2278_p1;

assign layer1_output_1_d0 = select_ln14_fu_2285_p3;

assign layer1_output_2_address0 = zext_ln70_1_fu_2278_p1;

assign layer1_output_2_d0 = select_ln14_fu_2285_p3;

assign layer1_output_3_address0 = zext_ln70_1_fu_2278_p1;

assign layer1_output_3_d0 = select_ln14_fu_2285_p3;

assign layer1_output_address0 = zext_ln70_1_fu_2278_p1;

assign layer1_output_d0 = select_ln14_fu_2285_p3;

assign layer1_weight_tile_10_address0 = zext_ln70_2_reg_2864_pp0_iter3_reg;

assign layer1_weight_tile_11_address0 = zext_ln70_2_reg_2864_pp0_iter4_reg;

assign layer1_weight_tile_12_address0 = zext_ln70_2_reg_2864_pp0_iter4_reg;

assign layer1_weight_tile_13_address0 = zext_ln70_2_reg_2864_pp0_iter5_reg;

assign layer1_weight_tile_14_address0 = zext_ln70_2_reg_2864_pp0_iter5_reg;

assign layer1_weight_tile_15_address0 = zext_ln70_2_reg_2864_pp0_iter6_reg;

assign layer1_weight_tile_16_address0 = zext_ln70_2_reg_2864_pp0_iter6_reg;

assign layer1_weight_tile_17_address0 = zext_ln70_2_reg_2864_pp0_iter7_reg;

assign layer1_weight_tile_18_address0 = zext_ln70_2_reg_2864_pp0_iter7_reg;

assign layer1_weight_tile_19_address0 = zext_ln70_2_reg_2864_pp0_iter8_reg;

assign layer1_weight_tile_1_address0 = zext_ln70_2_fu_1314_p1;

assign layer1_weight_tile_20_address0 = zext_ln70_2_reg_2864_pp0_iter8_reg;

assign layer1_weight_tile_21_address0 = zext_ln70_2_reg_2864_pp0_iter9_reg;

assign layer1_weight_tile_22_address0 = zext_ln70_2_reg_2864_pp0_iter9_reg;

assign layer1_weight_tile_23_address0 = zext_ln70_2_reg_2864_pp0_iter10_reg;

assign layer1_weight_tile_24_address0 = zext_ln70_2_reg_2864_pp0_iter10_reg;

assign layer1_weight_tile_25_address0 = zext_ln70_2_reg_2864_pp0_iter11_reg;

assign layer1_weight_tile_26_address0 = zext_ln70_2_reg_2864_pp0_iter11_reg;

assign layer1_weight_tile_27_address0 = zext_ln70_2_reg_2864_pp0_iter12_reg;

assign layer1_weight_tile_28_address0 = zext_ln70_2_reg_2864_pp0_iter12_reg;

assign layer1_weight_tile_29_address0 = zext_ln70_2_reg_2864_pp0_iter13_reg;

assign layer1_weight_tile_2_address0 = zext_ln70_2_fu_1314_p1;

assign layer1_weight_tile_30_address0 = zext_ln70_2_reg_2864_pp0_iter13_reg;

assign layer1_weight_tile_31_address0 = zext_ln70_2_reg_2864_pp0_iter14_reg;

assign layer1_weight_tile_32_address0 = zext_ln70_2_reg_2864_pp0_iter14_reg;

assign layer1_weight_tile_33_address0 = zext_ln70_2_reg_2864_pp0_iter15_reg;

assign layer1_weight_tile_34_address0 = zext_ln70_2_reg_2864_pp0_iter15_reg;

assign layer1_weight_tile_35_address0 = zext_ln70_2_reg_2864_pp0_iter16_reg;

assign layer1_weight_tile_36_address0 = zext_ln70_2_reg_2864_pp0_iter16_reg;

assign layer1_weight_tile_37_address0 = zext_ln70_2_reg_2864_pp0_iter17_reg;

assign layer1_weight_tile_38_address0 = zext_ln70_2_reg_2864_pp0_iter17_reg;

assign layer1_weight_tile_39_address0 = zext_ln70_2_reg_2864_pp0_iter18_reg;

assign layer1_weight_tile_3_address0 = zext_ln70_2_reg_2864;

assign layer1_weight_tile_40_address0 = zext_ln70_2_reg_2864_pp0_iter18_reg;

assign layer1_weight_tile_41_address0 = zext_ln70_2_reg_2864_pp0_iter19_reg;

assign layer1_weight_tile_42_address0 = zext_ln70_2_reg_2864_pp0_iter19_reg;

assign layer1_weight_tile_4_address0 = zext_ln70_2_reg_2864;

assign layer1_weight_tile_5_address0 = zext_ln70_2_reg_2864_pp0_iter1_reg;

assign layer1_weight_tile_6_address0 = zext_ln70_2_reg_2864_pp0_iter1_reg;

assign layer1_weight_tile_7_address0 = zext_ln70_2_reg_2864_pp0_iter2_reg;

assign layer1_weight_tile_8_address0 = zext_ln70_2_reg_2864_pp0_iter2_reg;

assign layer1_weight_tile_9_address0 = zext_ln70_2_reg_2864_pp0_iter3_reg;

assign layer1_weight_tile_address0 = zext_ln70_2_fu_1314_p1;

assign mul_ln74_fu_1349_p1 = sext_ln74_cast_reg_2854;

assign select_ln14_fu_2285_p3 = ((icmp_ln14_reg_3681[0:0] == 1'b1) ? add_ln72_reg_3676 : 15'd0);

assign sext_ln74_10_cast_fu_1262_p1 = $signed(sext_ln74_10);

assign sext_ln74_11_cast_fu_1258_p1 = $signed(sext_ln74_11);

assign sext_ln74_12_cast_fu_1254_p1 = $signed(sext_ln74_12);

assign sext_ln74_13_cast_fu_1250_p1 = $signed(sext_ln74_13);

assign sext_ln74_14_cast_fu_1246_p1 = $signed(sext_ln74_14);

assign sext_ln74_15_cast_fu_1242_p1 = $signed(sext_ln74_15);

assign sext_ln74_16_cast_fu_1238_p1 = $signed(sext_ln74_16);

assign sext_ln74_17_cast_fu_1234_p1 = $signed(sext_ln74_17);

assign sext_ln74_18_cast_fu_1230_p1 = $signed(sext_ln74_18);

assign sext_ln74_19_cast_fu_1226_p1 = $signed(sext_ln74_19);

assign sext_ln74_1_cast_fu_1298_p1 = $signed(sext_ln74_1);

assign sext_ln74_20_cast_fu_1222_p1 = $signed(sext_ln74_20);

assign sext_ln74_21_cast_fu_1218_p1 = $signed(sext_ln74_21);

assign sext_ln74_22_cast_fu_1214_p1 = $signed(sext_ln74_22);

assign sext_ln74_23_cast_fu_1210_p1 = $signed(sext_ln74_23);

assign sext_ln74_24_cast_fu_1206_p1 = $signed(sext_ln74_24);

assign sext_ln74_25_cast_fu_1202_p1 = $signed(sext_ln74_25);

assign sext_ln74_26_cast_fu_1198_p1 = $signed(sext_ln74_26);

assign sext_ln74_27_cast_fu_1194_p1 = $signed(sext_ln74_27);

assign sext_ln74_28_cast_fu_1190_p1 = $signed(sext_ln74_28);

assign sext_ln74_29_cast_fu_1186_p1 = $signed(sext_ln74_29);

assign sext_ln74_2_cast_fu_1294_p1 = $signed(sext_ln74_2);

assign sext_ln74_30_cast_fu_1182_p1 = $signed(sext_ln74_30);

assign sext_ln74_31_cast_fu_1178_p1 = $signed(sext_ln74_31);

assign sext_ln74_32_cast_fu_1174_p1 = $signed(sext_ln74_32);

assign sext_ln74_33_cast_fu_1170_p1 = $signed(sext_ln74_33);

assign sext_ln74_34_cast_fu_1166_p1 = $signed(sext_ln74_34);

assign sext_ln74_35_cast_fu_1162_p1 = $signed(sext_ln74_35);

assign sext_ln74_36_cast_fu_1158_p1 = $signed(sext_ln74_36);

assign sext_ln74_37_cast_fu_1154_p1 = $signed(sext_ln74_37);

assign sext_ln74_38_cast_fu_1150_p1 = $signed(sext_ln74_38);

assign sext_ln74_39_cast_fu_1146_p1 = $signed(sext_ln74_39);

assign sext_ln74_3_cast_fu_1290_p1 = $signed(sext_ln74_3);

assign sext_ln74_40_cast_fu_1142_p1 = $signed(sext_ln74_40);

assign sext_ln74_41_cast_fu_1138_p1 = $signed(sext_ln74_41);

assign sext_ln74_42_cast_fu_1134_p1 = $signed(sext_ln74_42);

assign sext_ln74_4_cast_fu_1286_p1 = $signed(sext_ln74_4);

assign sext_ln74_5_cast_fu_1282_p1 = $signed(sext_ln74_5);

assign sext_ln74_6_cast_fu_1278_p1 = $signed(sext_ln74_6);

assign sext_ln74_7_cast_fu_1274_p1 = $signed(sext_ln74_7);

assign sext_ln74_8_cast_fu_1270_p1 = $signed(sext_ln74_8);

assign sext_ln74_9_cast_fu_1266_p1 = $signed(sext_ln74_9);

assign sext_ln74_cast_fu_1302_p1 = $signed(sext_ln74);

assign sext_ln76_1_fu_2256_p0 = layer1_bias_q0;

assign sext_ln76_1_fu_2256_p1 = sext_ln76_1_fu_2256_p0;

assign sext_ln76_fu_2243_p0 = layer1_bias_q0;

assign sext_ln76_fu_2243_p1 = sext_ln76_fu_2243_p0;

assign sum_2_fu_2260_p2 = ($signed(sext_ln76_fu_2243_p1) + $signed(sum_fu_2234_p4));

assign sum_fu_2234_p1 = grp_fu_2623_p3;

assign sum_fu_2234_p4 = {{sum_fu_2234_p1[23:8]}};

assign tmp_10_fu_1521_p1 = grp_fu_2351_p3;

assign tmp_10_fu_1521_p4 = {{tmp_10_fu_1521_p1[23:8]}};

assign tmp_11_fu_1542_p1 = grp_fu_2359_p3;

assign tmp_11_fu_1542_p4 = {{tmp_11_fu_1542_p1[23:8]}};

assign tmp_12_fu_1562_p1 = grp_fu_2367_p3;

assign tmp_12_fu_1562_p4 = {{tmp_12_fu_1562_p1[23:8]}};

assign tmp_13_fu_1583_p1 = grp_fu_2375_p3;

assign tmp_13_fu_1583_p4 = {{tmp_13_fu_1583_p1[23:8]}};

assign tmp_14_fu_1603_p1 = grp_fu_2383_p3;

assign tmp_14_fu_1603_p4 = {{tmp_14_fu_1603_p1[23:8]}};

assign tmp_15_fu_1624_p1 = grp_fu_2391_p3;

assign tmp_15_fu_1624_p4 = {{tmp_15_fu_1624_p1[23:8]}};

assign tmp_16_fu_1644_p1 = grp_fu_2399_p3;

assign tmp_16_fu_1644_p4 = {{tmp_16_fu_1644_p1[23:8]}};

assign tmp_17_fu_1665_p1 = grp_fu_2407_p3;

assign tmp_17_fu_1665_p4 = {{tmp_17_fu_1665_p1[23:8]}};

assign tmp_18_fu_1685_p1 = grp_fu_2415_p3;

assign tmp_18_fu_1685_p4 = {{tmp_18_fu_1685_p1[23:8]}};

assign tmp_19_fu_1706_p1 = grp_fu_2423_p3;

assign tmp_19_fu_1706_p4 = {{tmp_19_fu_1706_p1[23:8]}};

assign tmp_20_fu_1726_p1 = grp_fu_2431_p3;

assign tmp_20_fu_1726_p4 = {{tmp_20_fu_1726_p1[23:8]}};

assign tmp_21_fu_1747_p1 = grp_fu_2439_p3;

assign tmp_21_fu_1747_p4 = {{tmp_21_fu_1747_p1[23:8]}};

assign tmp_22_fu_1767_p1 = grp_fu_2447_p3;

assign tmp_22_fu_1767_p4 = {{tmp_22_fu_1767_p1[23:8]}};

assign tmp_23_fu_1788_p1 = grp_fu_2455_p3;

assign tmp_23_fu_1788_p4 = {{tmp_23_fu_1788_p1[23:8]}};

assign tmp_24_fu_1808_p1 = grp_fu_2463_p3;

assign tmp_24_fu_1808_p4 = {{tmp_24_fu_1808_p1[23:8]}};

assign tmp_25_fu_1829_p1 = grp_fu_2471_p3;

assign tmp_25_fu_1829_p4 = {{tmp_25_fu_1829_p1[23:8]}};

assign tmp_26_fu_1849_p1 = grp_fu_2479_p3;

assign tmp_26_fu_1849_p4 = {{tmp_26_fu_1849_p1[23:8]}};

assign tmp_27_fu_1870_p1 = grp_fu_2487_p3;

assign tmp_27_fu_1870_p4 = {{tmp_27_fu_1870_p1[23:8]}};

assign tmp_28_fu_1890_p1 = grp_fu_2495_p3;

assign tmp_28_fu_1890_p4 = {{tmp_28_fu_1890_p1[23:8]}};

assign tmp_29_fu_1911_p1 = grp_fu_2503_p3;

assign tmp_29_fu_1911_p4 = {{tmp_29_fu_1911_p1[23:8]}};

assign tmp_30_fu_1931_p1 = grp_fu_2511_p3;

assign tmp_30_fu_1931_p4 = {{tmp_30_fu_1931_p1[23:8]}};

assign tmp_31_fu_1952_p1 = grp_fu_2519_p3;

assign tmp_31_fu_1952_p4 = {{tmp_31_fu_1952_p1[23:8]}};

assign tmp_32_fu_1972_p1 = grp_fu_2527_p3;

assign tmp_32_fu_1972_p4 = {{tmp_32_fu_1972_p1[23:8]}};

assign tmp_33_fu_1993_p1 = grp_fu_2535_p3;

assign tmp_33_fu_1993_p4 = {{tmp_33_fu_1993_p1[23:8]}};

assign tmp_34_fu_2013_p1 = grp_fu_2543_p3;

assign tmp_34_fu_2013_p4 = {{tmp_34_fu_2013_p1[23:8]}};

assign tmp_35_fu_2034_p1 = grp_fu_2551_p3;

assign tmp_35_fu_2034_p4 = {{tmp_35_fu_2034_p1[23:8]}};

assign tmp_36_fu_2054_p1 = grp_fu_2559_p3;

assign tmp_36_fu_2054_p4 = {{tmp_36_fu_2054_p1[23:8]}};

assign tmp_37_fu_2075_p1 = grp_fu_2567_p3;

assign tmp_37_fu_2075_p4 = {{tmp_37_fu_2075_p1[23:8]}};

assign tmp_38_fu_2095_p1 = grp_fu_2575_p3;

assign tmp_38_fu_2095_p4 = {{tmp_38_fu_2095_p1[23:8]}};

assign tmp_39_fu_2116_p1 = grp_fu_2583_p3;

assign tmp_39_fu_2116_p4 = {{tmp_39_fu_2116_p1[23:8]}};

assign tmp_3_fu_1439_p1 = grp_fu_2319_p3;

assign tmp_3_fu_1439_p4 = {{tmp_3_fu_1439_p1[23:8]}};

assign tmp_40_fu_2136_p1 = grp_fu_2591_p3;

assign tmp_40_fu_2136_p4 = {{tmp_40_fu_2136_p1[23:8]}};

assign tmp_41_fu_2157_p1 = grp_fu_2599_p3;

assign tmp_41_fu_2157_p4 = {{tmp_41_fu_2157_p1[23:8]}};

assign tmp_42_fu_2177_p1 = grp_fu_2607_p3;

assign tmp_42_fu_2177_p4 = {{tmp_42_fu_2177_p1[23:8]}};

assign tmp_43_fu_2217_p1 = grp_fu_2615_p3;

assign tmp_43_fu_2217_p4 = {{tmp_43_fu_2217_p1[23:8]}};

assign tmp_4_fu_1460_p1 = grp_fu_2327_p3;

assign tmp_4_fu_1460_p4 = {{tmp_4_fu_1460_p1[23:8]}};

assign tmp_5_fu_1480_p1 = grp_fu_2335_p3;

assign tmp_5_fu_1480_p4 = {{tmp_5_fu_1480_p1[23:8]}};

assign tmp_6_fu_1501_p1 = grp_fu_2343_p3;

assign tmp_6_fu_1501_p4 = {{tmp_6_fu_1501_p1[23:8]}};

assign tmp_8_fu_1378_p1 = grp_fu_2295_p3;

assign tmp_8_fu_1378_p4 = {{tmp_8_fu_1378_p1[23:8]}};

assign tmp_9_fu_1398_p1 = grp_fu_2303_p3;

assign tmp_9_fu_1398_p4 = {{tmp_9_fu_1398_p1[23:8]}};

assign tmp_s_fu_1419_p1 = grp_fu_2311_p3;

assign tmp_s_fu_1419_p4 = {{tmp_s_fu_1419_p1[23:8]}};

assign trunc_ln2_fu_2247_p1 = grp_fu_2623_p3;

assign trunc_ln2_fu_2247_p4 = {{trunc_ln2_fu_2247_p1[22:8]}};

assign trunc_ln70_fu_1333_p1 = ap_sig_allocacmp_i[1:0];

assign zext_ln70_1_fu_2278_p1 = lshr_ln_reg_3661;

assign zext_ln70_2_fu_1314_p1 = ap_sig_allocacmp_i;

assign zext_ln70_3_fu_2194_p1 = i_reg_2859_pp0_iter21_reg;

assign zext_ln70_fu_2202_p1 = add_ln70_fu_2197_p2;

always @ (posedge ap_clk) begin
    zext_ln70_2_reg_2864[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter7_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter8_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter9_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter10_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter11_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter12_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter13_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter14_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter15_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter16_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter17_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter18_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_2_reg_2864_pp0_iter19_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_70_4
