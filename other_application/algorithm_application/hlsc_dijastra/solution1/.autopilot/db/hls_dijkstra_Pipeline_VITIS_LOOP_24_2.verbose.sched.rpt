

================================================================
== Vitis HLS Report for 'hls_dijkstra_Pipeline_VITIS_LOOP_24_2'
================================================================
* Date:           Fri Sep 13 03:24:42 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        hlsc_dijastra
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.268 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      309|      309|  3.090 us|  3.090 us|  309|  309|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_24_2  |      307|      307|        42|         37|          1|     8|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 37, depth = 42


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 42
* Pipeline : 1
  Pipeline-0 : II = 37, D = 42, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 40 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 41 
40 --> 
41 --> 42 
42 --> 40 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.38>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%count = alloca i32 1"   --->   Operation 43 'alloca' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %dist, i64 666, i64 207, i64 1"   --->   Operation 44 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %graph, i64 666, i64 207, i64 1"   --->   Operation 45 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %dist, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 46 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %graph, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 47 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (1.61ns)   --->   "%store_ln0 = store i4 0, i4 %count"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 49 [1/1] (1.61ns)   --->   "%br_ln0 = br void %VITIS_LOOP_29_3.i"   --->   Operation 49 'br' 'br_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%count_1 = load i4 %count" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 50 'load' 'count_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%dist_addr_1 = getelementptr i32 %dist, i64 0, i64 7" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 51 'getelementptr' 'dist_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (1.77ns)   --->   "%icmp_ln24 = icmp_eq  i4 %count_1, i4 8" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 52 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (1.77ns)   --->   "%count_2 = add i4 %count_1, i4 1" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 53 'add' 'count_2' <Predicate = true> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [2/2] (2.15ns)   --->   "%dist_load_7 = load i4 %dist_addr_1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 54 'load' 'dist_load_7' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 55 [1/1] (1.61ns)   --->   "%store_ln24 = store i4 %count_2, i4 %count" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 55 'store' 'store_ln24' <Predicate = (!icmp_ln24)> <Delay = 1.61>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln24 = br void %VITIS_LOOP_29_3.i" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 56 'br' 'br_ln24' <Predicate = (!icmp_ln24)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%dist_addr_4 = getelementptr i32 %dist, i64 0, i64 4" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 57 'getelementptr' 'dist_addr_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [2/2] (2.15ns)   --->   "%dist_load_4 = load i4 %dist_addr_4" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 58 'load' 'dist_load_4' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 59 [1/2] (2.15ns)   --->   "%dist_load_7 = load i4 %dist_addr_1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 59 'load' 'dist_load_7' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 3 <SV = 2> <Delay = 2.15>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%dist_addr_8 = getelementptr i32 %dist, i64 0, i64 0" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 60 'getelementptr' 'dist_addr_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [2/2] (2.15ns)   --->   "%dist_load = load i4 %dist_addr_8" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 61 'load' 'dist_load' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 62 [1/2] (2.15ns)   --->   "%dist_load_4 = load i4 %dist_addr_4" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 62 'load' 'dist_load_4' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 4 <SV = 3> <Delay = 2.15>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%dist_addr_7 = getelementptr i32 %dist, i64 0, i64 1" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 63 'getelementptr' 'dist_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/2] (2.15ns)   --->   "%dist_load = load i4 %dist_addr_8" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 64 'load' 'dist_load' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 65 [2/2] (2.15ns)   --->   "%dist_load_1 = load i4 %dist_addr_7" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 65 'load' 'dist_load_1' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 5 <SV = 4> <Delay = 2.15>
ST_5 : Operation 66 [1/2] (2.15ns)   --->   "%dist_load_1 = load i4 %dist_addr_7" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 66 'load' 'dist_load_1' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 6 <SV = 5> <Delay = 2.15>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%sptSet = phi i1 0, void %newFuncRoot, i1 %sptSet_9, void %for.inc65.i"   --->   Operation 67 'phi' 'sptSet' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%dist_addr_6 = getelementptr i32 %dist, i64 0, i64 2" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 68 'getelementptr' 'dist_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (0.79ns)   --->   "%min_dist_1_0 = select i1 %sptSet, i32 2147483647, i32 %dist_load" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 69 'select' 'min_dist_1_0' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 70 [2/2] (2.15ns)   --->   "%dist_load_2 = load i4 %dist_addr_6" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 70 'load' 'dist_load_2' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 7 <SV = 6> <Delay = 7.17>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%sptSet_1 = phi i1 0, void %newFuncRoot, i1 %sptSet_10, void %for.inc65.i"   --->   Operation 71 'phi' 'sptSet_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%dist_addr_5 = getelementptr i32 %dist, i64 0, i64 3" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 72 'getelementptr' 'dist_addr_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (2.70ns)   --->   "%icmp_ln30 = icmp_slt  i32 %min_dist_1_0, i32 %dist_load_1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 73 'icmp' 'icmp_ln30' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 74 [1/1] (0.97ns)   --->   "%xor_ln30 = xor i1 %icmp_ln30, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 74 'xor' 'xor_ln30' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node min_dist_1_1)   --->   "%select_ln30_1 = select i1 %xor_ln30, i32 %dist_load_1, i32 %min_dist_1_0" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 75 'select' 'select_ln30_1' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (0.79ns) (out node of the LUT)   --->   "%min_dist_1_1 = select i1 %sptSet_1, i32 %min_dist_1_0, i32 %select_ln30_1" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 76 'select' 'min_dist_1_1' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 77 [1/2] (2.15ns)   --->   "%dist_load_2 = load i4 %dist_addr_6" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 77 'load' 'dist_load_2' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_7 : Operation 78 [1/1] (2.70ns)   --->   "%icmp_ln30_1 = icmp_slt  i32 %min_dist_1_1, i32 %dist_load_2" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 78 'icmp' 'icmp_ln30_1' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [2/2] (2.15ns)   --->   "%dist_load_3 = load i4 %dist_addr_5" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 79 'load' 'dist_load_3' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 8 <SV = 7> <Delay = 6.62>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%sptSet_3 = phi i1 0, void %newFuncRoot, i1 %sptSet_12, void %for.inc65.i"   --->   Operation 80 'phi' 'sptSet_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%sptSet_2 = phi i1 0, void %newFuncRoot, i1 %sptSet_11, void %for.inc65.i"   --->   Operation 81 'phi' 'sptSet_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (0.00ns)   --->   "%dist_addr_3 = getelementptr i32 %dist, i64 0, i64 5" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 82 'getelementptr' 'dist_addr_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 83 [1/1] (0.97ns)   --->   "%xor_ln30_1 = xor i1 %icmp_ln30_1, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 83 'xor' 'xor_ln30_1' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node min_dist_1_2)   --->   "%select_ln30_9 = select i1 %xor_ln30_1, i32 %dist_load_2, i32 %min_dist_1_1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 84 'select' 'select_ln30_9' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 85 [1/1] (0.79ns) (out node of the LUT)   --->   "%min_dist_1_2 = select i1 %sptSet_2, i32 %min_dist_1_1, i32 %select_ln30_9" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 85 'select' 'min_dist_1_2' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 86 [1/2] (2.15ns)   --->   "%dist_load_3 = load i4 %dist_addr_5" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 86 'load' 'dist_load_3' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_8 : Operation 87 [1/1] (2.70ns)   --->   "%icmp_ln30_2 = icmp_slt  i32 %min_dist_1_2, i32 %dist_load_3" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 87 'icmp' 'icmp_ln30_2' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 88 [1/1] (0.97ns)   --->   "%xor_ln30_2 = xor i1 %icmp_ln30_2, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 88 'xor' 'xor_ln30_2' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node min_dist_1_3)   --->   "%select_ln30_10 = select i1 %xor_ln30_2, i32 %dist_load_3, i32 %min_dist_1_2" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 89 'select' 'select_ln30_10' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 90 [1/1] (0.79ns) (out node of the LUT)   --->   "%min_dist_1_3 = select i1 %sptSet_3, i32 %min_dist_1_2, i32 %select_ln30_10" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 90 'select' 'min_dist_1_3' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 91 [2/2] (2.15ns)   --->   "%dist_load_5 = load i4 %dist_addr_3" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 91 'load' 'dist_load_5' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 9 <SV = 8> <Delay = 7.17>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%sptSet_4 = phi i1 0, void %newFuncRoot, i1 %sptSet_13, void %for.inc65.i"   --->   Operation 92 'phi' 'sptSet_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%dist_addr_2 = getelementptr i32 %dist, i64 0, i64 6" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 93 'getelementptr' 'dist_addr_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (2.70ns)   --->   "%icmp_ln30_3 = icmp_slt  i32 %min_dist_1_3, i32 %dist_load_4" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 94 'icmp' 'icmp_ln30_3' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 95 [1/1] (0.97ns)   --->   "%xor_ln30_3 = xor i1 %icmp_ln30_3, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 95 'xor' 'xor_ln30_3' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node min_dist_1_4)   --->   "%select_ln30_11 = select i1 %xor_ln30_3, i32 %dist_load_4, i32 %min_dist_1_3" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 96 'select' 'select_ln30_11' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 97 [1/1] (0.79ns) (out node of the LUT)   --->   "%min_dist_1_4 = select i1 %sptSet_4, i32 %min_dist_1_3, i32 %select_ln30_11" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 97 'select' 'min_dist_1_4' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 98 [1/2] (2.15ns)   --->   "%dist_load_5 = load i4 %dist_addr_3" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 98 'load' 'dist_load_5' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_9 : Operation 99 [1/1] (2.70ns)   --->   "%icmp_ln30_4 = icmp_slt  i32 %min_dist_1_4, i32 %dist_load_5" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 99 'icmp' 'icmp_ln30_4' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 100 [2/2] (2.15ns)   --->   "%dist_load_6 = load i4 %dist_addr_2" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 100 'load' 'dist_load_6' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 10 <SV = 9> <Delay = 5.92>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%sptSet_5 = phi i1 0, void %newFuncRoot, i1 %sptSet_14, void %for.inc65.i"   --->   Operation 101 'phi' 'sptSet_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%dist_addr = getelementptr i32 %dist, i64 0, i64 8" [dijastra_algo.cpp:18->dijastra_algo.cpp:52]   --->   Operation 102 'getelementptr' 'dist_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.99ns)   --->   "%sptSet_cast = select i1 %sptSet, i2 3, i2 0" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 103 'select' 'sptSet_cast' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node u_1_1)   --->   "%select_ln30 = select i1 %xor_ln30, i2 1, i2 %sptSet_cast" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 104 'select' 'select_ln30' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 105 [1/1] (0.99ns) (out node of the LUT)   --->   "%u_1_1 = select i1 %sptSet_1, i2 %sptSet_cast, i2 %select_ln30" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 105 'select' 'u_1_1' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%u_1_1_cast = sext i2 %u_1_1" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 106 'sext' 'u_1_1_cast' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node u_1_2)   --->   "%select_ln30_2 = select i1 %xor_ln30_1, i3 2, i3 %u_1_1_cast" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 107 'select' 'select_ln30_2' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 108 [1/1] (0.98ns) (out node of the LUT)   --->   "%u_1_2 = select i1 %sptSet_2, i3 %u_1_1_cast, i3 %select_ln30_2" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 108 'select' 'u_1_2' <Predicate = (!icmp_ln24)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node u_1_3)   --->   "%select_ln30_3 = select i1 %xor_ln30_2, i3 3, i3 %u_1_2" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 109 'select' 'select_ln30_3' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 110 [1/1] (0.98ns) (out node of the LUT)   --->   "%u_1_3 = select i1 %sptSet_3, i3 %u_1_2, i3 %select_ln30_3" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 110 'select' 'u_1_3' <Predicate = (!icmp_ln24)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%u_1_3_cast = sext i3 %u_1_3" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 111 'sext' 'u_1_3_cast' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node u_1_4)   --->   "%select_ln30_4 = select i1 %xor_ln30_3, i4 4, i4 %u_1_3_cast" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 112 'select' 'select_ln30_4' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 113 [1/1] (0.99ns) (out node of the LUT)   --->   "%u_1_4 = select i1 %sptSet_4, i4 %u_1_3_cast, i4 %select_ln30_4" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 113 'select' 'u_1_4' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 114 [1/1] (0.97ns)   --->   "%xor_ln30_4 = xor i1 %icmp_ln30_4, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 114 'xor' 'xor_ln30_4' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node u_1_5)   --->   "%select_ln30_5 = select i1 %xor_ln30_4, i4 5, i4 %u_1_4" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 115 'select' 'select_ln30_5' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node min_dist_1_5)   --->   "%select_ln30_12 = select i1 %xor_ln30_4, i32 %dist_load_5, i32 %min_dist_1_4" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 116 'select' 'select_ln30_12' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 117 [1/1] (0.99ns) (out node of the LUT)   --->   "%u_1_5 = select i1 %sptSet_5, i4 %u_1_4, i4 %select_ln30_5" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 117 'select' 'u_1_5' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 118 [1/1] (0.79ns) (out node of the LUT)   --->   "%min_dist_1_5 = select i1 %sptSet_5, i32 %min_dist_1_4, i32 %select_ln30_12" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 118 'select' 'min_dist_1_5' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 119 [1/2] (2.15ns)   --->   "%dist_load_6 = load i4 %dist_addr_2" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 119 'load' 'dist_load_6' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_10 : Operation 120 [1/1] (2.70ns)   --->   "%icmp_ln30_5 = icmp_slt  i32 %min_dist_1_5, i32 %dist_load_6" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 120 'icmp' 'icmp_ln30_5' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 121 [1/1] (0.97ns)   --->   "%xor_ln30_5 = xor i1 %icmp_ln30_5, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 121 'xor' 'xor_ln30_5' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 122 [2/2] (2.15ns)   --->   "%dist_load_8 = load i4 %dist_addr" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 122 'load' 'dist_load_8' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 11 <SV = 10> <Delay = 7.17>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%sptSet_7 = phi i1 0, void %newFuncRoot, i1 %sptSet_16, void %for.inc65.i"   --->   Operation 123 'phi' 'sptSet_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%sptSet_6 = phi i1 0, void %newFuncRoot, i1 %sptSet_15, void %for.inc65.i"   --->   Operation 124 'phi' 'sptSet_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node u_1_6)   --->   "%select_ln30_6 = select i1 %xor_ln30_5, i4 6, i4 %u_1_5" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 125 'select' 'select_ln30_6' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node min_dist_1_6)   --->   "%select_ln30_13 = select i1 %xor_ln30_5, i32 %dist_load_6, i32 %min_dist_1_5" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 126 'select' 'select_ln30_13' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.99ns) (out node of the LUT)   --->   "%u_1_6 = select i1 %sptSet_6, i4 %u_1_5, i4 %select_ln30_6" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 127 'select' 'u_1_6' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 128 [1/1] (0.79ns) (out node of the LUT)   --->   "%min_dist_1_6 = select i1 %sptSet_6, i32 %min_dist_1_5, i32 %select_ln30_13" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 128 'select' 'min_dist_1_6' <Predicate = (!icmp_ln24)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 129 [1/1] (2.70ns)   --->   "%icmp_ln30_6 = icmp_slt  i32 %min_dist_1_6, i32 %dist_load_7" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 129 'icmp' 'icmp_ln30_6' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 130 [1/1] (0.97ns)   --->   "%xor_ln30_6 = xor i1 %icmp_ln30_6, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 130 'xor' 'xor_ln30_6' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln30_7)   --->   "%select_ln30_14 = select i1 %xor_ln30_6, i32 %dist_load_7, i32 %min_dist_1_6" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 131 'select' 'select_ln30_14' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln30_7)   --->   "%min_dist_1_7 = select i1 %sptSet_7, i32 %min_dist_1_6, i32 %select_ln30_14" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 132 'select' 'min_dist_1_7' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 133 [1/2] (2.15ns)   --->   "%dist_load_8 = load i4 %dist_addr" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 133 'load' 'dist_load_8' <Predicate = (!icmp_ln24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_11 : Operation 134 [1/1] (2.70ns) (out node of the LUT)   --->   "%icmp_ln30_7 = icmp_slt  i32 %min_dist_1_7, i32 %dist_load_8" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 134 'icmp' 'icmp_ln30_7' <Predicate = (!icmp_ln24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.26>
ST_12 : Operation 135 [1/1] (0.00ns)   --->   "%sptSet_8 = phi i1 0, void %newFuncRoot, i1 %sptSet_17, void %for.inc65.i"   --->   Operation 135 'phi' 'sptSet_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 136 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 136 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 137 [1/1] (0.00ns)   --->   "%br_ln24 = br i1 %icmp_ln24, void %VITIS_LOOP_29_3.i.split_ifconv, void %_Z8dijkstraPA9_iiPi.exit.exitStub" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 137 'br' 'br_ln24' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node u_1_7)   --->   "%select_ln30_7 = select i1 %xor_ln30_6, i4 7, i4 %u_1_6" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 138 'select' 'select_ln30_7' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 139 [1/1] (0.99ns) (out node of the LUT)   --->   "%u_1_7 = select i1 %sptSet_7, i4 %u_1_6, i4 %select_ln30_7" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 139 'select' 'u_1_7' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node select_ln29)   --->   "%xor_ln30_7 = xor i1 %icmp_ln30_7, i1 1" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 140 'xor' 'xor_ln30_7' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node select_ln29)   --->   "%select_ln30_8 = select i1 %xor_ln30_7, i4 8, i4 %u_1_7" [dijastra_algo.cpp:30->dijastra_algo.cpp:52]   --->   Operation 141 'select' 'select_ln30_8' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 142 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln29 = select i1 %sptSet_8, i4 %u_1_7, i4 %select_ln30_8" [dijastra_algo.cpp:29->dijastra_algo.cpp:52]   --->   Operation 142 'select' 'select_ln29' <Predicate = (!icmp_ln24)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i4 %select_ln29" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 143 'zext' 'zext_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_12 : Operation 144 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %select_ln29, i3 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 144 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_12 : Operation 145 [1/1] (2.03ns)   --->   "%add_ln39_9 = add i7 %tmp, i7 %zext_ln39" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 145 'add' 'add_ln39_9' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln39_1 = zext i7 %add_ln39_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 146 'zext' 'zext_ln39_1' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_12 : Operation 147 [1/1] (0.00ns)   --->   "%graph_addr = getelementptr i32 %graph, i64 0, i64 %zext_ln39_1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 147 'getelementptr' 'graph_addr' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_12 : Operation 148 [1/1] (1.77ns)   --->   "%icmp_ln36 = icmp_eq  i4 %select_ln29, i4 0" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 148 'icmp' 'icmp_ln36' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 149 [1/1] (0.97ns)   --->   "%sptSet_9 = or i1 %icmp_ln36, i1 %sptSet" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 149 'or' 'sptSet_9' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 150 [2/2] (3.25ns)   --->   "%graph_load = load i7 %graph_addr" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 150 'load' 'graph_load' <Predicate = (!icmp_ln24 & !sptSet_9)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_12 : Operation 327 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 327 'ret' 'ret_ln0' <Predicate = (icmp_ln24)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 5.95>
ST_13 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i4 %select_ln29" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 151 'zext' 'zext_ln36' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_13 : Operation 152 [1/1] (2.03ns)   --->   "%add_ln39_10 = add i7 %add_ln39_9, i7 1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 152 'add' 'add_ln39_10' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 153 [1/1] (0.00ns)   --->   "%zext_ln39_2 = zext i7 %add_ln39_10" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 153 'zext' 'zext_ln39_2' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_13 : Operation 154 [1/1] (0.00ns)   --->   "%graph_addr_1 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 154 'getelementptr' 'graph_addr_1' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_13 : Operation 155 [1/1] (1.77ns)   --->   "%icmp_ln36_1 = icmp_eq  i4 %select_ln29, i4 1" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 155 'icmp' 'icmp_ln36_1' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 156 [1/1] (0.97ns)   --->   "%sptSet_10 = or i1 %icmp_ln36_1, i1 %sptSet_1" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 156 'or' 'sptSet_10' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 157 [1/1] (0.00ns)   --->   "%dist_addr_9 = getelementptr i32 %dist, i64 0, i64 %zext_ln36" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 157 'getelementptr' 'dist_addr_9' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_13 : Operation 158 [1/2] (3.25ns)   --->   "%graph_load = load i7 %graph_addr" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 158 'load' 'graph_load' <Predicate = (!icmp_ln24 & !sptSet_9)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_13 : Operation 159 [1/1] (2.70ns)   --->   "%icmp_ln39 = icmp_eq  i32 %graph_load, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 159 'icmp' 'icmp_ln39' <Predicate = (!icmp_ln24 & !sptSet_9)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 160 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %land.lhs.true37.i.0, void %for.body29.i.split.1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 160 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_9)> <Delay = 0.00>
ST_13 : Operation 161 [2/2] (2.15ns)   --->   "%dist_load_9 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 161 'load' 'dist_load_9' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_13 : Operation 162 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_10, void %land.lhs.true32.i.1, void %for.body29.i.split.2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 162 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_13 : Operation 163 [2/2] (3.25ns)   --->   "%graph_load_1 = load i7 %graph_addr_1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 163 'load' 'graph_load_1' <Predicate = (!icmp_ln24 & !sptSet_10)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 14 <SV = 13> <Delay = 5.95>
ST_14 : Operation 164 [1/1] (2.03ns)   --->   "%add_ln39_11 = add i7 %add_ln39_9, i7 2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 164 'add' 'add_ln39_11' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln39_3 = zext i7 %add_ln39_11" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 165 'zext' 'zext_ln39_3' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%graph_addr_2 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 166 'getelementptr' 'graph_addr_2' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_14 : Operation 167 [1/1] (1.77ns)   --->   "%icmp_ln36_2 = icmp_eq  i4 %select_ln29, i4 2" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 167 'icmp' 'icmp_ln36_2' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 168 [1/1] (0.97ns)   --->   "%sptSet_11 = or i1 %icmp_ln36_2, i1 %sptSet_2" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 168 'or' 'sptSet_11' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 169 [1/2] (2.15ns)   --->   "%dist_load_9 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 169 'load' 'dist_load_9' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_14 : Operation 170 [1/1] (2.70ns)   --->   "%icmp_ln39_1 = icmp_eq  i32 %dist_load_9, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 170 'icmp' 'icmp_ln39_1' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 171 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_1, void %land.lhs.true41.i.0, void %for.body29.i.split.1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 171 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39)> <Delay = 0.00>
ST_14 : Operation 172 [1/1] (2.70ns)   --->   "%add_ln39 = add i32 %dist_load_9, i32 %graph_load" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 172 'add' 'add_ln39' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39 & !icmp_ln39_1)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 173 [1/2] (3.25ns)   --->   "%graph_load_1 = load i7 %graph_addr_1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 173 'load' 'graph_load_1' <Predicate = (!icmp_ln24 & !sptSet_10)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_14 : Operation 174 [1/1] (2.70ns)   --->   "%icmp_ln39_9 = icmp_eq  i32 %graph_load_1, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 174 'icmp' 'icmp_ln39_9' <Predicate = (!icmp_ln24 & !sptSet_10)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 175 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_9, void %land.lhs.true37.i.1, void %for.body29.i.split.2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 175 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_10)> <Delay = 0.00>
ST_14 : Operation 176 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_11, void %land.lhs.true32.i.2, void %for.body29.i.split.3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 176 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_14 : Operation 177 [2/2] (3.25ns)   --->   "%graph_load_2 = load i7 %graph_addr_2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 177 'load' 'graph_load_2' <Predicate = (!icmp_ln24 & !sptSet_11)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 15 <SV = 14> <Delay = 5.95>
ST_15 : Operation 178 [1/1] (2.03ns)   --->   "%add_ln39_12 = add i7 %add_ln39_9, i7 3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 178 'add' 'add_ln39_12' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln39_4 = zext i7 %add_ln39_12" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 179 'zext' 'zext_ln39_4' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_15 : Operation 180 [1/1] (0.00ns)   --->   "%graph_addr_3 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 180 'getelementptr' 'graph_addr_3' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_15 : Operation 181 [1/1] (1.77ns)   --->   "%icmp_ln36_3 = icmp_eq  i4 %select_ln29, i4 3" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 181 'icmp' 'icmp_ln36_3' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 182 [1/1] (0.97ns)   --->   "%sptSet_12 = or i1 %icmp_ln36_3, i1 %sptSet_3" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 182 'or' 'sptSet_12' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 183 [1/1] (2.70ns)   --->   "%icmp_ln39_2 = icmp_slt  i32 %add_ln39, i32 %dist_load" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 183 'icmp' 'icmp_ln39_2' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39 & !icmp_ln39_1)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 184 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_2, void %for.body29.i.split.1, void %if.then51.i.0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 184 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39 & !icmp_ln39_1)> <Delay = 0.00>
ST_15 : Operation 185 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39, i4 %dist_addr_8" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 185 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39 & !icmp_ln39_1 & icmp_ln39_2)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_15 : Operation 186 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.1" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 186 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_9 & !icmp_ln39 & !icmp_ln39_1 & icmp_ln39_2)> <Delay = 0.00>
ST_15 : Operation 187 [1/2] (3.25ns)   --->   "%graph_load_2 = load i7 %graph_addr_2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 187 'load' 'graph_load_2' <Predicate = (!icmp_ln24 & !sptSet_11)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_15 : Operation 188 [1/1] (2.70ns)   --->   "%icmp_ln39_12 = icmp_eq  i32 %graph_load_2, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 188 'icmp' 'icmp_ln39_12' <Predicate = (!icmp_ln24 & !sptSet_11)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 189 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_12, void %land.lhs.true37.i.2, void %for.body29.i.split.3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 189 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_11)> <Delay = 0.00>
ST_15 : Operation 190 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_12, void %land.lhs.true32.i.3, void %for.body29.i.split.4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 190 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_15 : Operation 191 [2/2] (3.25ns)   --->   "%graph_load_3 = load i7 %graph_addr_3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 191 'load' 'graph_load_3' <Predicate = (!icmp_ln24 & !sptSet_12)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 16 <SV = 15> <Delay = 5.95>
ST_16 : Operation 192 [1/1] (2.03ns)   --->   "%add_ln39_13 = add i7 %add_ln39_9, i7 4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 192 'add' 'add_ln39_13' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln39_5 = zext i7 %add_ln39_13" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 193 'zext' 'zext_ln39_5' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_16 : Operation 194 [1/1] (0.00ns)   --->   "%graph_addr_4 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 194 'getelementptr' 'graph_addr_4' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_16 : Operation 195 [1/1] (1.77ns)   --->   "%icmp_ln36_4 = icmp_eq  i4 %select_ln29, i4 4" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 195 'icmp' 'icmp_ln36_4' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 196 [1/1] (0.97ns)   --->   "%sptSet_13 = or i1 %icmp_ln36_4, i1 %sptSet_4" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 196 'or' 'sptSet_13' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 197 [2/2] (2.15ns)   --->   "%dist_load_10 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 197 'load' 'dist_load_10' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_16 : Operation 198 [1/2] (3.25ns)   --->   "%graph_load_3 = load i7 %graph_addr_3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 198 'load' 'graph_load_3' <Predicate = (!icmp_ln24 & !sptSet_12)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_16 : Operation 199 [1/1] (2.70ns)   --->   "%icmp_ln39_3 = icmp_eq  i32 %graph_load_3, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 199 'icmp' 'icmp_ln39_3' <Predicate = (!icmp_ln24 & !sptSet_12)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 200 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_3, void %land.lhs.true37.i.3, void %for.body29.i.split.4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 200 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_12)> <Delay = 0.00>
ST_16 : Operation 201 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_13, void %land.lhs.true32.i.4, void %for.body29.i.split.5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 201 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_16 : Operation 202 [2/2] (3.25ns)   --->   "%graph_load_4 = load i7 %graph_addr_4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 202 'load' 'graph_load_4' <Predicate = (!icmp_ln24 & !sptSet_13)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 17 <SV = 16> <Delay = 5.95>
ST_17 : Operation 203 [1/1] (2.03ns)   --->   "%add_ln39_14 = add i7 %add_ln39_9, i7 5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 203 'add' 'add_ln39_14' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln39_6 = zext i7 %add_ln39_14" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 204 'zext' 'zext_ln39_6' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_17 : Operation 205 [1/1] (0.00ns)   --->   "%graph_addr_5 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 205 'getelementptr' 'graph_addr_5' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_17 : Operation 206 [1/1] (1.77ns)   --->   "%icmp_ln36_5 = icmp_eq  i4 %select_ln29, i4 5" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 206 'icmp' 'icmp_ln36_5' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 207 [1/1] (0.97ns)   --->   "%sptSet_14 = or i1 %icmp_ln36_5, i1 %sptSet_5" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 207 'or' 'sptSet_14' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 208 [1/2] (2.15ns)   --->   "%dist_load_10 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 208 'load' 'dist_load_10' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_17 : Operation 209 [1/1] (2.70ns)   --->   "%icmp_ln39_10 = icmp_eq  i32 %dist_load_10, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 209 'icmp' 'icmp_ln39_10' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 210 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_10, void %land.lhs.true41.i.1, void %for.body29.i.split.2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 210 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9)> <Delay = 0.00>
ST_17 : Operation 211 [1/1] (2.70ns)   --->   "%add_ln39_1 = add i32 %dist_load_10, i32 %graph_load_1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 211 'add' 'add_ln39_1' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9 & !icmp_ln39_10)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 212 [1/2] (3.25ns)   --->   "%graph_load_4 = load i7 %graph_addr_4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 212 'load' 'graph_load_4' <Predicate = (!icmp_ln24 & !sptSet_13)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_17 : Operation 213 [1/1] (2.70ns)   --->   "%icmp_ln39_4 = icmp_eq  i32 %graph_load_4, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 213 'icmp' 'icmp_ln39_4' <Predicate = (!icmp_ln24 & !sptSet_13)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 214 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_4, void %land.lhs.true37.i.4, void %for.body29.i.split.5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 214 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_13)> <Delay = 0.00>
ST_17 : Operation 215 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_14, void %land.lhs.true32.i.5, void %for.body29.i.split.6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 215 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_17 : Operation 216 [2/2] (3.25ns)   --->   "%graph_load_5 = load i7 %graph_addr_5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 216 'load' 'graph_load_5' <Predicate = (!icmp_ln24 & !sptSet_14)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 18 <SV = 17> <Delay = 5.95>
ST_18 : Operation 217 [1/1] (2.03ns)   --->   "%add_ln39_15 = add i7 %add_ln39_9, i7 6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 217 'add' 'add_ln39_15' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln39_7 = zext i7 %add_ln39_15" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 218 'zext' 'zext_ln39_7' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_18 : Operation 219 [1/1] (0.00ns)   --->   "%graph_addr_6 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 219 'getelementptr' 'graph_addr_6' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_18 : Operation 220 [1/1] (1.77ns)   --->   "%icmp_ln36_6 = icmp_eq  i4 %select_ln29, i4 6" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 220 'icmp' 'icmp_ln36_6' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 221 [1/1] (0.97ns)   --->   "%sptSet_15 = or i1 %icmp_ln36_6, i1 %sptSet_6" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 221 'or' 'sptSet_15' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 222 [1/1] (2.70ns)   --->   "%icmp_ln39_11 = icmp_slt  i32 %add_ln39_1, i32 %dist_load_1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 222 'icmp' 'icmp_ln39_11' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9 & !icmp_ln39_10)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 223 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_11, void %for.body29.i.split.2, void %if.then51.i.1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 223 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9 & !icmp_ln39_10)> <Delay = 0.00>
ST_18 : Operation 224 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_1, i4 %dist_addr_7" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 224 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9 & !icmp_ln39_10 & icmp_ln39_11)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_18 : Operation 225 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.2" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 225 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_10 & !icmp_ln39_9 & !icmp_ln39_10 & icmp_ln39_11)> <Delay = 0.00>
ST_18 : Operation 226 [1/2] (3.25ns)   --->   "%graph_load_5 = load i7 %graph_addr_5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 226 'load' 'graph_load_5' <Predicate = (!icmp_ln24 & !sptSet_14)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_18 : Operation 227 [1/1] (2.70ns)   --->   "%icmp_ln39_5 = icmp_eq  i32 %graph_load_5, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 227 'icmp' 'icmp_ln39_5' <Predicate = (!icmp_ln24 & !sptSet_14)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 228 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_5, void %land.lhs.true37.i.5, void %for.body29.i.split.6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 228 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_14)> <Delay = 0.00>
ST_18 : Operation 229 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_15, void %land.lhs.true32.i.6, void %for.body29.i.split.7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 229 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_18 : Operation 230 [2/2] (3.25ns)   --->   "%graph_load_6 = load i7 %graph_addr_6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 230 'load' 'graph_load_6' <Predicate = (!icmp_ln24 & !sptSet_15)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 19 <SV = 18> <Delay = 5.95>
ST_19 : Operation 231 [1/1] (2.03ns)   --->   "%add_ln39_16 = add i7 %add_ln39_9, i7 7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 231 'add' 'add_ln39_16' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 232 [1/1] (0.00ns)   --->   "%zext_ln39_8 = zext i7 %add_ln39_16" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 232 'zext' 'zext_ln39_8' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_19 : Operation 233 [1/1] (0.00ns)   --->   "%graph_addr_7 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 233 'getelementptr' 'graph_addr_7' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_19 : Operation 234 [1/1] (2.03ns)   --->   "%add_ln39_17 = add i7 %add_ln39_9, i7 8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 234 'add' 'add_ln39_17' <Predicate = (!icmp_ln24)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 235 [1/1] (1.77ns)   --->   "%icmp_ln36_7 = icmp_eq  i4 %select_ln29, i4 7" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 235 'icmp' 'icmp_ln36_7' <Predicate = (!icmp_ln24)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 236 [1/1] (0.97ns)   --->   "%sptSet_16 = or i1 %icmp_ln36_7, i1 %sptSet_7" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 236 'or' 'sptSet_16' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 237 [2/2] (2.15ns)   --->   "%dist_load_11 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 237 'load' 'dist_load_11' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_19 : Operation 238 [1/2] (3.25ns)   --->   "%graph_load_6 = load i7 %graph_addr_6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 238 'load' 'graph_load_6' <Predicate = (!icmp_ln24 & !sptSet_15)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_19 : Operation 239 [1/1] (2.70ns)   --->   "%icmp_ln39_6 = icmp_eq  i32 %graph_load_6, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 239 'icmp' 'icmp_ln39_6' <Predicate = (!icmp_ln24 & !sptSet_15)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 240 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_6, void %land.lhs.true37.i.6, void %for.body29.i.split.7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 240 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_15)> <Delay = 0.00>
ST_19 : Operation 241 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_16, void %land.lhs.true32.i.7, void %for.body29.i.split.8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 241 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_19 : Operation 242 [2/2] (3.25ns)   --->   "%graph_load_7 = load i7 %graph_addr_7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 242 'load' 'graph_load_7' <Predicate = (!icmp_ln24 & !sptSet_16)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 20 <SV = 19> <Delay = 5.95>
ST_20 : Operation 243 [1/1] (0.00ns)   --->   "%speclooptripcount_ln13 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [dijastra_algo.cpp:13->dijastra_algo.cpp:52]   --->   Operation 243 'speclooptripcount' 'speclooptripcount_ln13' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_20 : Operation 244 [1/1] (0.00ns)   --->   "%specloopname_ln24 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [dijastra_algo.cpp:24->dijastra_algo.cpp:52]   --->   Operation 244 'specloopname' 'specloopname_ln24' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_20 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln39_9 = zext i7 %add_ln39_17" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 245 'zext' 'zext_ln39_9' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_20 : Operation 246 [1/1] (0.00ns)   --->   "%graph_addr_8 = getelementptr i32 %graph, i64 0, i64 %zext_ln39_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 246 'getelementptr' 'graph_addr_8' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_20 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node or_ln36_2)   --->   "%or_ln36 = or i1 %icmp_ln36, i1 %icmp_ln36_1" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 247 'or' 'or_ln36' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node or_ln36_2)   --->   "%or_ln36_1 = or i1 %icmp_ln36_2, i1 %icmp_ln36_3" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 248 'or' 'or_ln36_1' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 249 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln36_2 = or i1 %or_ln36_1, i1 %or_ln36" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 249 'or' 'or_ln36_2' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node sptSet_17)   --->   "%or_ln36_3 = or i1 %icmp_ln36_4, i1 %icmp_ln36_5" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 250 'or' 'or_ln36_3' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node sptSet_17)   --->   "%or_ln36_4 = or i1 %icmp_ln36_6, i1 %icmp_ln36_7" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 251 'or' 'or_ln36_4' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node sptSet_17)   --->   "%or_ln36_5 = or i1 %or_ln36_4, i1 %or_ln36_3" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 252 'or' 'or_ln36_5' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node sptSet_17)   --->   "%or_ln36_6 = or i1 %or_ln36_5, i1 %or_ln36_2" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 253 'or' 'or_ln36_6' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node sptSet_17)   --->   "%xor_ln36 = xor i1 %or_ln36_6, i1 1" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 254 'xor' 'xor_ln36' <Predicate = (!icmp_ln24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 255 [1/1] (0.97ns) (out node of the LUT)   --->   "%sptSet_17 = or i1 %sptSet_8, i1 %xor_ln36" [dijastra_algo.cpp:36->dijastra_algo.cpp:52]   --->   Operation 255 'or' 'sptSet_17' <Predicate = (!icmp_ln24)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 256 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_9, void %land.lhs.true32.i.0, void %for.body29.i.split.1" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 256 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_20 : Operation 257 [1/2] (2.15ns)   --->   "%dist_load_11 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 257 'load' 'dist_load_11' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_20 : Operation 258 [1/1] (2.70ns)   --->   "%icmp_ln39_13 = icmp_eq  i32 %dist_load_11, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 258 'icmp' 'icmp_ln39_13' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 259 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_13, void %land.lhs.true41.i.2, void %for.body29.i.split.3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 259 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12)> <Delay = 0.00>
ST_20 : Operation 260 [1/1] (2.70ns)   --->   "%add_ln39_2 = add i32 %dist_load_11, i32 %graph_load_2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 260 'add' 'add_ln39_2' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12 & !icmp_ln39_13)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 261 [1/2] (3.25ns)   --->   "%graph_load_7 = load i7 %graph_addr_7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 261 'load' 'graph_load_7' <Predicate = (!icmp_ln24 & !sptSet_16)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_20 : Operation 262 [1/1] (2.70ns)   --->   "%icmp_ln39_7 = icmp_eq  i32 %graph_load_7, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 262 'icmp' 'icmp_ln39_7' <Predicate = (!icmp_ln24 & !sptSet_16)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 263 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_7, void %land.lhs.true37.i.7, void %for.body29.i.split.8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 263 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_16)> <Delay = 0.00>
ST_20 : Operation 264 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %sptSet_17, void %land.lhs.true32.i.8, void %for.inc65.i" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 264 'br' 'br_ln39' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_20 : Operation 265 [2/2] (3.25ns)   --->   "%graph_load_8 = load i7 %graph_addr_8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 265 'load' 'graph_load_8' <Predicate = (!icmp_ln24 & !sptSet_17)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>

State 21 <SV = 20> <Delay = 5.95>
ST_21 : Operation 266 [1/1] (2.70ns)   --->   "%icmp_ln39_14 = icmp_slt  i32 %add_ln39_2, i32 %dist_load_2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 266 'icmp' 'icmp_ln39_14' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12 & !icmp_ln39_13)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 267 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_14, void %for.body29.i.split.3, void %if.then51.i.2" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 267 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12 & !icmp_ln39_13)> <Delay = 0.00>
ST_21 : Operation 268 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_2, i4 %dist_addr_6" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 268 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12 & !icmp_ln39_13 & icmp_ln39_14)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_21 : Operation 269 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.3" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 269 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_11 & !icmp_ln39_12 & !icmp_ln39_13 & icmp_ln39_14)> <Delay = 0.00>
ST_21 : Operation 270 [1/2] (3.25ns)   --->   "%graph_load_8 = load i7 %graph_addr_8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 270 'load' 'graph_load_8' <Predicate = (!icmp_ln24 & !sptSet_17)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 81> <RAM>
ST_21 : Operation 271 [1/1] (2.70ns)   --->   "%icmp_ln39_8 = icmp_eq  i32 %graph_load_8, i32 0" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 271 'icmp' 'icmp_ln39_8' <Predicate = (!icmp_ln24 & !sptSet_17)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 272 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_8, void %land.lhs.true37.i.8, void %for.inc65.i" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 272 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_17)> <Delay = 0.00>

State 22 <SV = 21> <Delay = 2.15>
ST_22 : Operation 273 [2/2] (2.15ns)   --->   "%dist_load_12 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 273 'load' 'dist_load_12' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 23 <SV = 22> <Delay = 4.85>
ST_23 : Operation 274 [1/2] (2.15ns)   --->   "%dist_load_12 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 274 'load' 'dist_load_12' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_23 : Operation 275 [1/1] (2.70ns)   --->   "%icmp_ln39_15 = icmp_eq  i32 %dist_load_12, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 275 'icmp' 'icmp_ln39_15' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 276 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_15, void %land.lhs.true41.i.3, void %for.body29.i.split.4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 276 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3)> <Delay = 0.00>
ST_23 : Operation 277 [1/1] (2.70ns)   --->   "%add_ln39_3 = add i32 %dist_load_12, i32 %graph_load_3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 277 'add' 'add_ln39_3' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3 & !icmp_ln39_15)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.85>
ST_24 : Operation 278 [1/1] (2.70ns)   --->   "%icmp_ln39_16 = icmp_slt  i32 %add_ln39_3, i32 %dist_load_3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 278 'icmp' 'icmp_ln39_16' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3 & !icmp_ln39_15)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 279 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_16, void %for.body29.i.split.4, void %if.then51.i.3" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 279 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3 & !icmp_ln39_15)> <Delay = 0.00>
ST_24 : Operation 280 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_3, i4 %dist_addr_5" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 280 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3 & !icmp_ln39_15 & icmp_ln39_16)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_24 : Operation 281 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.4" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 281 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_12 & !icmp_ln39_3 & !icmp_ln39_15 & icmp_ln39_16)> <Delay = 0.00>

State 25 <SV = 24> <Delay = 2.15>
ST_25 : Operation 282 [2/2] (2.15ns)   --->   "%dist_load_13 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 282 'load' 'dist_load_13' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 26 <SV = 25> <Delay = 4.85>
ST_26 : Operation 283 [1/2] (2.15ns)   --->   "%dist_load_13 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 283 'load' 'dist_load_13' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_26 : Operation 284 [1/1] (2.70ns)   --->   "%icmp_ln39_17 = icmp_eq  i32 %dist_load_13, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 284 'icmp' 'icmp_ln39_17' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 285 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_17, void %land.lhs.true41.i.4, void %for.body29.i.split.5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 285 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4)> <Delay = 0.00>
ST_26 : Operation 286 [1/1] (2.70ns)   --->   "%add_ln39_4 = add i32 %dist_load_13, i32 %graph_load_4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 286 'add' 'add_ln39_4' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4 & !icmp_ln39_17)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.85>
ST_27 : Operation 287 [1/1] (2.70ns)   --->   "%icmp_ln39_18 = icmp_slt  i32 %add_ln39_4, i32 %dist_load_4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 287 'icmp' 'icmp_ln39_18' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4 & !icmp_ln39_17)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 288 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_18, void %for.body29.i.split.5, void %if.then51.i.4" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 288 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4 & !icmp_ln39_17)> <Delay = 0.00>
ST_27 : Operation 289 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_4, i4 %dist_addr_4" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 289 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4 & !icmp_ln39_17 & icmp_ln39_18)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_27 : Operation 290 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.5" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 290 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_13 & !icmp_ln39_4 & !icmp_ln39_17 & icmp_ln39_18)> <Delay = 0.00>

State 28 <SV = 27> <Delay = 2.15>
ST_28 : Operation 291 [2/2] (2.15ns)   --->   "%dist_load_14 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 291 'load' 'dist_load_14' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 29 <SV = 28> <Delay = 4.85>
ST_29 : Operation 292 [1/2] (2.15ns)   --->   "%dist_load_14 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 292 'load' 'dist_load_14' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_29 : Operation 293 [1/1] (2.70ns)   --->   "%icmp_ln39_19 = icmp_eq  i32 %dist_load_14, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 293 'icmp' 'icmp_ln39_19' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 294 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_19, void %land.lhs.true41.i.5, void %for.body29.i.split.6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 294 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5)> <Delay = 0.00>
ST_29 : Operation 295 [1/1] (2.70ns)   --->   "%add_ln39_5 = add i32 %dist_load_14, i32 %graph_load_5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 295 'add' 'add_ln39_5' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5 & !icmp_ln39_19)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 4.85>
ST_30 : Operation 296 [1/1] (2.70ns)   --->   "%icmp_ln39_20 = icmp_slt  i32 %add_ln39_5, i32 %dist_load_5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 296 'icmp' 'icmp_ln39_20' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5 & !icmp_ln39_19)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 297 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_20, void %for.body29.i.split.6, void %if.then51.i.5" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 297 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5 & !icmp_ln39_19)> <Delay = 0.00>
ST_30 : Operation 298 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_5, i4 %dist_addr_3" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 298 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5 & !icmp_ln39_19 & icmp_ln39_20)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_30 : Operation 299 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.6" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 299 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_14 & !icmp_ln39_5 & !icmp_ln39_19 & icmp_ln39_20)> <Delay = 0.00>

State 31 <SV = 30> <Delay = 2.15>
ST_31 : Operation 300 [2/2] (2.15ns)   --->   "%dist_load_15 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 300 'load' 'dist_load_15' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 32 <SV = 31> <Delay = 4.85>
ST_32 : Operation 301 [1/2] (2.15ns)   --->   "%dist_load_15 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 301 'load' 'dist_load_15' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_32 : Operation 302 [1/1] (2.70ns)   --->   "%icmp_ln39_21 = icmp_eq  i32 %dist_load_15, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 302 'icmp' 'icmp_ln39_21' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 303 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_21, void %land.lhs.true41.i.6, void %for.body29.i.split.7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 303 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6)> <Delay = 0.00>
ST_32 : Operation 304 [1/1] (2.70ns)   --->   "%add_ln39_6 = add i32 %dist_load_15, i32 %graph_load_6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 304 'add' 'add_ln39_6' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6 & !icmp_ln39_21)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 4.85>
ST_33 : Operation 305 [1/1] (2.70ns)   --->   "%icmp_ln39_22 = icmp_slt  i32 %add_ln39_6, i32 %dist_load_6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 305 'icmp' 'icmp_ln39_22' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6 & !icmp_ln39_21)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 306 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_22, void %for.body29.i.split.7, void %if.then51.i.6" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 306 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6 & !icmp_ln39_21)> <Delay = 0.00>
ST_33 : Operation 307 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_6, i4 %dist_addr_2" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 307 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6 & !icmp_ln39_21 & icmp_ln39_22)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_33 : Operation 308 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.7" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 308 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_15 & !icmp_ln39_6 & !icmp_ln39_21 & icmp_ln39_22)> <Delay = 0.00>

State 34 <SV = 33> <Delay = 2.15>
ST_34 : Operation 309 [2/2] (2.15ns)   --->   "%dist_load_16 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 309 'load' 'dist_load_16' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 35 <SV = 34> <Delay = 4.85>
ST_35 : Operation 310 [1/2] (2.15ns)   --->   "%dist_load_16 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 310 'load' 'dist_load_16' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_35 : Operation 311 [1/1] (2.70ns)   --->   "%icmp_ln39_23 = icmp_eq  i32 %dist_load_16, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 311 'icmp' 'icmp_ln39_23' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 312 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_23, void %land.lhs.true41.i.7, void %for.body29.i.split.8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 312 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7)> <Delay = 0.00>
ST_35 : Operation 313 [1/1] (2.70ns)   --->   "%add_ln39_7 = add i32 %dist_load_16, i32 %graph_load_7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 313 'add' 'add_ln39_7' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7 & !icmp_ln39_23)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 4.85>
ST_36 : Operation 314 [1/1] (2.70ns)   --->   "%icmp_ln39_24 = icmp_slt  i32 %add_ln39_7, i32 %dist_load_7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 314 'icmp' 'icmp_ln39_24' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7 & !icmp_ln39_23)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 315 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_24, void %for.body29.i.split.8, void %if.then51.i.7" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 315 'br' 'br_ln39' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7 & !icmp_ln39_23)> <Delay = 0.00>
ST_36 : Operation 316 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_7, i4 %dist_addr_1" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 316 'store' 'store_ln40' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7 & !icmp_ln39_23 & icmp_ln39_24)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_36 : Operation 317 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body29.i.split.8" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 317 'br' 'br_ln41' <Predicate = (!icmp_ln24 & !sptSet_16 & !icmp_ln39_7 & !icmp_ln39_23 & icmp_ln39_24)> <Delay = 0.00>

State 37 <SV = 36> <Delay = 2.15>
ST_37 : Operation 318 [2/2] (2.15ns)   --->   "%dist_load_17 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 318 'load' 'dist_load_17' <Predicate = (!icmp_ln24 & !sptSet_17 & !icmp_ln39_8)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>

State 38 <SV = 37> <Delay = 4.85>
ST_38 : Operation 319 [1/2] (2.15ns)   --->   "%dist_load_17 = load i4 %dist_addr_9" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 319 'load' 'dist_load_17' <Predicate = (!sptSet_17 & !icmp_ln39_8)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_38 : Operation 320 [1/1] (2.70ns)   --->   "%icmp_ln39_25 = icmp_eq  i32 %dist_load_17, i32 2147483647" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 320 'icmp' 'icmp_ln39_25' <Predicate = (!sptSet_17 & !icmp_ln39_8)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 321 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_25, void %land.lhs.true41.i.8, void %for.inc65.i" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 321 'br' 'br_ln39' <Predicate = (!sptSet_17 & !icmp_ln39_8)> <Delay = 0.00>

State 39 <SV = 38> <Delay = 5.40>
ST_39 : Operation 322 [1/1] (2.70ns)   --->   "%add_ln39_8 = add i32 %dist_load_17, i32 %graph_load_8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 322 'add' 'add_ln39_8' <Predicate = (!sptSet_17 & !icmp_ln39_8 & !icmp_ln39_25)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 323 [1/1] (2.70ns)   --->   "%icmp_ln39_26 = icmp_slt  i32 %add_ln39_8, i32 %dist_load_8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 323 'icmp' 'icmp_ln39_26' <Predicate = (!sptSet_17 & !icmp_ln39_8 & !icmp_ln39_25)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 324 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39_26, void %for.inc65.i, void %if.then51.i.8" [dijastra_algo.cpp:39->dijastra_algo.cpp:52]   --->   Operation 324 'br' 'br_ln39' <Predicate = (!sptSet_17 & !icmp_ln39_8 & !icmp_ln39_25)> <Delay = 0.00>

State 40 <SV = 41> <Delay = 2.15>
ST_40 : Operation 325 [1/1] (2.15ns)   --->   "%store_ln40 = store i32 %add_ln39_8, i4 %dist_addr" [dijastra_algo.cpp:40->dijastra_algo.cpp:52]   --->   Operation 325 'store' 'store_ln40' <Predicate = (!sptSet_17 & !icmp_ln39_8 & !icmp_ln39_25 & icmp_ln39_26)> <Delay = 2.15> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 9> <RAM>
ST_40 : Operation 326 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.inc65.i" [dijastra_algo.cpp:41->dijastra_algo.cpp:52]   --->   Operation 326 'br' 'br_ln41' <Predicate = (!sptSet_17 & !icmp_ln39_8 & !icmp_ln39_25 & icmp_ln39_26)> <Delay = 0.00>

State 41 <SV = 39> <Delay = 0.00>

State 42 <SV = 40> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.387ns
The critical path consists of the following:
	'alloca' operation ('count') [3]  (0.000 ns)
	'load' operation ('count', dijastra_algo.cpp:24->dijastra_algo.cpp:52) on local variable 'count' [20]  (0.000 ns)
	'add' operation ('count', dijastra_algo.cpp:24->dijastra_algo.cpp:52) [32]  (1.777 ns)
	'store' operation ('store_ln24', dijastra_algo.cpp:24->dijastra_algo.cpp:52) of variable 'count', dijastra_algo.cpp:24->dijastra_algo.cpp:52 on local variable 'count' [305]  (1.610 ns)

 <State 2>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('dist_addr_4', dijastra_algo.cpp:18->dijastra_algo.cpp:52) [25]  (0.000 ns)
	'load' operation ('dist_load_4', dijastra_algo.cpp:30->dijastra_algo.cpp:52) on array 'dist' [63]  (2.152 ns)

 <State 3>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('dist_addr_8', dijastra_algo.cpp:18->dijastra_algo.cpp:52) [29]  (0.000 ns)
	'load' operation ('dist_load', dijastra_algo.cpp:30->dijastra_algo.cpp:52) on array 'dist' [37]  (2.152 ns)

 <State 4>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load', dijastra_algo.cpp:30->dijastra_algo.cpp:52) on array 'dist' [37]  (2.152 ns)

 <State 5>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_1', dijastra_algo.cpp:30->dijastra_algo.cpp:52) on array 'dist' [40]  (2.152 ns)

 <State 6>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('dist_addr_6', dijastra_algo.cpp:18->dijastra_algo.cpp:52) [27]  (0.000 ns)
	'load' operation ('dist_load_2', dijastra_algo.cpp:30->dijastra_algo.cpp:52) on array 'dist' [48]  (2.152 ns)

 <State 7>: 7.178ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln30', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [41]  (2.702 ns)
	'xor' operation ('xor_ln30', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [42]  (0.978 ns)
	'select' operation ('select_ln30_1', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [44]  (0.000 ns)
	'select' operation ('min_dist_1_1', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [47]  (0.796 ns)
	'icmp' operation ('icmp_ln30_1', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [49]  (2.702 ns)

 <State 8>: 6.628ns
The critical path consists of the following:
	'load' operation ('dist_load_3', dijastra_algo.cpp:30->dijastra_algo.cpp:52) on array 'dist' [55]  (2.152 ns)
	'icmp' operation ('icmp_ln30_2', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [56]  (2.702 ns)
	'xor' operation ('xor_ln30_2', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [57]  (0.978 ns)
	'select' operation ('select_ln30_10', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [59]  (0.000 ns)
	'select' operation ('min_dist_1_3', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [62]  (0.796 ns)

 <State 9>: 7.178ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln30_3', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [64]  (2.702 ns)
	'xor' operation ('xor_ln30_3', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [65]  (0.978 ns)
	'select' operation ('select_ln30_11', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [67]  (0.000 ns)
	'select' operation ('min_dist_1_4', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [69]  (0.796 ns)
	'icmp' operation ('icmp_ln30_4', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [71]  (2.702 ns)

 <State 10>: 5.926ns
The critical path consists of the following:
	'select' operation ('sptSet_cast', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [38]  (0.993 ns)
	'select' operation ('u_1_1', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [45]  (0.993 ns)
	'select' operation ('u_1_2', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [53]  (0.980 ns)
	'select' operation ('u_1_3', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [60]  (0.980 ns)
	'select' operation ('u_1_4', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [68]  (0.990 ns)
	'select' operation ('u_1_5', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [75]  (0.990 ns)

 <State 11>: 7.178ns
The critical path consists of the following:
	'phi' operation ('sptSet') with incoming values : ('sptSet', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [13]  (0.000 ns)
	'select' operation ('min_dist_1_6', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [83]  (0.796 ns)
	'icmp' operation ('icmp_ln30_6', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [85]  (2.702 ns)
	'xor' operation ('xor_ln30_6', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [86]  (0.978 ns)
	'select' operation ('select_ln30_14', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [88]  (0.000 ns)
	'select' operation ('min_dist_1_7', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [90]  (0.000 ns)
	'icmp' operation ('icmp_ln30_7', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [92]  (2.702 ns)

 <State 12>: 7.268ns
The critical path consists of the following:
	'select' operation ('select_ln30_7', dijastra_algo.cpp:30->dijastra_algo.cpp:52) [87]  (0.000 ns)
	'select' operation ('u_1_7', dijastra_algo.cpp:36->dijastra_algo.cpp:52) [89]  (0.990 ns)
	'select' operation ('select_ln29', dijastra_algo.cpp:29->dijastra_algo.cpp:52) [95]  (0.990 ns)
	'add' operation ('add_ln39_9', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [99]  (2.030 ns)
	'getelementptr' operation ('graph_addr', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [101]  (0.000 ns)
	'load' operation ('graph_load', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [154]  (3.257 ns)

 <State 13>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [154]  (3.257 ns)
	'icmp' operation ('icmp_ln39', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [155]  (2.702 ns)

 <State 14>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_1', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [171]  (3.257 ns)
	'icmp' operation ('icmp_ln39_9', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [172]  (2.702 ns)

 <State 15>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_2', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [188]  (3.257 ns)
	'icmp' operation ('icmp_ln39_12', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [189]  (2.702 ns)

 <State 16>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_3', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [205]  (3.257 ns)
	'icmp' operation ('icmp_ln39_3', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [206]  (2.702 ns)

 <State 17>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_4', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [222]  (3.257 ns)
	'icmp' operation ('icmp_ln39_4', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [223]  (2.702 ns)

 <State 18>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_5', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [239]  (3.257 ns)
	'icmp' operation ('icmp_ln39_5', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [240]  (2.702 ns)

 <State 19>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_6', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [256]  (3.257 ns)
	'icmp' operation ('icmp_ln39_6', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [257]  (2.702 ns)

 <State 20>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_7', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [273]  (3.257 ns)
	'icmp' operation ('icmp_ln39_7', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [274]  (2.702 ns)

 <State 21>: 5.959ns
The critical path consists of the following:
	'load' operation ('graph_load_8', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'graph' [290]  (3.257 ns)
	'icmp' operation ('icmp_ln39_8', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [291]  (2.702 ns)

 <State 22>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_12', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [209]  (2.152 ns)

 <State 23>: 4.854ns
The critical path consists of the following:
	'load' operation ('dist_load_12', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [209]  (2.152 ns)
	'add' operation ('add_ln39_3', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [213]  (2.702 ns)

 <State 24>: 4.854ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln39_16', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [214]  (2.702 ns)
	blocking operation 2.152 ns on control path)

 <State 25>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_13', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [226]  (2.152 ns)

 <State 26>: 4.854ns
The critical path consists of the following:
	'load' operation ('dist_load_13', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [226]  (2.152 ns)
	'add' operation ('add_ln39_4', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [230]  (2.702 ns)

 <State 27>: 4.854ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln39_18', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [231]  (2.702 ns)
	blocking operation 2.152 ns on control path)

 <State 28>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_14', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [243]  (2.152 ns)

 <State 29>: 4.854ns
The critical path consists of the following:
	'load' operation ('dist_load_14', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [243]  (2.152 ns)
	'add' operation ('add_ln39_5', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [247]  (2.702 ns)

 <State 30>: 4.854ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln39_20', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [248]  (2.702 ns)
	blocking operation 2.152 ns on control path)

 <State 31>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_15', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [260]  (2.152 ns)

 <State 32>: 4.854ns
The critical path consists of the following:
	'load' operation ('dist_load_15', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [260]  (2.152 ns)
	'add' operation ('add_ln39_6', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [264]  (2.702 ns)

 <State 33>: 4.854ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln39_22', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [265]  (2.702 ns)
	blocking operation 2.152 ns on control path)

 <State 34>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_16', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [277]  (2.152 ns)

 <State 35>: 4.854ns
The critical path consists of the following:
	'load' operation ('dist_load_16', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [277]  (2.152 ns)
	'add' operation ('add_ln39_7', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [281]  (2.702 ns)

 <State 36>: 4.854ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln39_24', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [282]  (2.702 ns)
	blocking operation 2.152 ns on control path)

 <State 37>: 2.152ns
The critical path consists of the following:
	'load' operation ('dist_load_17', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [294]  (2.152 ns)

 <State 38>: 4.854ns
The critical path consists of the following:
	'load' operation ('dist_load_17', dijastra_algo.cpp:39->dijastra_algo.cpp:52) on array 'dist' [294]  (2.152 ns)
	'icmp' operation ('icmp_ln39_25', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [295]  (2.702 ns)

 <State 39>: 5.404ns
The critical path consists of the following:
	'add' operation ('add_ln39_8', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [298]  (2.702 ns)
	'icmp' operation ('icmp_ln39_26', dijastra_algo.cpp:39->dijastra_algo.cpp:52) [299]  (2.702 ns)

 <State 40>: 2.152ns
The critical path consists of the following:
	'store' operation ('store_ln40', dijastra_algo.cpp:40->dijastra_algo.cpp:52) of variable 'add_ln39_8', dijastra_algo.cpp:39->dijastra_algo.cpp:52 on array 'dist' [302]  (2.152 ns)

 <State 41>: 0.000ns
The critical path consists of the following:

 <State 42>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
