

================================================================
== Vitis HLS Report for 'pingpong_game'
================================================================
* Date:           Fri Sep 13 03:36:26 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        hlsc_pingpong
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.758 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_72_1  |        ?|        ?|         5|          2|          1|   inf|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 0
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 2, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.64>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%state_paddle1_y = alloca i32 1"   --->   Operation 7 'alloca' 'state_paddle1_y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_paddle2_y = alloca i32 1"   --->   Operation 8 'alloca' 'state_paddle2_y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%state_ball_x = alloca i32 1"   --->   Operation 9 'alloca' 'state_ball_x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%state_ball_y = alloca i32 1"   --->   Operation 10 'alloca' 'state_ball_y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%state_ball_dx = alloca i32 1"   --->   Operation 11 'alloca' 'state_ball_dx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%state_ball_dy = alloca i32 1"   --->   Operation 12 'alloca' 'state_ball_dy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%state_score1 = alloca i32 1"   --->   Operation 13 'alloca' 'state_score1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%state_score2 = alloca i32 1"   --->   Operation 14 'alloca' 'state_score2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%spectopmodule_ln56 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [pingpong.cpp:56]   --->   Operation 15 'spectopmodule' 'spectopmodule_ln56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln56 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_3, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0" [pingpong.cpp:56]   --->   Operation 16 'specinterface' 'specinterface_ln56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input1, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input1"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input2, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input2"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %output_r, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %output_r"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.61ns)   --->   "%store_ln72 = store i32 0, i32 %state_score2" [pingpong.cpp:72]   --->   Operation 23 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 24 [1/1] (1.61ns)   --->   "%store_ln72 = store i32 0, i32 %state_score1" [pingpong.cpp:72]   --->   Operation 24 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 25 [1/1] (1.61ns)   --->   "%store_ln72 = store i32 1, i32 %state_ball_dy" [pingpong.cpp:72]   --->   Operation 25 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 26 [1/1] (1.64ns)   --->   "%store_ln72 = store i32 1, i32 %state_ball_dx" [pingpong.cpp:72]   --->   Operation 26 'store' 'store_ln72' <Predicate = true> <Delay = 1.64>
ST_1 : Operation 27 [1/1] (1.61ns)   --->   "%store_ln72 = store i32 12, i32 %state_ball_y" [pingpong.cpp:72]   --->   Operation 27 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 28 [1/1] (1.61ns)   --->   "%store_ln72 = store i7 40, i7 %state_ball_x" [pingpong.cpp:72]   --->   Operation 28 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 29 [1/1] (1.61ns)   --->   "%store_ln72 = store i5 10, i5 %state_paddle2_y" [pingpong.cpp:72]   --->   Operation 29 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 30 [1/1] (1.61ns)   --->   "%store_ln72 = store i5 10, i5 %state_paddle1_y" [pingpong.cpp:72]   --->   Operation 30 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln72 = br void %while.body" [pingpong.cpp:72]   --->   Operation 31 'br' 'br_ln72' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.31>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%state_paddle1_y_2 = load i5 %state_paddle1_y" [pingpong.cpp:21->pingpong.cpp:78]   --->   Operation 32 'load' 'state_paddle1_y_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%state_paddle2_y_2 = load i5 %state_paddle2_y" [pingpong.cpp:21->pingpong.cpp:79]   --->   Operation 33 'load' 'state_paddle2_y_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%state_paddle1_y_cast = zext i5 %state_paddle1_y_2" [pingpong.cpp:21->pingpong.cpp:78]   --->   Operation 34 'zext' 'state_paddle1_y_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%state_paddle2_y_cast = zext i5 %state_paddle2_y_2" [pingpong.cpp:21->pingpong.cpp:79]   --->   Operation 35 'zext' 'state_paddle2_y_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%move1 = read i32 @_ssdm_op_Read.axis.volatile.i32P128A, i32 %input1" [pingpong.cpp:75]   --->   Operation 36 'read' 'move1' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%move2 = read i32 @_ssdm_op_Read.axis.volatile.i32P128A, i32 %input2" [pingpong.cpp:76]   --->   Operation 37 'read' 'move2' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i5 %state_paddle1_y_2" [pingpong.cpp:21->pingpong.cpp:78]   --->   Operation 38 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln21 = trunc i32 %move1" [pingpong.cpp:21->pingpong.cpp:78]   --->   Operation 39 'trunc' 'trunc_ln21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (2.70ns)   --->   "%add_ln21 = add i32 %move1, i32 %state_paddle1_y_cast" [pingpong.cpp:21->pingpong.cpp:78]   --->   Operation 40 'add' 'add_ln21' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (2.66ns)   --->   "%add_ln22 = add i31 %trunc_ln21, i31 %zext_ln21" [pingpong.cpp:22->pingpong.cpp:78]   --->   Operation 41 'add' 'add_ln22' <Predicate = true> <Delay = 2.66> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln21, i32 31" [pingpong.cpp:22->pingpong.cpp:78]   --->   Operation 42 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.94ns)   --->   "%select_ln22 = select i1 %tmp, i31 0, i31 %add_ln22" [pingpong.cpp:22->pingpong.cpp:78]   --->   Operation 43 'select' 'select_ln22' <Predicate = true> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln23 = trunc i31 %select_ln22" [pingpong.cpp:23->pingpong.cpp:78]   --->   Operation 44 'trunc' 'trunc_ln23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (2.66ns)   --->   "%icmp_ln23 = icmp_ugt  i31 %select_ln22, i31 20" [pingpong.cpp:23->pingpong.cpp:78]   --->   Operation 45 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln21_1 = zext i5 %state_paddle2_y_2" [pingpong.cpp:21->pingpong.cpp:79]   --->   Operation 46 'zext' 'zext_ln21_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln21_1 = trunc i32 %move2" [pingpong.cpp:21->pingpong.cpp:79]   --->   Operation 47 'trunc' 'trunc_ln21_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (2.70ns)   --->   "%add_ln21_1 = add i32 %move2, i32 %state_paddle2_y_cast" [pingpong.cpp:21->pingpong.cpp:79]   --->   Operation 48 'add' 'add_ln21_1' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (2.66ns)   --->   "%add_ln22_1 = add i31 %trunc_ln21_1, i31 %zext_ln21_1" [pingpong.cpp:22->pingpong.cpp:79]   --->   Operation 49 'add' 'add_ln22_1' <Predicate = true> <Delay = 2.66> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln21_1, i32 31" [pingpong.cpp:22->pingpong.cpp:79]   --->   Operation 50 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.94ns)   --->   "%select_ln22_1 = select i1 %tmp_1, i31 0, i31 %add_ln22_1" [pingpong.cpp:22->pingpong.cpp:79]   --->   Operation 51 'select' 'select_ln22_1' <Predicate = true> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln23_1 = trunc i31 %select_ln22_1" [pingpong.cpp:23->pingpong.cpp:79]   --->   Operation 52 'trunc' 'trunc_ln23_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (2.66ns)   --->   "%icmp_ln23_1 = icmp_ugt  i31 %select_ln22_1, i31 20" [pingpong.cpp:23->pingpong.cpp:79]   --->   Operation 53 'icmp' 'icmp_ln23_1' <Predicate = true> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.75>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%state_ball_x_2 = load i7 %state_ball_x" [pingpong.cpp:62]   --->   Operation 54 'load' 'state_ball_x_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%state_ball_y_2 = load i32 %state_ball_y" [pingpong.cpp:28->pingpong.cpp:80]   --->   Operation 55 'load' 'state_ball_y_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%state_ball_dx_2 = load i32 %state_ball_dx" [pingpong.cpp:27->pingpong.cpp:80]   --->   Operation 56 'load' 'state_ball_dx_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%state_ball_dy_2 = load i32 %state_ball_dy" [pingpong.cpp:28->pingpong.cpp:80]   --->   Operation 57 'load' 'state_ball_dy_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%state_ball_x_cast = zext i7 %state_ball_x_2" [pingpong.cpp:62]   --->   Operation 58 'zext' 'state_ball_x_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.21ns)   --->   "%state_paddle1_y_3 = select i1 %icmp_ln23, i5 20, i5 %trunc_ln23" [pingpong.cpp:23->pingpong.cpp:78]   --->   Operation 59 'select' 'state_paddle1_y_3' <Predicate = true> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i5 %state_paddle1_y_3" [pingpong.cpp:62]   --->   Operation 60 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (1.21ns)   --->   "%state_paddle2_y_3 = select i1 %icmp_ln23_1, i5 20, i5 %trunc_ln23_1" [pingpong.cpp:23->pingpong.cpp:79]   --->   Operation 61 'select' 'state_paddle2_y_3' <Predicate = true> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i5 %state_paddle2_y_3" [pingpong.cpp:62]   --->   Operation 62 'zext' 'zext_ln62_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln27 = trunc i32 %state_ball_dx_2" [pingpong.cpp:27->pingpong.cpp:80]   --->   Operation 63 'trunc' 'trunc_ln27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (2.70ns)   --->   "%state_ball_x_4 = add i32 %state_ball_x_cast, i32 %state_ball_dx_2" [pingpong.cpp:27->pingpong.cpp:80]   --->   Operation 64 'add' 'state_ball_x_4' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (2.70ns)   --->   "%state_ball_y_4 = add i32 %state_ball_y_2, i32 %state_ball_dy_2" [pingpong.cpp:28->pingpong.cpp:80]   --->   Operation 65 'add' 'state_ball_y_4' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %state_ball_x_4, i32 1, i32 31" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 66 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (2.66ns)   --->   "%icmp_ln36 = icmp_slt  i31 %tmp_2, i31 1" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 67 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (2.70ns)   --->   "%icmp_ln36_1 = icmp_slt  i32 %state_ball_y_4, i32 %zext_ln62" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 68 'icmp' 'icmp_ln36_1' <Predicate = true> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node and_ln36_1)   --->   "%xor_ln36 = xor i1 %icmp_ln36_1, i1 1" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 69 'xor' 'xor_ln36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (1.86ns)   --->   "%add_ln36 = add i5 %state_paddle1_y_3, i5 4" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 70 'add' 'add_ln36' <Predicate = true> <Delay = 1.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i5 %add_ln36" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 71 'zext' 'zext_ln36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (2.70ns)   --->   "%icmp_ln36_2 = icmp_slt  i32 %state_ball_y_4, i32 %zext_ln36" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 72 'icmp' 'icmp_ln36_2' <Predicate = true> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node and_ln36_1)   --->   "%and_ln36 = and i1 %xor_ln36, i1 %icmp_ln36_2" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 73 'and' 'and_ln36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln36_1 = and i1 %and_ln36, i1 %icmp_ln36" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 74 'and' 'and_ln36_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %and_ln36_1, void %if.else.i, void %while.body.if.end31.i_crit_edge" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 75 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (2.70ns)   --->   "%icmp_ln38 = icmp_sgt  i32 %state_ball_x_4, i32 77" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 76 'icmp' 'icmp_ln38' <Predicate = (!and_ln36_1)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (2.70ns)   --->   "%icmp_ln38_1 = icmp_slt  i32 %state_ball_y_4, i32 %zext_ln62_1" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 77 'icmp' 'icmp_ln38_1' <Predicate = (!and_ln36_1)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node state_ball_dx_4)   --->   "%xor_ln38 = xor i1 %icmp_ln38_1, i1 1" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 78 'xor' 'xor_ln38' <Predicate = (!and_ln36_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (1.86ns)   --->   "%add_ln38 = add i5 %state_paddle2_y_3, i5 4" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 79 'add' 'add_ln38' <Predicate = (!and_ln36_1)> <Delay = 1.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i5 %add_ln38" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 80 'zext' 'zext_ln38' <Predicate = (!and_ln36_1)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (2.70ns)   --->   "%icmp_ln38_2 = icmp_slt  i32 %state_ball_y_4, i32 %zext_ln38" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 81 'icmp' 'icmp_ln38_2' <Predicate = (!and_ln36_1)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node state_ball_dx_4)   --->   "%and_ln38 = and i1 %icmp_ln38_2, i1 %xor_ln38" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 82 'and' 'and_ln38' <Predicate = (!and_ln36_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node state_ball_dx_4)   --->   "%and_ln38_1 = and i1 %and_ln38, i1 %icmp_ln38" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 83 'and' 'and_ln38_1' <Predicate = (!and_ln36_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.97ns) (out node of the LUT)   --->   "%state_ball_dx_4 = select i1 %and_ln38_1, i32 4294967295, i32 %state_ball_dx_2" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 84 'select' 'state_ball_dx_4' <Predicate = (!and_ln36_1)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %state_ball_x_4, i32 31" [pingpong.cpp:43->pingpong.cpp:80]   --->   Operation 85 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %tmp_3, void %if.else38.i, void %if.then34.i" [pingpong.cpp:43->pingpong.cpp:80]   --->   Operation 86 'br' 'br_ln43' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (2.03ns)   --->   "%add_ln62 = add i7 %state_ball_x_2, i7 %trunc_ln27" [pingpong.cpp:62]   --->   Operation 87 'add' 'add_ln62' <Predicate = (!tmp_3)> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%state_score2_load = load i32 %state_score2" [pingpong.cpp:44->pingpong.cpp:80]   --->   Operation 88 'load' 'state_score2_load' <Predicate = (tmp_3)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (2.70ns)   --->   "%state_score2_1 = add i32 %state_score2_load, i32 1" [pingpong.cpp:44->pingpong.cpp:80]   --->   Operation 89 'add' 'state_score2_1' <Predicate = (tmp_3)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (1.61ns)   --->   "%store_ln48 = store i32 %state_score2_1, i32 %state_score2" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 90 'store' 'store_ln48' <Predicate = (tmp_3)> <Delay = 1.61>
ST_3 : Operation 91 [1/1] (1.61ns)   --->   "%store_ln48 = store i32 12, i32 %state_ball_y" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 91 'store' 'store_ln48' <Predicate = (tmp_3)> <Delay = 1.61>
ST_3 : Operation 92 [1/1] (1.61ns)   --->   "%store_ln48 = store i7 40, i7 %state_ball_x" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 92 'store' 'store_ln48' <Predicate = (tmp_3)> <Delay = 1.61>
ST_3 : Operation 93 [1/1] (1.61ns)   --->   "%store_ln72 = store i5 %state_paddle2_y_3, i5 %state_paddle2_y" [pingpong.cpp:72]   --->   Operation 93 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>
ST_3 : Operation 94 [1/1] (1.61ns)   --->   "%store_ln72 = store i5 %state_paddle1_y_3, i5 %state_paddle1_y" [pingpong.cpp:72]   --->   Operation 94 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>

State 4 <SV = 3> <Delay = 5.30>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 95 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%specloopname_ln72 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [pingpong.cpp:72]   --->   Operation 96 'specloopname' 'specloopname_ln72' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (2.70ns)   --->   "%icmp_ln31 = icmp_slt  i32 %state_ball_y_4, i32 1" [pingpong.cpp:31->pingpong.cpp:80]   --->   Operation 97 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (2.70ns)   --->   "%icmp_ln31_1 = icmp_sgt  i32 %state_ball_y_4, i32 22" [pingpong.cpp:31->pingpong.cpp:80]   --->   Operation 98 'icmp' 'icmp_ln31_1' <Predicate = true> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node state_ball_dy_3)   --->   "%or_ln31 = or i1 %icmp_ln31, i1 %icmp_ln31_1" [pingpong.cpp:31->pingpong.cpp:80]   --->   Operation 99 'or' 'or_ln31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 100 [1/1] (2.70ns)   --->   "%sub_ln32 = sub i32 0, i32 %state_ball_dy_2" [pingpong.cpp:32->pingpong.cpp:80]   --->   Operation 100 'sub' 'sub_ln32' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (0.97ns) (out node of the LUT)   --->   "%state_ball_dy_3 = select i1 %or_ln31, i32 %sub_ln32, i32 %state_ball_dy_2" [pingpong.cpp:31->pingpong.cpp:80]   --->   Operation 101 'select' 'state_ball_dy_3' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 102 [1/1] (1.64ns)   --->   "%store_ln38 = store i32 %state_ball_dx_4, i32 %state_ball_dx" [pingpong.cpp:38->pingpong.cpp:80]   --->   Operation 102 'store' 'store_ln38' <Predicate = (!and_ln36_1)> <Delay = 1.64>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end31.i"   --->   Operation 103 'br' 'br_ln0' <Predicate = (!and_ln36_1)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (1.64ns)   --->   "%store_ln36 = store i32 1, i32 %state_ball_dx" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 104 'store' 'store_ln36' <Predicate = (and_ln36_1)> <Delay = 1.64>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln36 = br void %if.end31.i" [pingpong.cpp:36->pingpong.cpp:80]   --->   Operation 105 'br' 'br_ln36' <Predicate = (and_ln36_1)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%state_ball_dx_load = load i32 %state_ball_dx" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 106 'load' 'state_ball_dx_load' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%state_score1_load = load i32 %state_score1" [pingpong.cpp:49->pingpong.cpp:80]   --->   Operation 107 'load' 'state_score1_load' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (2.70ns)   --->   "%icmp_ln48 = icmp_sgt  i32 %state_ball_x_4, i32 79" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 108 'icmp' 'icmp_ln48' <Predicate = (!tmp_3)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (2.70ns)   --->   "%add_ln49 = add i32 %state_score1_load, i32 1" [pingpong.cpp:49->pingpong.cpp:80]   --->   Operation 109 'add' 'add_ln49' <Predicate = (!tmp_3)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (0.79ns)   --->   "%state_score1_1 = select i1 %icmp_ln48, i32 %add_ln49, i32 %state_score1_load" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 110 'select' 'state_score1_1' <Predicate = (!tmp_3)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.79ns)   --->   "%state_ball_dx_5 = select i1 %icmp_ln48, i32 4294967295, i32 %state_ball_dx_load" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 111 'select' 'state_ball_dx_5' <Predicate = (!tmp_3)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 112 [1/1] (0.79ns)   --->   "%state_ball_y_5 = select i1 %icmp_ln48, i32 12, i32 %state_ball_y_4" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 112 'select' 'state_ball_y_5' <Predicate = (!tmp_3)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (0.99ns)   --->   "%state_ball_x_5 = select i1 %icmp_ln48, i7 40, i7 %add_ln62" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 113 'select' 'state_ball_x_5' <Predicate = (!tmp_3)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 114 [1/1] (1.61ns)   --->   "%store_ln48 = store i32 %state_score1_1, i32 %state_score1" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 114 'store' 'store_ln48' <Predicate = (!tmp_3)> <Delay = 1.61>
ST_4 : Operation 115 [1/1] (1.64ns)   --->   "%store_ln48 = store i32 %state_ball_dx_5, i32 %state_ball_dx" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 115 'store' 'store_ln48' <Predicate = (!tmp_3)> <Delay = 1.64>
ST_4 : Operation 116 [1/1] (1.61ns)   --->   "%store_ln48 = store i32 %state_ball_y_5, i32 %state_ball_y" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 116 'store' 'store_ln48' <Predicate = (!tmp_3)> <Delay = 1.61>
ST_4 : Operation 117 [1/1] (1.61ns)   --->   "%store_ln48 = store i7 %state_ball_x_5, i7 %state_ball_x" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 117 'store' 'store_ln48' <Predicate = (!tmp_3)> <Delay = 1.61>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_Z11update_ballR9GameState.exit"   --->   Operation 118 'br' 'br_ln0' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (1.64ns)   --->   "%store_ln48 = store i32 1, i32 %state_ball_dx" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 119 'store' 'store_ln48' <Predicate = (tmp_3)> <Delay = 1.64>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%br_ln48 = br void %_Z11update_ballR9GameState.exit" [pingpong.cpp:48->pingpong.cpp:80]   --->   Operation 120 'br' 'br_ln48' <Predicate = (tmp_3)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (1.61ns)   --->   "%store_ln72 = store i32 %state_ball_dy_3, i32 %state_ball_dy" [pingpong.cpp:72]   --->   Operation 121 'store' 'store_ln72' <Predicate = true> <Delay = 1.61>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "%state_ball_x_6 = load i7 %state_ball_x" [pingpong.cpp:82]   --->   Operation 122 'load' 'state_ball_x_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%state_ball_y_6 = load i32 %state_ball_y" [pingpong.cpp:82]   --->   Operation 123 'load' 'state_ball_y_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%state_ball_dx_6 = load i32 %state_ball_dx" [pingpong.cpp:82]   --->   Operation 124 'load' 'state_ball_dx_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%state_score1_2 = load i32 %state_score1" [pingpong.cpp:82]   --->   Operation 125 'load' 'state_score1_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%state_score2_2 = load i32 %state_score2" [pingpong.cpp:82]   --->   Operation 126 'load' 'state_score2_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%or_ln82_6 = bitconcatenate i256 @_ssdm_op_BitConcatenate.i256.i32.i32.i32.i32.i32.i25.i7.i27.i5.i32, i32 %state_score2_2, i32 %state_score1_2, i32 %state_ball_dy_3, i32 %state_ball_dx_6, i32 %state_ball_y_6, i25 0, i7 %state_ball_x_6, i27 0, i5 %state_paddle2_y_3, i32 %zext_ln62" [pingpong.cpp:82]   --->   Operation 127 'bitconcatenate' 'or_ln82_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 128 [2/2] (0.00ns)   --->   "%write_ln82 = write void @_ssdm_op_Write.axis.volatile.i256P128A, i256 %output_r, i256 %or_ln82_6" [pingpong.cpp:82]   --->   Operation 128 'write' 'write_ln82' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 129 [1/2] (0.00ns)   --->   "%write_ln82 = write void @_ssdm_op_Write.axis.volatile.i256P128A, i256 %output_r, i256 %or_ln82_6" [pingpong.cpp:82]   --->   Operation 129 'write' 'write_ln82' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%br_ln72 = br void %while.body" [pingpong.cpp:72]   --->   Operation 130 'br' 'br_ln72' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.642ns
The critical path consists of the following:
	'alloca' operation ('state.ball_dx') [8]  (0.000 ns)
	'store' operation ('store_ln72', pingpong.cpp:72) of constant 1 on local variable 'state.ball_dx' [23]  (1.642 ns)

 <State 2>: 6.313ns
The critical path consists of the following:
	'load' operation ('state.paddle1_y', pingpong.cpp:21->pingpong.cpp:78) on local variable 'state.paddle1_y' [30]  (0.000 ns)
	'add' operation ('add_ln21', pingpong.cpp:21->pingpong.cpp:78) [45]  (2.702 ns)
	'select' operation ('select_ln22', pingpong.cpp:22->pingpong.cpp:78) [48]  (0.944 ns)
	'icmp' operation ('icmp_ln23', pingpong.cpp:23->pingpong.cpp:78) [50]  (2.667 ns)

 <State 3>: 6.758ns
The critical path consists of the following:
	'select' operation ('state.paddle2_y', pingpong.cpp:23->pingpong.cpp:79) [61]  (1.217 ns)
	'add' operation ('add_ln38', pingpong.cpp:38->pingpong.cpp:80) [85]  (1.861 ns)
	'icmp' operation ('icmp_ln38_2', pingpong.cpp:38->pingpong.cpp:80) [87]  (2.702 ns)
	'and' operation ('and_ln38', pingpong.cpp:38->pingpong.cpp:80) [88]  (0.000 ns)
	'and' operation ('and_ln38_1', pingpong.cpp:38->pingpong.cpp:80) [89]  (0.000 ns)
	'select' operation ('state.ball_dx', pingpong.cpp:38->pingpong.cpp:80) [90]  (0.978 ns)

 <State 4>: 5.302ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln48', pingpong.cpp:48->pingpong.cpp:80) [102]  (2.702 ns)
	'select' operation ('state.ball_x', pingpong.cpp:48->pingpong.cpp:80) [108]  (0.990 ns)
	'store' operation ('store_ln48', pingpong.cpp:48->pingpong.cpp:80) of variable 'state.ball_x', pingpong.cpp:48->pingpong.cpp:80 on local variable 'state.ball_x' [112]  (1.610 ns)

 <State 5>: 0.000ns
The critical path consists of the following:

 <State 6>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
