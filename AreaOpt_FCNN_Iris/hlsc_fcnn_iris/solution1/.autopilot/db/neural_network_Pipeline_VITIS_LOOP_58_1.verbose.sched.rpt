

================================================================
== Vitis HLS Report for 'neural_network_Pipeline_VITIS_LOOP_58_1'
================================================================
* Date:           Sun Sep 15 02:00:22 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        hlsc_fcnn_iris
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.392 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       16|       16|  0.160 us|  0.160 us|   16|   16|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_58_1  |       14|       14|         8|          1|          1|     8|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 1, D = 8, States = { 1 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.38>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 11 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%layer1_output = alloca i32 1"   --->   Operation 12 'alloca' 'layer1_output' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%layer1_output_1 = alloca i32 1"   --->   Operation 13 'alloca' 'layer1_output_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%layer1_output_2 = alloca i32 1"   --->   Operation 14 'alloca' 'layer1_output_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%layer1_output_3 = alloca i32 1"   --->   Operation 15 'alloca' 'layer1_output_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%layer1_output_4 = alloca i32 1"   --->   Operation 16 'alloca' 'layer1_output_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%layer1_output_5 = alloca i32 1"   --->   Operation 17 'alloca' 'layer1_output_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%layer1_output_6 = alloca i32 1"   --->   Operation 18 'alloca' 'layer1_output_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%layer1_output_7 = alloca i32 1"   --->   Operation 19 'alloca' 'layer1_output_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln63_3_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %sext_ln63_3"   --->   Operation 20 'read' 'sext_ln63_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sext_ln63_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %sext_ln63_2"   --->   Operation 21 'read' 'sext_ln63_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sext_ln63_1_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %sext_ln63_1"   --->   Operation 22 'read' 'sext_ln63_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%sext_ln63_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %sext_ln63"   --->   Operation 23 'read' 'sext_ln63_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%sext_ln63_3_cast = sext i16 %sext_ln63_3_read"   --->   Operation 24 'sext' 'sext_ln63_3_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%sext_ln63_2_cast = sext i16 %sext_ln63_2_read"   --->   Operation 25 'sext' 'sext_ln63_2_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%sext_ln63_1_cast = sext i16 %sext_ln63_1_read"   --->   Operation 26 'sext' 'sext_ln63_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln63_cast = sext i16 %sext_ln63_read"   --->   Operation 27 'sext' 'sext_ln63_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.61ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 29 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [nn.cpp:58]   --->   Operation 30 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.77ns)   --->   "%icmp_ln58 = icmp_eq  i4 %i_2, i4 8" [nn.cpp:58]   --->   Operation 31 'icmp' 'icmp_ln58' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.77ns)   --->   "%add_ln58 = add i4 %i_2, i4 1" [nn.cpp:58]   --->   Operation 32 'add' 'add_ln58' <Predicate = true> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln58 = br i1 %icmp_ln58, void %for.body.split, void %VITIS_LOOP_70_3.exitStub" [nn.cpp:58]   --->   Operation 33 'br' 'br_ln58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i4 %i_2" [nn.cpp:58]   --->   Operation 34 'zext' 'zext_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln58 = trunc i4 %i_2" [nn.cpp:58]   --->   Operation 35 'trunc' 'trunc_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%layer1_weights_0_addr = getelementptr i9 %layer1_weights_0, i64 0, i64 %zext_ln58" [nn.cpp:63]   --->   Operation 36 'getelementptr' 'layer1_weights_0_addr' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 37 [2/2] (2.15ns)   --->   "%layer1_weights_0_load = load i3 %layer1_weights_0_addr" [nn.cpp:63]   --->   Operation 37 'load' 'layer1_weights_0_load' <Predicate = (!icmp_ln58)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%layer1_weights_1_addr = getelementptr i9 %layer1_weights_1, i64 0, i64 %zext_ln58" [nn.cpp:63]   --->   Operation 38 'getelementptr' 'layer1_weights_1_addr' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (2.15ns)   --->   "%layer1_weights_1_load = load i3 %layer1_weights_1_addr" [nn.cpp:63]   --->   Operation 39 'load' 'layer1_weights_1_load' <Predicate = (!icmp_ln58)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%layer1_weights_2_addr = getelementptr i9 %layer1_weights_2, i64 0, i64 %zext_ln58" [nn.cpp:63]   --->   Operation 40 'getelementptr' 'layer1_weights_2_addr' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 41 [2/2] (2.15ns)   --->   "%layer1_weights_2_load = load i3 %layer1_weights_2_addr" [nn.cpp:63]   --->   Operation 41 'load' 'layer1_weights_2_load' <Predicate = (!icmp_ln58)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%layer1_weights_3_addr = getelementptr i9 %layer1_weights_3, i64 0, i64 %zext_ln58" [nn.cpp:63]   --->   Operation 42 'getelementptr' 'layer1_weights_3_addr' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 43 [2/2] (2.15ns)   --->   "%layer1_weights_3_load = load i3 %layer1_weights_3_addr" [nn.cpp:63]   --->   Operation 43 'load' 'layer1_weights_3_load' <Predicate = (!icmp_ln58)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%layer1_bias_addr = getelementptr i7 %layer1_bias, i64 0, i64 %zext_ln58" [nn.cpp:65]   --->   Operation 44 'getelementptr' 'layer1_bias_addr' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_1 : Operation 45 [2/2] (2.15ns)   --->   "%layer1_bias_load = load i3 %layer1_bias_addr" [nn.cpp:65]   --->   Operation 45 'load' 'layer1_bias_load' <Predicate = (!icmp_ln58)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 8> <ROM>
ST_1 : Operation 46 [1/1] (1.85ns)   --->   "%switch_ln66 = switch i3 %trunc_ln58, void %arrayidx23.case.7, i3 0, void %for.body.split.arrayidx23.exit_crit_edge9, i3 1, void %arrayidx23.case.1, i3 2, void %arrayidx23.case.2, i3 3, void %arrayidx23.case.3, i3 4, void %arrayidx23.case.4, i3 5, void %arrayidx23.case.5, i3 6, void %for.body.split.arrayidx23.exit_crit_edge" [nn.cpp:66]   --->   Operation 46 'switch' 'switch_ln66' <Predicate = (!icmp_ln58)> <Delay = 1.85>
ST_1 : Operation 47 [1/1] (1.61ns)   --->   "%store_ln58 = store i4 %add_ln58, i4 %i" [nn.cpp:58]   --->   Operation 47 'store' 'store_ln58' <Predicate = (!icmp_ln58)> <Delay = 1.61>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln58 = br void %for.body" [nn.cpp:58]   --->   Operation 48 'br' 'br_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.60>
ST_2 : Operation 49 [1/2] (2.15ns)   --->   "%layer1_weights_0_load = load i3 %layer1_weights_0_addr" [nn.cpp:63]   --->   Operation 49 'load' 'layer1_weights_0_load' <Predicate = true> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_2 : Operation 50 [1/2] (2.15ns)   --->   "%layer1_weights_1_load = load i3 %layer1_weights_1_addr" [nn.cpp:63]   --->   Operation 50 'load' 'layer1_weights_1_load' <Predicate = true> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln63_5 = sext i9 %layer1_weights_1_load" [nn.cpp:63]   --->   Operation 51 'sext' 'sext_ln63_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [3/3] (1.45ns) (grouped into DSP with root node add_ln63)   --->   "%mul_ln63_1 = mul i24 %sext_ln63_5, i24 %sext_ln63_1_cast" [nn.cpp:63]   --->   Operation 52 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 53 [1/2] (2.15ns)   --->   "%layer1_weights_2_load = load i3 %layer1_weights_2_addr" [nn.cpp:63]   --->   Operation 53 'load' 'layer1_weights_2_load' <Predicate = true> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_2 : Operation 54 [1/2] (2.15ns)   --->   "%layer1_weights_3_load = load i3 %layer1_weights_3_addr" [nn.cpp:63]   --->   Operation 54 'load' 'layer1_weights_3_load' <Predicate = true> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 8> <ROM>
ST_2 : Operation 55 [1/2] (2.15ns)   --->   "%layer1_bias_load = load i3 %layer1_bias_addr" [nn.cpp:65]   --->   Operation 55 'load' 'layer1_bias_load' <Predicate = true> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 8> <ROM>

State 3 <SV = 2> <Delay = 5.57>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%sext_ln63_4 = sext i9 %layer1_weights_0_load" [nn.cpp:63]   --->   Operation 56 'sext' 'sext_ln63_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (5.57ns)   --->   "%mul_ln63 = mul i24 %sext_ln63_4, i24 %sext_ln63_cast" [nn.cpp:63]   --->   Operation 57 'mul' 'mul_ln63' <Predicate = true> <Delay = 5.57> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.57> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [2/3] (1.45ns) (grouped into DSP with root node add_ln63)   --->   "%mul_ln63_1 = mul i24 %sext_ln63_5, i24 %sext_ln63_1_cast" [nn.cpp:63]   --->   Operation 58 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i16 @_ssdm_op_PartSelect.i16.i24.i32.i32, i24 %mul_ln63, i32 8, i32 23" [nn.cpp:63]   --->   Operation 59 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln63_6 = sext i9 %layer1_weights_2_load" [nn.cpp:63]   --->   Operation 60 'sext' 'sext_ln63_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [3/3] (1.45ns) (grouped into DSP with root node add_ln63_1)   --->   "%mul_ln63_2 = mul i24 %sext_ln63_6, i24 %sext_ln63_2_cast" [nn.cpp:63]   --->   Operation 61 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.10>
ST_4 : Operation 62 [1/3] (0.00ns) (grouped into DSP with root node add_ln63)   --->   "%mul_ln63_1 = mul i24 %sext_ln63_5, i24 %sext_ln63_1_cast" [nn.cpp:63]   --->   Operation 62 'mul' 'mul_ln63_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i24 @_ssdm_op_BitConcatenate.i24.i16.i8, i16 %tmp_13, i8 0" [nn.cpp:63]   --->   Operation 63 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln63 = add i24 %shl_ln, i24 %mul_ln63_1" [nn.cpp:63]   --->   Operation 64 'add' 'add_ln63' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 65 [2/3] (1.45ns) (grouped into DSP with root node add_ln63_1)   --->   "%mul_ln63_2 = mul i24 %sext_ln63_6, i24 %sext_ln63_2_cast" [nn.cpp:63]   --->   Operation 65 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%sext_ln63_7 = sext i9 %layer1_weights_3_load" [nn.cpp:63]   --->   Operation 66 'sext' 'sext_ln63_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [3/3] (1.45ns) (grouped into DSP with root node add_ln63_2)   --->   "%mul_ln63_3 = mul i24 %sext_ln63_7, i24 %sext_ln63_3_cast" [nn.cpp:63]   --->   Operation 67 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 4.20>
ST_5 : Operation 68 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln63 = add i24 %shl_ln, i24 %mul_ln63_1" [nn.cpp:63]   --->   Operation 68 'add' 'add_ln63' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 69 [1/3] (0.00ns) (grouped into DSP with root node add_ln63_1)   --->   "%mul_ln63_2 = mul i24 %sext_ln63_6, i24 %sext_ln63_2_cast" [nn.cpp:63]   --->   Operation 69 'mul' 'mul_ln63_2' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i16 @_ssdm_op_PartSelect.i16.i24.i32.i32, i24 %add_ln63, i32 8, i32 23" [nn.cpp:63]   --->   Operation 70 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%shl_ln63_1 = bitconcatenate i24 @_ssdm_op_BitConcatenate.i24.i16.i8, i16 %tmp_15, i8 0" [nn.cpp:63]   --->   Operation 71 'bitconcatenate' 'shl_ln63_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln63_1 = add i24 %shl_ln63_1, i24 %mul_ln63_2" [nn.cpp:63]   --->   Operation 72 'add' 'add_ln63_1' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 73 [2/3] (1.45ns) (grouped into DSP with root node add_ln63_2)   --->   "%mul_ln63_3 = mul i24 %sext_ln63_7, i24 %sext_ln63_3_cast" [nn.cpp:63]   --->   Operation 73 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 4.20>
ST_6 : Operation 74 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln63_1 = add i24 %shl_ln63_1, i24 %mul_ln63_2" [nn.cpp:63]   --->   Operation 74 'add' 'add_ln63_1' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 75 [1/3] (0.00ns) (grouped into DSP with root node add_ln63_2)   --->   "%mul_ln63_3 = mul i24 %sext_ln63_7, i24 %sext_ln63_3_cast" [nn.cpp:63]   --->   Operation 75 'mul' 'mul_ln63_3' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_s = partselect i16 @_ssdm_op_PartSelect.i16.i24.i32.i32, i24 %add_ln63_1, i32 8, i32 23" [nn.cpp:63]   --->   Operation 76 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%shl_ln63_2 = bitconcatenate i24 @_ssdm_op_BitConcatenate.i24.i16.i8, i16 %tmp_s, i8 0" [nn.cpp:63]   --->   Operation 77 'bitconcatenate' 'shl_ln63_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln63_2 = add i24 %shl_ln63_2, i24 %mul_ln63_3" [nn.cpp:63]   --->   Operation 78 'add' 'add_ln63_2' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 6.39>
ST_7 : Operation 79 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln63_2 = add i24 %shl_ln63_2, i24 %mul_ln63_3" [nn.cpp:63]   --->   Operation 79 'add' 'add_ln63_2' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%sum = partselect i16 @_ssdm_op_PartSelect.i16.i24.i32.i32, i24 %add_ln63_2, i32 8, i32 23" [nn.cpp:63]   --->   Operation 80 'partselect' 'sum' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i7 %layer1_bias_load" [nn.cpp:65]   --->   Operation 81 'zext' 'zext_ln65' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i15 @_ssdm_op_PartSelect.i15.i24.i32.i32, i24 %add_ln63_2, i32 8, i32 22" [nn.cpp:65]   --->   Operation 82 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln65_1 = zext i7 %layer1_bias_load" [nn.cpp:65]   --->   Operation 83 'zext' 'zext_ln65_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 84 [1/1] (2.14ns)   --->   "%sum_3 = add i16 %zext_ln65, i16 %sum" [nn.cpp:65]   --->   Operation 84 'add' 'sum_3' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 85 [1/1] (2.14ns)   --->   "%add_ln60 = add i15 %zext_ln65_1, i15 %trunc_ln1" [nn.cpp:60]   --->   Operation 85 'add' 'add_ln60' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (2.14ns)   --->   "%icmp_ln14 = icmp_sgt  i16 %sum_3, i16 0" [nn.cpp:14->nn.cpp:66]   --->   Operation 86 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%layer1_output_load = load i16 %layer1_output"   --->   Operation 108 'load' 'layer1_output_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%layer1_output_1_load = load i16 %layer1_output_1"   --->   Operation 109 'load' 'layer1_output_1_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.00ns)   --->   "%layer1_output_2_load = load i16 %layer1_output_2"   --->   Operation 110 'load' 'layer1_output_2_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%layer1_output_3_load = load i16 %layer1_output_3"   --->   Operation 111 'load' 'layer1_output_3_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%layer1_output_4_load = load i16 %layer1_output_4"   --->   Operation 112 'load' 'layer1_output_4_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%layer1_output_5_load = load i16 %layer1_output_5"   --->   Operation 113 'load' 'layer1_output_5_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%layer1_output_6_load = load i16 %layer1_output_6"   --->   Operation 114 'load' 'layer1_output_6_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "%layer1_output_7_load = load i16 %layer1_output_7"   --->   Operation 115 'load' 'layer1_output_7_load' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_7_out, i16 %layer1_output_7_load"   --->   Operation 116 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_6_out, i16 %layer1_output_6_load"   --->   Operation 117 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_5_out, i16 %layer1_output_5_load"   --->   Operation 118 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_4_out, i16 %layer1_output_4_load"   --->   Operation 119 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_3_out, i16 %layer1_output_3_load"   --->   Operation 120 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_2_out, i16 %layer1_output_2_load"   --->   Operation 121 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_1_out, i16 %layer1_output_1_load"   --->   Operation 122 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %layer1_output_out, i16 %layer1_output_load"   --->   Operation 123 'write' 'write_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 124 'ret' 'ret_ln0' <Predicate = (icmp_ln58)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 0.99>
ST_8 : Operation 87 [1/1] (0.00ns)   --->   "%specpipeline_ln59 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_4" [nn.cpp:59]   --->   Operation 87 'specpipeline' 'specpipeline_ln59' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%speclooptripcount_ln51 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [nn.cpp:51]   --->   Operation 88 'speclooptripcount' 'speclooptripcount_ln51' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%specloopname_ln58 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [nn.cpp:58]   --->   Operation 89 'specloopname' 'specloopname_ln58' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.99ns)   --->   "%layer1_output_8 = select i1 %icmp_ln14, i15 %add_ln60, i15 0" [nn.cpp:14->nn.cpp:66]   --->   Operation 90 'select' 'layer1_output_8' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i15 %layer1_output_8" [nn.cpp:66]   --->   Operation 91 'zext' 'zext_ln66' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_6" [nn.cpp:66]   --->   Operation 92 'store' 'store_ln66' <Predicate = (trunc_ln58 == 6)> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 93 'br' 'br_ln66' <Predicate = (trunc_ln58 == 6)> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_5" [nn.cpp:66]   --->   Operation 94 'store' 'store_ln66' <Predicate = (trunc_ln58 == 5)> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 95 'br' 'br_ln66' <Predicate = (trunc_ln58 == 5)> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_4" [nn.cpp:66]   --->   Operation 96 'store' 'store_ln66' <Predicate = (trunc_ln58 == 4)> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 97 'br' 'br_ln66' <Predicate = (trunc_ln58 == 4)> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_3" [nn.cpp:66]   --->   Operation 98 'store' 'store_ln66' <Predicate = (trunc_ln58 == 3)> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 99 'br' 'br_ln66' <Predicate = (trunc_ln58 == 3)> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_2" [nn.cpp:66]   --->   Operation 100 'store' 'store_ln66' <Predicate = (trunc_ln58 == 2)> <Delay = 0.00>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 101 'br' 'br_ln66' <Predicate = (trunc_ln58 == 2)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_1" [nn.cpp:66]   --->   Operation 102 'store' 'store_ln66' <Predicate = (trunc_ln58 == 1)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 103 'br' 'br_ln66' <Predicate = (trunc_ln58 == 1)> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output" [nn.cpp:66]   --->   Operation 104 'store' 'store_ln66' <Predicate = (trunc_ln58 == 0)> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 105 'br' 'br_ln66' <Predicate = (trunc_ln58 == 0)> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%store_ln66 = store i16 %zext_ln66, i16 %layer1_output_7" [nn.cpp:66]   --->   Operation 106 'store' 'store_ln66' <Predicate = (trunc_ln58 == 7)> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln66 = br void %arrayidx23.exit" [nn.cpp:66]   --->   Operation 107 'br' 'br_ln66' <Predicate = (trunc_ln58 == 7)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.387ns
The critical path consists of the following:
	'alloca' operation ('i') [18]  (0.000 ns)
	'load' operation ('i', nn.cpp:58) on local variable 'i' [38]  (0.000 ns)
	'add' operation ('add_ln58', nn.cpp:58) [40]  (1.777 ns)
	'store' operation ('store_ln58', nn.cpp:58) of variable 'add_ln58', nn.cpp:58 on local variable 'i' [110]  (1.610 ns)

 <State 2>: 3.602ns
The critical path consists of the following:
	'load' operation ('layer1_weights_1_load', nn.cpp:63) on array 'layer1_weights_1' [53]  (2.152 ns)
	'mul' operation of DSP[58] ('mul_ln63_1', nn.cpp:63) [55]  (1.450 ns)

 <State 3>: 5.570ns
The critical path consists of the following:
	'mul' operation ('mul_ln63', nn.cpp:63) [51]  (5.570 ns)

 <State 4>: 2.100ns
The critical path consists of the following:
	'mul' operation of DSP[58] ('mul_ln63_1', nn.cpp:63) [55]  (0.000 ns)
	'add' operation of DSP[58] ('add_ln63', nn.cpp:63) [58]  (2.100 ns)

 <State 5>: 4.200ns
The critical path consists of the following:
	'add' operation of DSP[58] ('add_ln63', nn.cpp:63) [58]  (2.100 ns)
	'add' operation of DSP[65] ('add_ln63_1', nn.cpp:63) [65]  (2.100 ns)

 <State 6>: 4.200ns
The critical path consists of the following:
	'add' operation of DSP[65] ('add_ln63_1', nn.cpp:63) [65]  (2.100 ns)
	'add' operation of DSP[72] ('add_ln63_2', nn.cpp:63) [72]  (2.100 ns)

 <State 7>: 6.392ns
The critical path consists of the following:
	'add' operation of DSP[72] ('add_ln63_2', nn.cpp:63) [72]  (2.100 ns)
	'add' operation ('sum', nn.cpp:65) [79]  (2.146 ns)
	'icmp' operation ('icmp_ln14', nn.cpp:14->nn.cpp:66) [81]  (2.146 ns)

 <State 8>: 0.995ns
The critical path consists of the following:
	'select' operation ('layer1_output', nn.cpp:14->nn.cpp:66) [82]  (0.995 ns)
	'store' operation ('store_ln66', nn.cpp:66) of variable 'zext_ln66', nn.cpp:66 on local variable 'layer1_output' [86]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
