// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_56_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln61,
        sext_ln61_1,
        sext_ln61_2,
        sext_ln61_3,
        sext_ln61_4,
        sext_ln61_5,
        sext_ln61_6,
        sext_ln61_7,
        sext_ln61_8,
        sext_ln61_9,
        sext_ln61_10,
        sext_ln61_11,
        sext_ln61_12,
        sext_ln61_13,
        sext_ln61_14,
        sext_ln61_15,
        sext_ln61_16,
        sext_ln61_17,
        sext_ln61_18,
        sext_ln61_19,
        sext_ln61_20,
        sext_ln61_21,
        sext_ln61_22,
        sext_ln61_23,
        sext_ln61_24,
        sext_ln61_25,
        sext_ln61_26,
        sext_ln61_27,
        sext_ln61_28,
        sext_ln61_29,
        sext_ln61_30,
        sext_ln61_31,
        sext_ln61_32,
        sext_ln61_33,
        sext_ln61_34,
        sext_ln61_35,
        sext_ln61_36,
        sext_ln61_37,
        sext_ln61_38,
        sext_ln61_39,
        sext_ln61_40,
        sext_ln61_41,
        sext_ln61_42,
        layer1_output_address0,
        layer1_output_ce0,
        layer1_output_we0,
        layer1_output_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sext_ln61;
input  [15:0] sext_ln61_1;
input  [15:0] sext_ln61_2;
input  [15:0] sext_ln61_3;
input  [15:0] sext_ln61_4;
input  [15:0] sext_ln61_5;
input  [15:0] sext_ln61_6;
input  [15:0] sext_ln61_7;
input  [15:0] sext_ln61_8;
input  [15:0] sext_ln61_9;
input  [15:0] sext_ln61_10;
input  [15:0] sext_ln61_11;
input  [15:0] sext_ln61_12;
input  [15:0] sext_ln61_13;
input  [15:0] sext_ln61_14;
input  [15:0] sext_ln61_15;
input  [15:0] sext_ln61_16;
input  [15:0] sext_ln61_17;
input  [15:0] sext_ln61_18;
input  [15:0] sext_ln61_19;
input  [15:0] sext_ln61_20;
input  [15:0] sext_ln61_21;
input  [15:0] sext_ln61_22;
input  [15:0] sext_ln61_23;
input  [15:0] sext_ln61_24;
input  [15:0] sext_ln61_25;
input  [15:0] sext_ln61_26;
input  [15:0] sext_ln61_27;
input  [15:0] sext_ln61_28;
input  [15:0] sext_ln61_29;
input  [15:0] sext_ln61_30;
input  [15:0] sext_ln61_31;
input  [15:0] sext_ln61_32;
input  [15:0] sext_ln61_33;
input  [15:0] sext_ln61_34;
input  [15:0] sext_ln61_35;
input  [15:0] sext_ln61_36;
input  [15:0] sext_ln61_37;
input  [15:0] sext_ln61_38;
input  [15:0] sext_ln61_39;
input  [15:0] sext_ln61_40;
input  [15:0] sext_ln61_41;
input  [15:0] sext_ln61_42;
output  [5:0] layer1_output_address0;
output   layer1_output_ce0;
output   layer1_output_we0;
output  [14:0] layer1_output_d0;

reg ap_idle;
reg layer1_output_ce0;
reg layer1_output_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln56_fu_1257_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] layer1_weights_0_address0;
reg    layer1_weights_0_ce0;
wire   [10:0] layer1_weights_0_q0;
wire   [5:0] layer1_weights_1_address0;
reg    layer1_weights_1_ce0;
wire  signed [10:0] layer1_weights_1_q0;
wire   [5:0] layer1_weights_2_address0;
reg    layer1_weights_2_ce0;
wire  signed [9:0] layer1_weights_2_q0;
wire   [5:0] layer1_weights_3_address0;
reg    layer1_weights_3_ce0;
wire  signed [13:0] layer1_weights_3_q0;
wire   [5:0] layer1_weights_4_address0;
reg    layer1_weights_4_ce0;
wire  signed [10:0] layer1_weights_4_q0;
wire   [5:0] layer1_weights_5_address0;
reg    layer1_weights_5_ce0;
wire  signed [12:0] layer1_weights_5_q0;
wire   [5:0] layer1_weights_6_address0;
reg    layer1_weights_6_ce0;
wire  signed [13:0] layer1_weights_6_q0;
wire   [5:0] layer1_weights_7_address0;
reg    layer1_weights_7_ce0;
wire  signed [13:0] layer1_weights_7_q0;
wire   [5:0] layer1_weights_8_address0;
reg    layer1_weights_8_ce0;
wire  signed [12:0] layer1_weights_8_q0;
wire   [5:0] layer1_weights_9_address0;
reg    layer1_weights_9_ce0;
wire  signed [13:0] layer1_weights_9_q0;
wire   [5:0] layer1_weights_10_address0;
reg    layer1_weights_10_ce0;
wire  signed [10:0] layer1_weights_10_q0;
wire   [5:0] layer1_weights_11_address0;
reg    layer1_weights_11_ce0;
wire  signed [10:0] layer1_weights_11_q0;
wire   [5:0] layer1_weights_12_address0;
reg    layer1_weights_12_ce0;
wire  signed [11:0] layer1_weights_12_q0;
wire   [5:0] layer1_weights_13_address0;
reg    layer1_weights_13_ce0;
wire  signed [13:0] layer1_weights_13_q0;
wire   [5:0] layer1_weights_14_address0;
reg    layer1_weights_14_ce0;
wire  signed [14:0] layer1_weights_14_q0;
wire   [5:0] layer1_weights_15_address0;
reg    layer1_weights_15_ce0;
wire  signed [14:0] layer1_weights_15_q0;
wire   [5:0] layer1_weights_16_address0;
reg    layer1_weights_16_ce0;
wire  signed [12:0] layer1_weights_16_q0;
wire   [5:0] layer1_weights_17_address0;
reg    layer1_weights_17_ce0;
wire  signed [12:0] layer1_weights_17_q0;
wire   [5:0] layer1_weights_18_address0;
reg    layer1_weights_18_ce0;
wire  signed [12:0] layer1_weights_18_q0;
wire   [5:0] layer1_weights_19_address0;
reg    layer1_weights_19_ce0;
wire  signed [13:0] layer1_weights_19_q0;
wire   [5:0] layer1_weights_20_address0;
reg    layer1_weights_20_ce0;
wire  signed [10:0] layer1_weights_20_q0;
wire   [5:0] layer1_weights_21_address0;
reg    layer1_weights_21_ce0;
wire  signed [12:0] layer1_weights_21_q0;
wire   [5:0] layer1_weights_22_address0;
reg    layer1_weights_22_ce0;
wire  signed [9:0] layer1_weights_22_q0;
wire   [5:0] layer1_weights_23_address0;
reg    layer1_weights_23_ce0;
wire  signed [9:0] layer1_weights_23_q0;
wire   [5:0] layer1_weights_24_address0;
reg    layer1_weights_24_ce0;
wire  signed [13:0] layer1_weights_24_q0;
wire   [5:0] layer1_weights_25_address0;
reg    layer1_weights_25_ce0;
wire  signed [11:0] layer1_weights_25_q0;
wire   [5:0] layer1_weights_26_address0;
reg    layer1_weights_26_ce0;
wire  signed [10:0] layer1_weights_26_q0;
wire   [5:0] layer1_weights_27_address0;
reg    layer1_weights_27_ce0;
wire  signed [12:0] layer1_weights_27_q0;
wire   [5:0] layer1_weights_28_address0;
reg    layer1_weights_28_ce0;
wire  signed [11:0] layer1_weights_28_q0;
wire   [5:0] layer1_weights_29_address0;
reg    layer1_weights_29_ce0;
wire  signed [13:0] layer1_weights_29_q0;
wire   [5:0] layer1_weights_30_address0;
reg    layer1_weights_30_ce0;
wire  signed [13:0] layer1_weights_30_q0;
wire   [5:0] layer1_weights_31_address0;
reg    layer1_weights_31_ce0;
wire  signed [11:0] layer1_weights_31_q0;
wire   [5:0] layer1_weights_32_address0;
reg    layer1_weights_32_ce0;
wire  signed [10:0] layer1_weights_32_q0;
wire   [5:0] layer1_weights_33_address0;
reg    layer1_weights_33_ce0;
wire  signed [9:0] layer1_weights_33_q0;
wire   [5:0] layer1_weights_34_address0;
reg    layer1_weights_34_ce0;
wire  signed [11:0] layer1_weights_34_q0;
wire   [5:0] layer1_weights_35_address0;
reg    layer1_weights_35_ce0;
wire  signed [12:0] layer1_weights_35_q0;
wire   [5:0] layer1_weights_36_address0;
reg    layer1_weights_36_ce0;
wire  signed [13:0] layer1_weights_36_q0;
wire   [5:0] layer1_weights_37_address0;
reg    layer1_weights_37_ce0;
wire  signed [12:0] layer1_weights_37_q0;
wire   [5:0] layer1_weights_38_address0;
reg    layer1_weights_38_ce0;
wire  signed [13:0] layer1_weights_38_q0;
wire   [5:0] layer1_weights_39_address0;
reg    layer1_weights_39_ce0;
wire  signed [12:0] layer1_weights_39_q0;
wire   [5:0] layer1_weights_40_address0;
reg    layer1_weights_40_ce0;
wire  signed [11:0] layer1_weights_40_q0;
wire   [5:0] layer1_weights_41_address0;
reg    layer1_weights_41_ce0;
wire  signed [12:0] layer1_weights_41_q0;
wire   [5:0] layer1_weights_42_address0;
reg    layer1_weights_42_ce0;
wire  signed [12:0] layer1_weights_42_q0;
wire   [5:0] layer1_bias_address0;
reg    layer1_bias_ce0;
wire   [10:0] layer1_bias_q0;
wire  signed [23:0] sext_ln61_42_cast_fu_1077_p1;
reg  signed [23:0] sext_ln61_42_cast_reg_2565;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln61_41_cast_fu_1081_p1;
reg  signed [23:0] sext_ln61_41_cast_reg_2570;
wire  signed [23:0] sext_ln61_40_cast_fu_1085_p1;
reg  signed [23:0] sext_ln61_40_cast_reg_2575;
wire  signed [23:0] sext_ln61_39_cast_fu_1089_p1;
reg  signed [23:0] sext_ln61_39_cast_reg_2580;
wire  signed [23:0] sext_ln61_38_cast_fu_1093_p1;
reg  signed [23:0] sext_ln61_38_cast_reg_2585;
wire  signed [23:0] sext_ln61_37_cast_fu_1097_p1;
reg  signed [23:0] sext_ln61_37_cast_reg_2590;
wire  signed [23:0] sext_ln61_36_cast_fu_1101_p1;
reg  signed [23:0] sext_ln61_36_cast_reg_2595;
wire  signed [23:0] sext_ln61_35_cast_fu_1105_p1;
reg  signed [23:0] sext_ln61_35_cast_reg_2600;
wire  signed [23:0] sext_ln61_34_cast_fu_1109_p1;
reg  signed [23:0] sext_ln61_34_cast_reg_2605;
wire  signed [23:0] sext_ln61_33_cast_fu_1113_p1;
reg  signed [23:0] sext_ln61_33_cast_reg_2610;
wire  signed [23:0] sext_ln61_32_cast_fu_1117_p1;
reg  signed [23:0] sext_ln61_32_cast_reg_2615;
wire  signed [23:0] sext_ln61_31_cast_fu_1121_p1;
reg  signed [23:0] sext_ln61_31_cast_reg_2620;
wire  signed [23:0] sext_ln61_30_cast_fu_1125_p1;
reg  signed [23:0] sext_ln61_30_cast_reg_2625;
wire  signed [23:0] sext_ln61_29_cast_fu_1129_p1;
reg  signed [23:0] sext_ln61_29_cast_reg_2630;
wire  signed [23:0] sext_ln61_28_cast_fu_1133_p1;
reg  signed [23:0] sext_ln61_28_cast_reg_2635;
wire  signed [23:0] sext_ln61_27_cast_fu_1137_p1;
reg  signed [23:0] sext_ln61_27_cast_reg_2640;
wire  signed [23:0] sext_ln61_26_cast_fu_1141_p1;
reg  signed [23:0] sext_ln61_26_cast_reg_2645;
wire  signed [23:0] sext_ln61_25_cast_fu_1145_p1;
reg  signed [23:0] sext_ln61_25_cast_reg_2650;
wire  signed [23:0] sext_ln61_24_cast_fu_1149_p1;
reg  signed [23:0] sext_ln61_24_cast_reg_2655;
wire  signed [23:0] sext_ln61_23_cast_fu_1153_p1;
reg  signed [23:0] sext_ln61_23_cast_reg_2660;
wire  signed [23:0] sext_ln61_22_cast_fu_1157_p1;
reg  signed [23:0] sext_ln61_22_cast_reg_2665;
wire  signed [23:0] sext_ln61_21_cast_fu_1161_p1;
reg  signed [23:0] sext_ln61_21_cast_reg_2670;
wire  signed [23:0] sext_ln61_20_cast_fu_1165_p1;
reg  signed [23:0] sext_ln61_20_cast_reg_2675;
wire  signed [23:0] sext_ln61_19_cast_fu_1169_p1;
reg  signed [23:0] sext_ln61_19_cast_reg_2680;
wire  signed [23:0] sext_ln61_18_cast_fu_1173_p1;
reg  signed [23:0] sext_ln61_18_cast_reg_2685;
wire  signed [23:0] sext_ln61_17_cast_fu_1177_p1;
reg  signed [23:0] sext_ln61_17_cast_reg_2690;
wire  signed [23:0] sext_ln61_16_cast_fu_1181_p1;
reg  signed [23:0] sext_ln61_16_cast_reg_2695;
wire  signed [23:0] sext_ln61_15_cast_fu_1185_p1;
reg  signed [23:0] sext_ln61_15_cast_reg_2700;
wire  signed [23:0] sext_ln61_14_cast_fu_1189_p1;
reg  signed [23:0] sext_ln61_14_cast_reg_2705;
wire  signed [23:0] sext_ln61_13_cast_fu_1193_p1;
reg  signed [23:0] sext_ln61_13_cast_reg_2710;
wire  signed [23:0] sext_ln61_12_cast_fu_1197_p1;
reg  signed [23:0] sext_ln61_12_cast_reg_2715;
wire  signed [23:0] sext_ln61_11_cast_fu_1201_p1;
reg  signed [23:0] sext_ln61_11_cast_reg_2720;
wire  signed [23:0] sext_ln61_10_cast_fu_1205_p1;
reg  signed [23:0] sext_ln61_10_cast_reg_2725;
wire  signed [23:0] sext_ln61_9_cast_fu_1209_p1;
reg  signed [23:0] sext_ln61_9_cast_reg_2730;
wire  signed [23:0] sext_ln61_8_cast_fu_1213_p1;
reg  signed [23:0] sext_ln61_8_cast_reg_2735;
wire  signed [23:0] sext_ln61_7_cast_fu_1217_p1;
reg  signed [23:0] sext_ln61_7_cast_reg_2740;
wire  signed [23:0] sext_ln61_6_cast_fu_1221_p1;
reg  signed [23:0] sext_ln61_6_cast_reg_2745;
wire  signed [23:0] sext_ln61_5_cast_fu_1225_p1;
reg  signed [23:0] sext_ln61_5_cast_reg_2750;
wire  signed [23:0] sext_ln61_4_cast_fu_1229_p1;
reg  signed [23:0] sext_ln61_4_cast_reg_2755;
wire  signed [23:0] sext_ln61_3_cast_fu_1233_p1;
reg  signed [23:0] sext_ln61_3_cast_reg_2760;
wire  signed [23:0] sext_ln61_2_cast_fu_1237_p1;
reg  signed [23:0] sext_ln61_2_cast_reg_2765;
wire  signed [23:0] sext_ln61_1_cast_fu_1241_p1;
reg  signed [23:0] sext_ln61_1_cast_reg_2770;
wire  signed [23:0] sext_ln61_cast_fu_1245_p1;
reg  signed [23:0] sext_ln61_cast_reg_2775;
wire   [63:0] zext_ln56_fu_1269_p1;
reg   [63:0] zext_ln56_reg_2784;
reg   [63:0] zext_ln56_reg_2784_pp0_iter1_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter2_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter3_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter4_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter5_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter6_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter7_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter8_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter9_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter10_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter11_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter12_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter13_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter14_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter15_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter16_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter17_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter18_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter19_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter20_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter21_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter22_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter23_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter24_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter25_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter26_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter27_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter28_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter29_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter30_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter31_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter32_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter33_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter34_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter35_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter36_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter37_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter38_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter39_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter40_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter41_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter42_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter43_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter44_reg;
reg   [63:0] zext_ln56_reg_2784_pp0_iter45_reg;
reg  signed [10:0] layer1_weights_0_load_reg_2841;
reg   [15:0] tmp_3_reg_2856;
wire   [15:0] sum_3_fu_2196_p2;
reg   [15:0] sum_3_reg_3481;
wire   [14:0] add_ln58_fu_2202_p2;
reg   [14:0] add_ln58_reg_3486;
wire    ap_block_pp0_stage0;
reg   [6:0] i_fu_230;
wire   [6:0] add_ln56_fu_1263_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_2;
wire  signed [15:0] mul_ln61_fu_1287_p1;
wire   [23:0] mul_ln61_fu_1287_p2;
wire  signed [23:0] tmp_4_fu_1317_p1;
wire   [23:0] grp_fu_2221_p3;
wire   [15:0] tmp_4_fu_1317_p4;
wire  signed [23:0] tmp_5_fu_1338_p1;
wire   [23:0] grp_fu_2229_p3;
wire   [15:0] tmp_5_fu_1338_p4;
wire  signed [23:0] tmp_6_fu_1359_p1;
wire   [23:0] grp_fu_2237_p3;
wire   [15:0] tmp_6_fu_1359_p4;
wire  signed [23:0] tmp_7_fu_1380_p1;
wire   [23:0] grp_fu_2245_p3;
wire   [15:0] tmp_7_fu_1380_p4;
wire  signed [23:0] tmp_8_fu_1401_p1;
wire   [23:0] grp_fu_2253_p3;
wire   [15:0] tmp_8_fu_1401_p4;
wire  signed [23:0] tmp_9_fu_1422_p1;
wire   [23:0] grp_fu_2261_p3;
wire   [15:0] tmp_9_fu_1422_p4;
wire  signed [23:0] tmp_10_fu_1443_p1;
wire   [23:0] grp_fu_2269_p3;
wire   [15:0] tmp_10_fu_1443_p4;
wire  signed [23:0] tmp_11_fu_1464_p1;
wire   [23:0] grp_fu_2277_p3;
wire   [15:0] tmp_11_fu_1464_p4;
wire  signed [23:0] tmp_12_fu_1485_p1;
wire   [23:0] grp_fu_2285_p3;
wire   [15:0] tmp_12_fu_1485_p4;
wire  signed [23:0] tmp_13_fu_1506_p1;
wire   [23:0] grp_fu_2293_p3;
wire   [15:0] tmp_13_fu_1506_p4;
wire  signed [23:0] tmp_14_fu_1527_p1;
wire   [23:0] grp_fu_2301_p3;
wire   [15:0] tmp_14_fu_1527_p4;
wire  signed [23:0] tmp_15_fu_1548_p1;
wire   [23:0] grp_fu_2309_p3;
wire   [15:0] tmp_15_fu_1548_p4;
wire  signed [23:0] tmp_16_fu_1569_p1;
wire   [23:0] grp_fu_2317_p3;
wire   [15:0] tmp_16_fu_1569_p4;
wire  signed [23:0] tmp_17_fu_1590_p1;
wire   [23:0] grp_fu_2325_p3;
wire   [15:0] tmp_17_fu_1590_p4;
wire  signed [23:0] tmp_18_fu_1611_p1;
wire   [23:0] grp_fu_2333_p3;
wire   [15:0] tmp_18_fu_1611_p4;
wire  signed [23:0] tmp_19_fu_1632_p1;
wire   [23:0] grp_fu_2341_p3;
wire   [15:0] tmp_19_fu_1632_p4;
wire  signed [23:0] tmp_20_fu_1653_p1;
wire   [23:0] grp_fu_2349_p3;
wire   [15:0] tmp_20_fu_1653_p4;
wire  signed [23:0] tmp_21_fu_1674_p1;
wire   [23:0] grp_fu_2357_p3;
wire   [15:0] tmp_21_fu_1674_p4;
wire  signed [23:0] tmp_22_fu_1695_p1;
wire   [23:0] grp_fu_2365_p3;
wire   [15:0] tmp_22_fu_1695_p4;
wire  signed [23:0] tmp_23_fu_1716_p1;
wire   [23:0] grp_fu_2373_p3;
wire   [15:0] tmp_23_fu_1716_p4;
wire  signed [23:0] tmp_24_fu_1737_p1;
wire   [23:0] grp_fu_2381_p3;
wire   [15:0] tmp_24_fu_1737_p4;
wire  signed [23:0] tmp_25_fu_1758_p1;
wire   [23:0] grp_fu_2389_p3;
wire   [15:0] tmp_25_fu_1758_p4;
wire  signed [23:0] tmp_26_fu_1779_p1;
wire   [23:0] grp_fu_2397_p3;
wire   [15:0] tmp_26_fu_1779_p4;
wire  signed [23:0] tmp_27_fu_1800_p1;
wire   [23:0] grp_fu_2405_p3;
wire   [15:0] tmp_27_fu_1800_p4;
wire  signed [23:0] tmp_28_fu_1821_p1;
wire   [23:0] grp_fu_2413_p3;
wire   [15:0] tmp_28_fu_1821_p4;
wire  signed [23:0] tmp_29_fu_1842_p1;
wire   [23:0] grp_fu_2421_p3;
wire   [15:0] tmp_29_fu_1842_p4;
wire  signed [23:0] tmp_30_fu_1863_p1;
wire   [23:0] grp_fu_2429_p3;
wire   [15:0] tmp_30_fu_1863_p4;
wire  signed [23:0] tmp_31_fu_1884_p1;
wire   [23:0] grp_fu_2437_p3;
wire   [15:0] tmp_31_fu_1884_p4;
wire  signed [23:0] tmp_32_fu_1905_p1;
wire   [23:0] grp_fu_2445_p3;
wire   [15:0] tmp_32_fu_1905_p4;
wire  signed [23:0] tmp_33_fu_1926_p1;
wire   [23:0] grp_fu_2453_p3;
wire   [15:0] tmp_33_fu_1926_p4;
wire  signed [23:0] tmp_34_fu_1947_p1;
wire   [23:0] grp_fu_2461_p3;
wire   [15:0] tmp_34_fu_1947_p4;
wire  signed [23:0] tmp_35_fu_1968_p1;
wire   [23:0] grp_fu_2469_p3;
wire   [15:0] tmp_35_fu_1968_p4;
wire  signed [23:0] tmp_36_fu_1989_p1;
wire   [23:0] grp_fu_2477_p3;
wire   [15:0] tmp_36_fu_1989_p4;
wire  signed [23:0] tmp_37_fu_2010_p1;
wire   [23:0] grp_fu_2485_p3;
wire   [15:0] tmp_37_fu_2010_p4;
wire  signed [23:0] tmp_38_fu_2031_p1;
wire   [23:0] grp_fu_2493_p3;
wire   [15:0] tmp_38_fu_2031_p4;
wire  signed [23:0] tmp_39_fu_2052_p1;
wire   [23:0] grp_fu_2501_p3;
wire   [15:0] tmp_39_fu_2052_p4;
wire  signed [23:0] tmp_40_fu_2073_p1;
wire   [23:0] grp_fu_2509_p3;
wire   [15:0] tmp_40_fu_2073_p4;
wire  signed [23:0] tmp_41_fu_2094_p1;
wire   [23:0] grp_fu_2517_p3;
wire   [15:0] tmp_41_fu_2094_p4;
wire  signed [23:0] tmp_42_fu_2115_p1;
wire   [23:0] grp_fu_2525_p3;
wire   [15:0] tmp_42_fu_2115_p4;
wire  signed [23:0] tmp_43_fu_2136_p1;
wire   [23:0] grp_fu_2533_p3;
wire   [15:0] tmp_43_fu_2136_p4;
wire  signed [23:0] tmp_44_fu_2153_p1;
wire   [23:0] grp_fu_2541_p3;
wire   [15:0] tmp_44_fu_2153_p4;
wire  signed [23:0] sum_fu_2170_p1;
wire   [23:0] grp_fu_2549_p3;
wire  signed [10:0] sext_ln63_fu_2179_p0;
wire  signed [23:0] trunc_ln_fu_2183_p1;
wire  signed [10:0] sext_ln63_1_fu_2192_p0;
wire  signed [15:0] sext_ln63_fu_2179_p1;
wire   [15:0] sum_fu_2170_p4;
wire  signed [14:0] sext_ln63_1_fu_2192_p1;
wire   [14:0] trunc_ln_fu_2183_p4;
wire   [0:0] icmp_ln14_fu_2208_p2;
wire  signed [15:0] grp_fu_2221_p1;
wire   [23:0] grp_fu_2221_p2;
wire  signed [15:0] grp_fu_2229_p1;
wire   [23:0] grp_fu_2229_p2;
wire  signed [15:0] grp_fu_2237_p1;
wire   [23:0] grp_fu_2237_p2;
wire  signed [15:0] grp_fu_2245_p1;
wire   [23:0] grp_fu_2245_p2;
wire  signed [15:0] grp_fu_2253_p1;
wire   [23:0] grp_fu_2253_p2;
wire  signed [15:0] grp_fu_2261_p1;
wire   [23:0] grp_fu_2261_p2;
wire  signed [15:0] grp_fu_2269_p1;
wire   [23:0] grp_fu_2269_p2;
wire  signed [15:0] grp_fu_2277_p1;
wire   [23:0] grp_fu_2277_p2;
wire  signed [15:0] grp_fu_2285_p1;
wire   [23:0] grp_fu_2285_p2;
wire  signed [15:0] grp_fu_2293_p1;
wire   [23:0] grp_fu_2293_p2;
wire  signed [15:0] grp_fu_2301_p1;
wire   [23:0] grp_fu_2301_p2;
wire  signed [15:0] grp_fu_2309_p1;
wire   [23:0] grp_fu_2309_p2;
wire  signed [15:0] grp_fu_2317_p1;
wire   [23:0] grp_fu_2317_p2;
wire  signed [15:0] grp_fu_2325_p1;
wire   [23:0] grp_fu_2325_p2;
wire  signed [15:0] grp_fu_2333_p1;
wire   [23:0] grp_fu_2333_p2;
wire  signed [15:0] grp_fu_2341_p1;
wire   [23:0] grp_fu_2341_p2;
wire  signed [15:0] grp_fu_2349_p1;
wire   [23:0] grp_fu_2349_p2;
wire  signed [15:0] grp_fu_2357_p1;
wire   [23:0] grp_fu_2357_p2;
wire  signed [15:0] grp_fu_2365_p1;
wire   [23:0] grp_fu_2365_p2;
wire  signed [15:0] grp_fu_2373_p1;
wire   [23:0] grp_fu_2373_p2;
wire  signed [15:0] grp_fu_2381_p1;
wire   [23:0] grp_fu_2381_p2;
wire  signed [15:0] grp_fu_2389_p1;
wire   [23:0] grp_fu_2389_p2;
wire  signed [15:0] grp_fu_2397_p1;
wire   [23:0] grp_fu_2397_p2;
wire  signed [15:0] grp_fu_2405_p1;
wire   [23:0] grp_fu_2405_p2;
wire  signed [15:0] grp_fu_2413_p1;
wire   [23:0] grp_fu_2413_p2;
wire  signed [15:0] grp_fu_2421_p1;
wire   [23:0] grp_fu_2421_p2;
wire  signed [15:0] grp_fu_2429_p1;
wire   [23:0] grp_fu_2429_p2;
wire  signed [15:0] grp_fu_2437_p1;
wire   [23:0] grp_fu_2437_p2;
wire  signed [15:0] grp_fu_2445_p1;
wire   [23:0] grp_fu_2445_p2;
wire  signed [15:0] grp_fu_2453_p1;
wire   [23:0] grp_fu_2453_p2;
wire  signed [15:0] grp_fu_2461_p1;
wire   [23:0] grp_fu_2461_p2;
wire  signed [15:0] grp_fu_2469_p1;
wire   [23:0] grp_fu_2469_p2;
wire  signed [15:0] grp_fu_2477_p1;
wire   [23:0] grp_fu_2477_p2;
wire  signed [15:0] grp_fu_2485_p1;
wire   [23:0] grp_fu_2485_p2;
wire  signed [15:0] grp_fu_2493_p1;
wire   [23:0] grp_fu_2493_p2;
wire  signed [15:0] grp_fu_2501_p1;
wire   [23:0] grp_fu_2501_p2;
wire  signed [15:0] grp_fu_2509_p1;
wire   [23:0] grp_fu_2509_p2;
wire  signed [15:0] grp_fu_2517_p1;
wire   [23:0] grp_fu_2517_p2;
wire  signed [15:0] grp_fu_2525_p1;
wire   [23:0] grp_fu_2525_p2;
wire  signed [15:0] grp_fu_2533_p1;
wire   [23:0] grp_fu_2533_p2;
wire  signed [15:0] grp_fu_2541_p1;
wire   [23:0] grp_fu_2541_p2;
wire  signed [15:0] grp_fu_2549_p1;
wire   [23:0] grp_fu_2549_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_0_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_0_address0),
    .ce0(layer1_weights_0_ce0),
    .q0(layer1_weights_0_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_1_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_1_address0),
    .ce0(layer1_weights_1_ce0),
    .q0(layer1_weights_1_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_2_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_2_address0),
    .ce0(layer1_weights_2_ce0),
    .q0(layer1_weights_2_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_3_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_3_address0),
    .ce0(layer1_weights_3_ce0),
    .q0(layer1_weights_3_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_4_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_4_address0),
    .ce0(layer1_weights_4_ce0),
    .q0(layer1_weights_4_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_5_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_5_address0),
    .ce0(layer1_weights_5_ce0),
    .q0(layer1_weights_5_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_6_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_6_address0),
    .ce0(layer1_weights_6_ce0),
    .q0(layer1_weights_6_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_7_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_7_address0),
    .ce0(layer1_weights_7_ce0),
    .q0(layer1_weights_7_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_8_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_8_address0),
    .ce0(layer1_weights_8_ce0),
    .q0(layer1_weights_8_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_9_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_9_address0),
    .ce0(layer1_weights_9_ce0),
    .q0(layer1_weights_9_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_10_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_10_address0),
    .ce0(layer1_weights_10_ce0),
    .q0(layer1_weights_10_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_11_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_11_address0),
    .ce0(layer1_weights_11_ce0),
    .q0(layer1_weights_11_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_12_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_12_address0),
    .ce0(layer1_weights_12_ce0),
    .q0(layer1_weights_12_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_13_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_13_address0),
    .ce0(layer1_weights_13_ce0),
    .q0(layer1_weights_13_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_14_RAM_2P_BRAM_1R1W #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_14_address0),
    .ce0(layer1_weights_14_ce0),
    .q0(layer1_weights_14_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_15_RAM_2P_BRAM_1R1W #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_15_address0),
    .ce0(layer1_weights_15_ce0),
    .q0(layer1_weights_15_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_16_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_16_address0),
    .ce0(layer1_weights_16_ce0),
    .q0(layer1_weights_16_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_17_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_17_address0),
    .ce0(layer1_weights_17_ce0),
    .q0(layer1_weights_17_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_18_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_18_address0),
    .ce0(layer1_weights_18_ce0),
    .q0(layer1_weights_18_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_19_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_19_address0),
    .ce0(layer1_weights_19_ce0),
    .q0(layer1_weights_19_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_20_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_20_address0),
    .ce0(layer1_weights_20_ce0),
    .q0(layer1_weights_20_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_21_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_21_address0),
    .ce0(layer1_weights_21_ce0),
    .q0(layer1_weights_21_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_22_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_22_address0),
    .ce0(layer1_weights_22_ce0),
    .q0(layer1_weights_22_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_23_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_23_address0),
    .ce0(layer1_weights_23_ce0),
    .q0(layer1_weights_23_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_24_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_24_address0),
    .ce0(layer1_weights_24_ce0),
    .q0(layer1_weights_24_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_25_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_25_address0),
    .ce0(layer1_weights_25_ce0),
    .q0(layer1_weights_25_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_26_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_26_address0),
    .ce0(layer1_weights_26_ce0),
    .q0(layer1_weights_26_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_27_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_27_address0),
    .ce0(layer1_weights_27_ce0),
    .q0(layer1_weights_27_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_28_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_28_address0),
    .ce0(layer1_weights_28_ce0),
    .q0(layer1_weights_28_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_29_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_29_address0),
    .ce0(layer1_weights_29_ce0),
    .q0(layer1_weights_29_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_30_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_30_address0),
    .ce0(layer1_weights_30_ce0),
    .q0(layer1_weights_30_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_31_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_31_address0),
    .ce0(layer1_weights_31_ce0),
    .q0(layer1_weights_31_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_32_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_32_address0),
    .ce0(layer1_weights_32_ce0),
    .q0(layer1_weights_32_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_33_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_33_address0),
    .ce0(layer1_weights_33_ce0),
    .q0(layer1_weights_33_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_34_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_34_address0),
    .ce0(layer1_weights_34_ce0),
    .q0(layer1_weights_34_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_35_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_35_address0),
    .ce0(layer1_weights_35_ce0),
    .q0(layer1_weights_35_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_36_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_36_address0),
    .ce0(layer1_weights_36_ce0),
    .q0(layer1_weights_36_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_37_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_37_address0),
    .ce0(layer1_weights_37_ce0),
    .q0(layer1_weights_37_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_38_RAM_2P_BRAM_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_38_address0),
    .ce0(layer1_weights_38_ce0),
    .q0(layer1_weights_38_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_39_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_39_address0),
    .ce0(layer1_weights_39_ce0),
    .q0(layer1_weights_39_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_40_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_40_address0),
    .ce0(layer1_weights_40_ce0),
    .q0(layer1_weights_40_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_41_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_41_address0),
    .ce0(layer1_weights_41_ce0),
    .q0(layer1_weights_41_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_weights_42_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_42_address0),
    .ce0(layer1_weights_42_ce0),
    .q0(layer1_weights_42_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_56_1_layer1_bias_RAM_1P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_bias_address0),
    .ce0(layer1_bias_ce0),
    .q0(layer1_bias_q0)
);

neural_network_mul_11s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_11s_16s_24_1_1_U1(
    .din0(layer1_weights_0_load_reg_2841),
    .din1(mul_ln61_fu_1287_p1),
    .dout(mul_ln61_fu_1287_p2)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_1_q0),
    .din1(grp_fu_2221_p1),
    .din2(grp_fu_2221_p2),
    .ce(1'b1),
    .dout(grp_fu_2221_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_2_q0),
    .din1(grp_fu_2229_p1),
    .din2(grp_fu_2229_p2),
    .ce(1'b1),
    .dout(grp_fu_2229_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_3_q0),
    .din1(grp_fu_2237_p1),
    .din2(grp_fu_2237_p2),
    .ce(1'b1),
    .dout(grp_fu_2237_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_4_q0),
    .din1(grp_fu_2245_p1),
    .din2(grp_fu_2245_p2),
    .ce(1'b1),
    .dout(grp_fu_2245_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_5_q0),
    .din1(grp_fu_2253_p1),
    .din2(grp_fu_2253_p2),
    .ce(1'b1),
    .dout(grp_fu_2253_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_6_q0),
    .din1(grp_fu_2261_p1),
    .din2(grp_fu_2261_p2),
    .ce(1'b1),
    .dout(grp_fu_2261_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_7_q0),
    .din1(grp_fu_2269_p1),
    .din2(grp_fu_2269_p2),
    .ce(1'b1),
    .dout(grp_fu_2269_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_8_q0),
    .din1(grp_fu_2277_p1),
    .din2(grp_fu_2277_p2),
    .ce(1'b1),
    .dout(grp_fu_2277_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_9_q0),
    .din1(grp_fu_2285_p1),
    .din2(grp_fu_2285_p2),
    .ce(1'b1),
    .dout(grp_fu_2285_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_10_q0),
    .din1(grp_fu_2293_p1),
    .din2(grp_fu_2293_p2),
    .ce(1'b1),
    .dout(grp_fu_2293_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_11_q0),
    .din1(grp_fu_2301_p1),
    .din2(grp_fu_2301_p2),
    .ce(1'b1),
    .dout(grp_fu_2301_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_12_q0),
    .din1(grp_fu_2309_p1),
    .din2(grp_fu_2309_p2),
    .ce(1'b1),
    .dout(grp_fu_2309_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_13_q0),
    .din1(grp_fu_2317_p1),
    .din2(grp_fu_2317_p2),
    .ce(1'b1),
    .dout(grp_fu_2317_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_14_q0),
    .din1(grp_fu_2325_p1),
    .din2(grp_fu_2325_p2),
    .ce(1'b1),
    .dout(grp_fu_2325_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_15_q0),
    .din1(grp_fu_2333_p1),
    .din2(grp_fu_2333_p2),
    .ce(1'b1),
    .dout(grp_fu_2333_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_16_q0),
    .din1(grp_fu_2341_p1),
    .din2(grp_fu_2341_p2),
    .ce(1'b1),
    .dout(grp_fu_2341_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_17_q0),
    .din1(grp_fu_2349_p1),
    .din2(grp_fu_2349_p2),
    .ce(1'b1),
    .dout(grp_fu_2349_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_18_q0),
    .din1(grp_fu_2357_p1),
    .din2(grp_fu_2357_p2),
    .ce(1'b1),
    .dout(grp_fu_2357_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_19_q0),
    .din1(grp_fu_2365_p1),
    .din2(grp_fu_2365_p2),
    .ce(1'b1),
    .dout(grp_fu_2365_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_20_q0),
    .din1(grp_fu_2373_p1),
    .din2(grp_fu_2373_p2),
    .ce(1'b1),
    .dout(grp_fu_2373_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_21_q0),
    .din1(grp_fu_2381_p1),
    .din2(grp_fu_2381_p2),
    .ce(1'b1),
    .dout(grp_fu_2381_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_22_q0),
    .din1(grp_fu_2389_p1),
    .din2(grp_fu_2389_p2),
    .ce(1'b1),
    .dout(grp_fu_2389_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_23_q0),
    .din1(grp_fu_2397_p1),
    .din2(grp_fu_2397_p2),
    .ce(1'b1),
    .dout(grp_fu_2397_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_24_q0),
    .din1(grp_fu_2405_p1),
    .din2(grp_fu_2405_p2),
    .ce(1'b1),
    .dout(grp_fu_2405_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_25_q0),
    .din1(grp_fu_2413_p1),
    .din2(grp_fu_2413_p2),
    .ce(1'b1),
    .dout(grp_fu_2413_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_26_q0),
    .din1(grp_fu_2421_p1),
    .din2(grp_fu_2421_p2),
    .ce(1'b1),
    .dout(grp_fu_2421_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_27_q0),
    .din1(grp_fu_2429_p1),
    .din2(grp_fu_2429_p2),
    .ce(1'b1),
    .dout(grp_fu_2429_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_28_q0),
    .din1(grp_fu_2437_p1),
    .din2(grp_fu_2437_p2),
    .ce(1'b1),
    .dout(grp_fu_2437_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_29_q0),
    .din1(grp_fu_2445_p1),
    .din2(grp_fu_2445_p2),
    .ce(1'b1),
    .dout(grp_fu_2445_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_30_q0),
    .din1(grp_fu_2453_p1),
    .din2(grp_fu_2453_p2),
    .ce(1'b1),
    .dout(grp_fu_2453_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_31_q0),
    .din1(grp_fu_2461_p1),
    .din2(grp_fu_2461_p2),
    .ce(1'b1),
    .dout(grp_fu_2461_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_32_q0),
    .din1(grp_fu_2469_p1),
    .din2(grp_fu_2469_p2),
    .ce(1'b1),
    .dout(grp_fu_2469_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_33_q0),
    .din1(grp_fu_2477_p1),
    .din2(grp_fu_2477_p2),
    .ce(1'b1),
    .dout(grp_fu_2477_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_34_q0),
    .din1(grp_fu_2485_p1),
    .din2(grp_fu_2485_p2),
    .ce(1'b1),
    .dout(grp_fu_2485_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_35_q0),
    .din1(grp_fu_2493_p1),
    .din2(grp_fu_2493_p2),
    .ce(1'b1),
    .dout(grp_fu_2493_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_36_q0),
    .din1(grp_fu_2501_p1),
    .din2(grp_fu_2501_p2),
    .ce(1'b1),
    .dout(grp_fu_2501_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_37_q0),
    .din1(grp_fu_2509_p1),
    .din2(grp_fu_2509_p2),
    .ce(1'b1),
    .dout(grp_fu_2509_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_38_q0),
    .din1(grp_fu_2517_p1),
    .din2(grp_fu_2517_p2),
    .ce(1'b1),
    .dout(grp_fu_2517_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_39_q0),
    .din1(grp_fu_2525_p1),
    .din2(grp_fu_2525_p2),
    .ce(1'b1),
    .dout(grp_fu_2525_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_40_q0),
    .din1(grp_fu_2533_p1),
    .din2(grp_fu_2533_p2),
    .ce(1'b1),
    .dout(grp_fu_2533_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_41_q0),
    .din1(grp_fu_2541_p1),
    .din2(grp_fu_2541_p2),
    .ce(1'b1),
    .dout(grp_fu_2541_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_42_q0),
    .din1(grp_fu_2549_p1),
    .din2(grp_fu_2549_p2),
    .ce(1'b1),
    .dout(grp_fu_2549_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter45_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_1257_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_230 <= add_ln56_fu_1263_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_230 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln58_reg_3486 <= add_ln58_fu_2202_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        sum_3_reg_3481 <= sum_3_fu_2196_p2;
        tmp_3_reg_2856 <= {{mul_ln61_fu_1287_p2[23:8]}};
        zext_ln56_reg_2784_pp0_iter10_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter9_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter11_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter10_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter12_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter11_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter13_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter12_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter14_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter13_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter15_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter14_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter16_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter15_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter17_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter16_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter18_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter17_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter19_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter18_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter20_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter19_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter21_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter20_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter22_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter21_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter23_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter22_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter24_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter23_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter25_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter24_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter26_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter25_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter27_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter26_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter28_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter27_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter29_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter28_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter2_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter1_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter30_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter29_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter31_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter30_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter32_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter31_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter33_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter32_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter34_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter33_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter35_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter34_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter36_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter35_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter37_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter36_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter38_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter37_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter39_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter38_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter3_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter2_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter40_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter39_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter41_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter40_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter42_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter41_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter43_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter42_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter44_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter43_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter45_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter44_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter4_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter3_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter5_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter4_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter6_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter5_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter7_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter6_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter8_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter7_reg[6 : 0];
        zext_ln56_reg_2784_pp0_iter9_reg[6 : 0] <= zext_ln56_reg_2784_pp0_iter8_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        layer1_weights_0_load_reg_2841 <= layer1_weights_0_q0;
        sext_ln61_10_cast_reg_2725 <= sext_ln61_10_cast_fu_1205_p1;
        sext_ln61_11_cast_reg_2720 <= sext_ln61_11_cast_fu_1201_p1;
        sext_ln61_12_cast_reg_2715 <= sext_ln61_12_cast_fu_1197_p1;
        sext_ln61_13_cast_reg_2710 <= sext_ln61_13_cast_fu_1193_p1;
        sext_ln61_14_cast_reg_2705 <= sext_ln61_14_cast_fu_1189_p1;
        sext_ln61_15_cast_reg_2700 <= sext_ln61_15_cast_fu_1185_p1;
        sext_ln61_16_cast_reg_2695 <= sext_ln61_16_cast_fu_1181_p1;
        sext_ln61_17_cast_reg_2690 <= sext_ln61_17_cast_fu_1177_p1;
        sext_ln61_18_cast_reg_2685 <= sext_ln61_18_cast_fu_1173_p1;
        sext_ln61_19_cast_reg_2680 <= sext_ln61_19_cast_fu_1169_p1;
        sext_ln61_1_cast_reg_2770 <= sext_ln61_1_cast_fu_1241_p1;
        sext_ln61_20_cast_reg_2675 <= sext_ln61_20_cast_fu_1165_p1;
        sext_ln61_21_cast_reg_2670 <= sext_ln61_21_cast_fu_1161_p1;
        sext_ln61_22_cast_reg_2665 <= sext_ln61_22_cast_fu_1157_p1;
        sext_ln61_23_cast_reg_2660 <= sext_ln61_23_cast_fu_1153_p1;
        sext_ln61_24_cast_reg_2655 <= sext_ln61_24_cast_fu_1149_p1;
        sext_ln61_25_cast_reg_2650 <= sext_ln61_25_cast_fu_1145_p1;
        sext_ln61_26_cast_reg_2645 <= sext_ln61_26_cast_fu_1141_p1;
        sext_ln61_27_cast_reg_2640 <= sext_ln61_27_cast_fu_1137_p1;
        sext_ln61_28_cast_reg_2635 <= sext_ln61_28_cast_fu_1133_p1;
        sext_ln61_29_cast_reg_2630 <= sext_ln61_29_cast_fu_1129_p1;
        sext_ln61_2_cast_reg_2765 <= sext_ln61_2_cast_fu_1237_p1;
        sext_ln61_30_cast_reg_2625 <= sext_ln61_30_cast_fu_1125_p1;
        sext_ln61_31_cast_reg_2620 <= sext_ln61_31_cast_fu_1121_p1;
        sext_ln61_32_cast_reg_2615 <= sext_ln61_32_cast_fu_1117_p1;
        sext_ln61_33_cast_reg_2610 <= sext_ln61_33_cast_fu_1113_p1;
        sext_ln61_34_cast_reg_2605 <= sext_ln61_34_cast_fu_1109_p1;
        sext_ln61_35_cast_reg_2600 <= sext_ln61_35_cast_fu_1105_p1;
        sext_ln61_36_cast_reg_2595 <= sext_ln61_36_cast_fu_1101_p1;
        sext_ln61_37_cast_reg_2590 <= sext_ln61_37_cast_fu_1097_p1;
        sext_ln61_38_cast_reg_2585 <= sext_ln61_38_cast_fu_1093_p1;
        sext_ln61_39_cast_reg_2580 <= sext_ln61_39_cast_fu_1089_p1;
        sext_ln61_3_cast_reg_2760 <= sext_ln61_3_cast_fu_1233_p1;
        sext_ln61_40_cast_reg_2575 <= sext_ln61_40_cast_fu_1085_p1;
        sext_ln61_41_cast_reg_2570 <= sext_ln61_41_cast_fu_1081_p1;
        sext_ln61_42_cast_reg_2565 <= sext_ln61_42_cast_fu_1077_p1;
        sext_ln61_4_cast_reg_2755 <= sext_ln61_4_cast_fu_1229_p1;
        sext_ln61_5_cast_reg_2750 <= sext_ln61_5_cast_fu_1225_p1;
        sext_ln61_6_cast_reg_2745 <= sext_ln61_6_cast_fu_1221_p1;
        sext_ln61_7_cast_reg_2740 <= sext_ln61_7_cast_fu_1217_p1;
        sext_ln61_8_cast_reg_2735 <= sext_ln61_8_cast_fu_1213_p1;
        sext_ln61_9_cast_reg_2730 <= sext_ln61_9_cast_fu_1209_p1;
        sext_ln61_cast_reg_2775 <= sext_ln61_cast_fu_1245_p1;
        zext_ln56_reg_2784_pp0_iter1_reg[6 : 0] <= zext_ln56_reg_2784[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_1257_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln56_reg_2784[6 : 0] <= zext_ln56_fu_1269_p1[6 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln56_fu_1257_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter45_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) 
    & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_230;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter44 == 1'b1))) begin
        layer1_bias_ce0 = 1'b1;
    end else begin
        layer1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_ce0 = 1'b1;
    end else begin
        layer1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_we0 = 1'b1;
    end else begin
        layer1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weights_0_ce0 = 1'b1;
    end else begin
        layer1_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_10_ce0 = 1'b1;
    end else begin
        layer1_weights_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_11_ce0 = 1'b1;
    end else begin
        layer1_weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_12_ce0 = 1'b1;
    end else begin
        layer1_weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_13_ce0 = 1'b1;
    end else begin
        layer1_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_14_ce0 = 1'b1;
    end else begin
        layer1_weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_15_ce0 = 1'b1;
    end else begin
        layer1_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_16_ce0 = 1'b1;
    end else begin
        layer1_weights_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_17_ce0 = 1'b1;
    end else begin
        layer1_weights_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_18_ce0 = 1'b1;
    end else begin
        layer1_weights_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_19_ce0 = 1'b1;
    end else begin
        layer1_weights_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weights_1_ce0 = 1'b1;
    end else begin
        layer1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_20_ce0 = 1'b1;
    end else begin
        layer1_weights_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_21_ce0 = 1'b1;
    end else begin
        layer1_weights_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_22_ce0 = 1'b1;
    end else begin
        layer1_weights_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_23_ce0 = 1'b1;
    end else begin
        layer1_weights_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_24_ce0 = 1'b1;
    end else begin
        layer1_weights_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_25_ce0 = 1'b1;
    end else begin
        layer1_weights_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_26_ce0 = 1'b1;
    end else begin
        layer1_weights_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_27_ce0 = 1'b1;
    end else begin
        layer1_weights_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        layer1_weights_28_ce0 = 1'b1;
    end else begin
        layer1_weights_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        layer1_weights_29_ce0 = 1'b1;
    end else begin
        layer1_weights_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weights_2_ce0 = 1'b1;
    end else begin
        layer1_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        layer1_weights_30_ce0 = 1'b1;
    end else begin
        layer1_weights_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        layer1_weights_31_ce0 = 1'b1;
    end else begin
        layer1_weights_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        layer1_weights_32_ce0 = 1'b1;
    end else begin
        layer1_weights_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        layer1_weights_33_ce0 = 1'b1;
    end else begin
        layer1_weights_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        layer1_weights_34_ce0 = 1'b1;
    end else begin
        layer1_weights_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        layer1_weights_35_ce0 = 1'b1;
    end else begin
        layer1_weights_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        layer1_weights_36_ce0 = 1'b1;
    end else begin
        layer1_weights_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        layer1_weights_37_ce0 = 1'b1;
    end else begin
        layer1_weights_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_weights_38_ce0 = 1'b1;
    end else begin
        layer1_weights_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        layer1_weights_39_ce0 = 1'b1;
    end else begin
        layer1_weights_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_3_ce0 = 1'b1;
    end else begin
        layer1_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        layer1_weights_40_ce0 = 1'b1;
    end else begin
        layer1_weights_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        layer1_weights_41_ce0 = 1'b1;
    end else begin
        layer1_weights_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        layer1_weights_42_ce0 = 1'b1;
    end else begin
        layer1_weights_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_4_ce0 = 1'b1;
    end else begin
        layer1_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_5_ce0 = 1'b1;
    end else begin
        layer1_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_6_ce0 = 1'b1;
    end else begin
        layer1_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_7_ce0 = 1'b1;
    end else begin
        layer1_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_8_ce0 = 1'b1;
    end else begin
        layer1_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_9_ce0 = 1'b1;
    end else begin
        layer1_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln56_fu_1263_p2 = (ap_sig_allocacmp_i_2 + 7'd1);

assign add_ln58_fu_2202_p2 = ($signed(sext_ln63_1_fu_2192_p1) + $signed(trunc_ln_fu_2183_p4));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_2221_p1 = sext_ln61_1_cast_reg_2770;

assign grp_fu_2221_p2 = {{tmp_3_reg_2856}, {8'd0}};

assign grp_fu_2229_p1 = sext_ln61_2_cast_reg_2765;

assign grp_fu_2229_p2 = {{tmp_4_fu_1317_p4}, {8'd0}};

assign grp_fu_2237_p1 = sext_ln61_3_cast_reg_2760;

assign grp_fu_2237_p2 = {{tmp_5_fu_1338_p4}, {8'd0}};

assign grp_fu_2245_p1 = sext_ln61_4_cast_reg_2755;

assign grp_fu_2245_p2 = {{tmp_6_fu_1359_p4}, {8'd0}};

assign grp_fu_2253_p1 = sext_ln61_5_cast_reg_2750;

assign grp_fu_2253_p2 = {{tmp_7_fu_1380_p4}, {8'd0}};

assign grp_fu_2261_p1 = sext_ln61_6_cast_reg_2745;

assign grp_fu_2261_p2 = {{tmp_8_fu_1401_p4}, {8'd0}};

assign grp_fu_2269_p1 = sext_ln61_7_cast_reg_2740;

assign grp_fu_2269_p2 = {{tmp_9_fu_1422_p4}, {8'd0}};

assign grp_fu_2277_p1 = sext_ln61_8_cast_reg_2735;

assign grp_fu_2277_p2 = {{tmp_10_fu_1443_p4}, {8'd0}};

assign grp_fu_2285_p1 = sext_ln61_9_cast_reg_2730;

assign grp_fu_2285_p2 = {{tmp_11_fu_1464_p4}, {8'd0}};

assign grp_fu_2293_p1 = sext_ln61_10_cast_reg_2725;

assign grp_fu_2293_p2 = {{tmp_12_fu_1485_p4}, {8'd0}};

assign grp_fu_2301_p1 = sext_ln61_11_cast_reg_2720;

assign grp_fu_2301_p2 = {{tmp_13_fu_1506_p4}, {8'd0}};

assign grp_fu_2309_p1 = sext_ln61_12_cast_reg_2715;

assign grp_fu_2309_p2 = {{tmp_14_fu_1527_p4}, {8'd0}};

assign grp_fu_2317_p1 = sext_ln61_13_cast_reg_2710;

assign grp_fu_2317_p2 = {{tmp_15_fu_1548_p4}, {8'd0}};

assign grp_fu_2325_p1 = sext_ln61_14_cast_reg_2705;

assign grp_fu_2325_p2 = {{tmp_16_fu_1569_p4}, {8'd0}};

assign grp_fu_2333_p1 = sext_ln61_15_cast_reg_2700;

assign grp_fu_2333_p2 = {{tmp_17_fu_1590_p4}, {8'd0}};

assign grp_fu_2341_p1 = sext_ln61_16_cast_reg_2695;

assign grp_fu_2341_p2 = {{tmp_18_fu_1611_p4}, {8'd0}};

assign grp_fu_2349_p1 = sext_ln61_17_cast_reg_2690;

assign grp_fu_2349_p2 = {{tmp_19_fu_1632_p4}, {8'd0}};

assign grp_fu_2357_p1 = sext_ln61_18_cast_reg_2685;

assign grp_fu_2357_p2 = {{tmp_20_fu_1653_p4}, {8'd0}};

assign grp_fu_2365_p1 = sext_ln61_19_cast_reg_2680;

assign grp_fu_2365_p2 = {{tmp_21_fu_1674_p4}, {8'd0}};

assign grp_fu_2373_p1 = sext_ln61_20_cast_reg_2675;

assign grp_fu_2373_p2 = {{tmp_22_fu_1695_p4}, {8'd0}};

assign grp_fu_2381_p1 = sext_ln61_21_cast_reg_2670;

assign grp_fu_2381_p2 = {{tmp_23_fu_1716_p4}, {8'd0}};

assign grp_fu_2389_p1 = sext_ln61_22_cast_reg_2665;

assign grp_fu_2389_p2 = {{tmp_24_fu_1737_p4}, {8'd0}};

assign grp_fu_2397_p1 = sext_ln61_23_cast_reg_2660;

assign grp_fu_2397_p2 = {{tmp_25_fu_1758_p4}, {8'd0}};

assign grp_fu_2405_p1 = sext_ln61_24_cast_reg_2655;

assign grp_fu_2405_p2 = {{tmp_26_fu_1779_p4}, {8'd0}};

assign grp_fu_2413_p1 = sext_ln61_25_cast_reg_2650;

assign grp_fu_2413_p2 = {{tmp_27_fu_1800_p4}, {8'd0}};

assign grp_fu_2421_p1 = sext_ln61_26_cast_reg_2645;

assign grp_fu_2421_p2 = {{tmp_28_fu_1821_p4}, {8'd0}};

assign grp_fu_2429_p1 = sext_ln61_27_cast_reg_2640;

assign grp_fu_2429_p2 = {{tmp_29_fu_1842_p4}, {8'd0}};

assign grp_fu_2437_p1 = sext_ln61_28_cast_reg_2635;

assign grp_fu_2437_p2 = {{tmp_30_fu_1863_p4}, {8'd0}};

assign grp_fu_2445_p1 = sext_ln61_29_cast_reg_2630;

assign grp_fu_2445_p2 = {{tmp_31_fu_1884_p4}, {8'd0}};

assign grp_fu_2453_p1 = sext_ln61_30_cast_reg_2625;

assign grp_fu_2453_p2 = {{tmp_32_fu_1905_p4}, {8'd0}};

assign grp_fu_2461_p1 = sext_ln61_31_cast_reg_2620;

assign grp_fu_2461_p2 = {{tmp_33_fu_1926_p4}, {8'd0}};

assign grp_fu_2469_p1 = sext_ln61_32_cast_reg_2615;

assign grp_fu_2469_p2 = {{tmp_34_fu_1947_p4}, {8'd0}};

assign grp_fu_2477_p1 = sext_ln61_33_cast_reg_2610;

assign grp_fu_2477_p2 = {{tmp_35_fu_1968_p4}, {8'd0}};

assign grp_fu_2485_p1 = sext_ln61_34_cast_reg_2605;

assign grp_fu_2485_p2 = {{tmp_36_fu_1989_p4}, {8'd0}};

assign grp_fu_2493_p1 = sext_ln61_35_cast_reg_2600;

assign grp_fu_2493_p2 = {{tmp_37_fu_2010_p4}, {8'd0}};

assign grp_fu_2501_p1 = sext_ln61_36_cast_reg_2595;

assign grp_fu_2501_p2 = {{tmp_38_fu_2031_p4}, {8'd0}};

assign grp_fu_2509_p1 = sext_ln61_37_cast_reg_2590;

assign grp_fu_2509_p2 = {{tmp_39_fu_2052_p4}, {8'd0}};

assign grp_fu_2517_p1 = sext_ln61_38_cast_reg_2585;

assign grp_fu_2517_p2 = {{tmp_40_fu_2073_p4}, {8'd0}};

assign grp_fu_2525_p1 = sext_ln61_39_cast_reg_2580;

assign grp_fu_2525_p2 = {{tmp_41_fu_2094_p4}, {8'd0}};

assign grp_fu_2533_p1 = sext_ln61_40_cast_reg_2575;

assign grp_fu_2533_p2 = {{tmp_42_fu_2115_p4}, {8'd0}};

assign grp_fu_2541_p1 = sext_ln61_41_cast_reg_2570;

assign grp_fu_2541_p2 = {{tmp_43_fu_2136_p4}, {8'd0}};

assign grp_fu_2549_p1 = sext_ln61_42_cast_reg_2565;

assign grp_fu_2549_p2 = {{tmp_44_fu_2153_p4}, {8'd0}};

assign icmp_ln14_fu_2208_p2 = (($signed(sum_3_reg_3481) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_1257_p2 = ((ap_sig_allocacmp_i_2 == 7'd64) ? 1'b1 : 1'b0);

assign layer1_bias_address0 = zext_ln56_reg_2784_pp0_iter43_reg;

assign layer1_output_address0 = zext_ln56_reg_2784_pp0_iter45_reg;

assign layer1_output_d0 = ((icmp_ln14_fu_2208_p2[0:0] == 1'b1) ? add_ln58_reg_3486 : 15'd0);

assign layer1_weights_0_address0 = zext_ln56_fu_1269_p1;

assign layer1_weights_10_address0 = zext_ln56_reg_2784_pp0_iter8_reg;

assign layer1_weights_11_address0 = zext_ln56_reg_2784_pp0_iter9_reg;

assign layer1_weights_12_address0 = zext_ln56_reg_2784_pp0_iter10_reg;

assign layer1_weights_13_address0 = zext_ln56_reg_2784_pp0_iter11_reg;

assign layer1_weights_14_address0 = zext_ln56_reg_2784_pp0_iter12_reg;

assign layer1_weights_15_address0 = zext_ln56_reg_2784_pp0_iter13_reg;

assign layer1_weights_16_address0 = zext_ln56_reg_2784_pp0_iter14_reg;

assign layer1_weights_17_address0 = zext_ln56_reg_2784_pp0_iter15_reg;

assign layer1_weights_18_address0 = zext_ln56_reg_2784_pp0_iter16_reg;

assign layer1_weights_19_address0 = zext_ln56_reg_2784_pp0_iter17_reg;

assign layer1_weights_1_address0 = zext_ln56_fu_1269_p1;

assign layer1_weights_20_address0 = zext_ln56_reg_2784_pp0_iter18_reg;

assign layer1_weights_21_address0 = zext_ln56_reg_2784_pp0_iter19_reg;

assign layer1_weights_22_address0 = zext_ln56_reg_2784_pp0_iter20_reg;

assign layer1_weights_23_address0 = zext_ln56_reg_2784_pp0_iter21_reg;

assign layer1_weights_24_address0 = zext_ln56_reg_2784_pp0_iter22_reg;

assign layer1_weights_25_address0 = zext_ln56_reg_2784_pp0_iter23_reg;

assign layer1_weights_26_address0 = zext_ln56_reg_2784_pp0_iter24_reg;

assign layer1_weights_27_address0 = zext_ln56_reg_2784_pp0_iter25_reg;

assign layer1_weights_28_address0 = zext_ln56_reg_2784_pp0_iter26_reg;

assign layer1_weights_29_address0 = zext_ln56_reg_2784_pp0_iter27_reg;

assign layer1_weights_2_address0 = zext_ln56_reg_2784;

assign layer1_weights_30_address0 = zext_ln56_reg_2784_pp0_iter28_reg;

assign layer1_weights_31_address0 = zext_ln56_reg_2784_pp0_iter29_reg;

assign layer1_weights_32_address0 = zext_ln56_reg_2784_pp0_iter30_reg;

assign layer1_weights_33_address0 = zext_ln56_reg_2784_pp0_iter31_reg;

assign layer1_weights_34_address0 = zext_ln56_reg_2784_pp0_iter32_reg;

assign layer1_weights_35_address0 = zext_ln56_reg_2784_pp0_iter33_reg;

assign layer1_weights_36_address0 = zext_ln56_reg_2784_pp0_iter34_reg;

assign layer1_weights_37_address0 = zext_ln56_reg_2784_pp0_iter35_reg;

assign layer1_weights_38_address0 = zext_ln56_reg_2784_pp0_iter36_reg;

assign layer1_weights_39_address0 = zext_ln56_reg_2784_pp0_iter37_reg;

assign layer1_weights_3_address0 = zext_ln56_reg_2784_pp0_iter1_reg;

assign layer1_weights_40_address0 = zext_ln56_reg_2784_pp0_iter38_reg;

assign layer1_weights_41_address0 = zext_ln56_reg_2784_pp0_iter39_reg;

assign layer1_weights_42_address0 = zext_ln56_reg_2784_pp0_iter40_reg;

assign layer1_weights_4_address0 = zext_ln56_reg_2784_pp0_iter2_reg;

assign layer1_weights_5_address0 = zext_ln56_reg_2784_pp0_iter3_reg;

assign layer1_weights_6_address0 = zext_ln56_reg_2784_pp0_iter4_reg;

assign layer1_weights_7_address0 = zext_ln56_reg_2784_pp0_iter5_reg;

assign layer1_weights_8_address0 = zext_ln56_reg_2784_pp0_iter6_reg;

assign layer1_weights_9_address0 = zext_ln56_reg_2784_pp0_iter7_reg;

assign mul_ln61_fu_1287_p1 = sext_ln61_cast_reg_2775;

assign sext_ln61_10_cast_fu_1205_p1 = $signed(sext_ln61_10);

assign sext_ln61_11_cast_fu_1201_p1 = $signed(sext_ln61_11);

assign sext_ln61_12_cast_fu_1197_p1 = $signed(sext_ln61_12);

assign sext_ln61_13_cast_fu_1193_p1 = $signed(sext_ln61_13);

assign sext_ln61_14_cast_fu_1189_p1 = $signed(sext_ln61_14);

assign sext_ln61_15_cast_fu_1185_p1 = $signed(sext_ln61_15);

assign sext_ln61_16_cast_fu_1181_p1 = $signed(sext_ln61_16);

assign sext_ln61_17_cast_fu_1177_p1 = $signed(sext_ln61_17);

assign sext_ln61_18_cast_fu_1173_p1 = $signed(sext_ln61_18);

assign sext_ln61_19_cast_fu_1169_p1 = $signed(sext_ln61_19);

assign sext_ln61_1_cast_fu_1241_p1 = $signed(sext_ln61_1);

assign sext_ln61_20_cast_fu_1165_p1 = $signed(sext_ln61_20);

assign sext_ln61_21_cast_fu_1161_p1 = $signed(sext_ln61_21);

assign sext_ln61_22_cast_fu_1157_p1 = $signed(sext_ln61_22);

assign sext_ln61_23_cast_fu_1153_p1 = $signed(sext_ln61_23);

assign sext_ln61_24_cast_fu_1149_p1 = $signed(sext_ln61_24);

assign sext_ln61_25_cast_fu_1145_p1 = $signed(sext_ln61_25);

assign sext_ln61_26_cast_fu_1141_p1 = $signed(sext_ln61_26);

assign sext_ln61_27_cast_fu_1137_p1 = $signed(sext_ln61_27);

assign sext_ln61_28_cast_fu_1133_p1 = $signed(sext_ln61_28);

assign sext_ln61_29_cast_fu_1129_p1 = $signed(sext_ln61_29);

assign sext_ln61_2_cast_fu_1237_p1 = $signed(sext_ln61_2);

assign sext_ln61_30_cast_fu_1125_p1 = $signed(sext_ln61_30);

assign sext_ln61_31_cast_fu_1121_p1 = $signed(sext_ln61_31);

assign sext_ln61_32_cast_fu_1117_p1 = $signed(sext_ln61_32);

assign sext_ln61_33_cast_fu_1113_p1 = $signed(sext_ln61_33);

assign sext_ln61_34_cast_fu_1109_p1 = $signed(sext_ln61_34);

assign sext_ln61_35_cast_fu_1105_p1 = $signed(sext_ln61_35);

assign sext_ln61_36_cast_fu_1101_p1 = $signed(sext_ln61_36);

assign sext_ln61_37_cast_fu_1097_p1 = $signed(sext_ln61_37);

assign sext_ln61_38_cast_fu_1093_p1 = $signed(sext_ln61_38);

assign sext_ln61_39_cast_fu_1089_p1 = $signed(sext_ln61_39);

assign sext_ln61_3_cast_fu_1233_p1 = $signed(sext_ln61_3);

assign sext_ln61_40_cast_fu_1085_p1 = $signed(sext_ln61_40);

assign sext_ln61_41_cast_fu_1081_p1 = $signed(sext_ln61_41);

assign sext_ln61_42_cast_fu_1077_p1 = $signed(sext_ln61_42);

assign sext_ln61_4_cast_fu_1229_p1 = $signed(sext_ln61_4);

assign sext_ln61_5_cast_fu_1225_p1 = $signed(sext_ln61_5);

assign sext_ln61_6_cast_fu_1221_p1 = $signed(sext_ln61_6);

assign sext_ln61_7_cast_fu_1217_p1 = $signed(sext_ln61_7);

assign sext_ln61_8_cast_fu_1213_p1 = $signed(sext_ln61_8);

assign sext_ln61_9_cast_fu_1209_p1 = $signed(sext_ln61_9);

assign sext_ln61_cast_fu_1245_p1 = $signed(sext_ln61);

assign sext_ln63_1_fu_2192_p0 = layer1_bias_q0;

assign sext_ln63_1_fu_2192_p1 = sext_ln63_1_fu_2192_p0;

assign sext_ln63_fu_2179_p0 = layer1_bias_q0;

assign sext_ln63_fu_2179_p1 = sext_ln63_fu_2179_p0;

assign sum_3_fu_2196_p2 = ($signed(sext_ln63_fu_2179_p1) + $signed(sum_fu_2170_p4));

assign sum_fu_2170_p1 = grp_fu_2549_p3;

assign sum_fu_2170_p4 = {{sum_fu_2170_p1[23:8]}};

assign tmp_10_fu_1443_p1 = grp_fu_2269_p3;

assign tmp_10_fu_1443_p4 = {{tmp_10_fu_1443_p1[23:8]}};

assign tmp_11_fu_1464_p1 = grp_fu_2277_p3;

assign tmp_11_fu_1464_p4 = {{tmp_11_fu_1464_p1[23:8]}};

assign tmp_12_fu_1485_p1 = grp_fu_2285_p3;

assign tmp_12_fu_1485_p4 = {{tmp_12_fu_1485_p1[23:8]}};

assign tmp_13_fu_1506_p1 = grp_fu_2293_p3;

assign tmp_13_fu_1506_p4 = {{tmp_13_fu_1506_p1[23:8]}};

assign tmp_14_fu_1527_p1 = grp_fu_2301_p3;

assign tmp_14_fu_1527_p4 = {{tmp_14_fu_1527_p1[23:8]}};

assign tmp_15_fu_1548_p1 = grp_fu_2309_p3;

assign tmp_15_fu_1548_p4 = {{tmp_15_fu_1548_p1[23:8]}};

assign tmp_16_fu_1569_p1 = grp_fu_2317_p3;

assign tmp_16_fu_1569_p4 = {{tmp_16_fu_1569_p1[23:8]}};

assign tmp_17_fu_1590_p1 = grp_fu_2325_p3;

assign tmp_17_fu_1590_p4 = {{tmp_17_fu_1590_p1[23:8]}};

assign tmp_18_fu_1611_p1 = grp_fu_2333_p3;

assign tmp_18_fu_1611_p4 = {{tmp_18_fu_1611_p1[23:8]}};

assign tmp_19_fu_1632_p1 = grp_fu_2341_p3;

assign tmp_19_fu_1632_p4 = {{tmp_19_fu_1632_p1[23:8]}};

assign tmp_20_fu_1653_p1 = grp_fu_2349_p3;

assign tmp_20_fu_1653_p4 = {{tmp_20_fu_1653_p1[23:8]}};

assign tmp_21_fu_1674_p1 = grp_fu_2357_p3;

assign tmp_21_fu_1674_p4 = {{tmp_21_fu_1674_p1[23:8]}};

assign tmp_22_fu_1695_p1 = grp_fu_2365_p3;

assign tmp_22_fu_1695_p4 = {{tmp_22_fu_1695_p1[23:8]}};

assign tmp_23_fu_1716_p1 = grp_fu_2373_p3;

assign tmp_23_fu_1716_p4 = {{tmp_23_fu_1716_p1[23:8]}};

assign tmp_24_fu_1737_p1 = grp_fu_2381_p3;

assign tmp_24_fu_1737_p4 = {{tmp_24_fu_1737_p1[23:8]}};

assign tmp_25_fu_1758_p1 = grp_fu_2389_p3;

assign tmp_25_fu_1758_p4 = {{tmp_25_fu_1758_p1[23:8]}};

assign tmp_26_fu_1779_p1 = grp_fu_2397_p3;

assign tmp_26_fu_1779_p4 = {{tmp_26_fu_1779_p1[23:8]}};

assign tmp_27_fu_1800_p1 = grp_fu_2405_p3;

assign tmp_27_fu_1800_p4 = {{tmp_27_fu_1800_p1[23:8]}};

assign tmp_28_fu_1821_p1 = grp_fu_2413_p3;

assign tmp_28_fu_1821_p4 = {{tmp_28_fu_1821_p1[23:8]}};

assign tmp_29_fu_1842_p1 = grp_fu_2421_p3;

assign tmp_29_fu_1842_p4 = {{tmp_29_fu_1842_p1[23:8]}};

assign tmp_30_fu_1863_p1 = grp_fu_2429_p3;

assign tmp_30_fu_1863_p4 = {{tmp_30_fu_1863_p1[23:8]}};

assign tmp_31_fu_1884_p1 = grp_fu_2437_p3;

assign tmp_31_fu_1884_p4 = {{tmp_31_fu_1884_p1[23:8]}};

assign tmp_32_fu_1905_p1 = grp_fu_2445_p3;

assign tmp_32_fu_1905_p4 = {{tmp_32_fu_1905_p1[23:8]}};

assign tmp_33_fu_1926_p1 = grp_fu_2453_p3;

assign tmp_33_fu_1926_p4 = {{tmp_33_fu_1926_p1[23:8]}};

assign tmp_34_fu_1947_p1 = grp_fu_2461_p3;

assign tmp_34_fu_1947_p4 = {{tmp_34_fu_1947_p1[23:8]}};

assign tmp_35_fu_1968_p1 = grp_fu_2469_p3;

assign tmp_35_fu_1968_p4 = {{tmp_35_fu_1968_p1[23:8]}};

assign tmp_36_fu_1989_p1 = grp_fu_2477_p3;

assign tmp_36_fu_1989_p4 = {{tmp_36_fu_1989_p1[23:8]}};

assign tmp_37_fu_2010_p1 = grp_fu_2485_p3;

assign tmp_37_fu_2010_p4 = {{tmp_37_fu_2010_p1[23:8]}};

assign tmp_38_fu_2031_p1 = grp_fu_2493_p3;

assign tmp_38_fu_2031_p4 = {{tmp_38_fu_2031_p1[23:8]}};

assign tmp_39_fu_2052_p1 = grp_fu_2501_p3;

assign tmp_39_fu_2052_p4 = {{tmp_39_fu_2052_p1[23:8]}};

assign tmp_40_fu_2073_p1 = grp_fu_2509_p3;

assign tmp_40_fu_2073_p4 = {{tmp_40_fu_2073_p1[23:8]}};

assign tmp_41_fu_2094_p1 = grp_fu_2517_p3;

assign tmp_41_fu_2094_p4 = {{tmp_41_fu_2094_p1[23:8]}};

assign tmp_42_fu_2115_p1 = grp_fu_2525_p3;

assign tmp_42_fu_2115_p4 = {{tmp_42_fu_2115_p1[23:8]}};

assign tmp_43_fu_2136_p1 = grp_fu_2533_p3;

assign tmp_43_fu_2136_p4 = {{tmp_43_fu_2136_p1[23:8]}};

assign tmp_44_fu_2153_p1 = grp_fu_2541_p3;

assign tmp_44_fu_2153_p4 = {{tmp_44_fu_2153_p1[23:8]}};

assign tmp_4_fu_1317_p1 = grp_fu_2221_p3;

assign tmp_4_fu_1317_p4 = {{tmp_4_fu_1317_p1[23:8]}};

assign tmp_5_fu_1338_p1 = grp_fu_2229_p3;

assign tmp_5_fu_1338_p4 = {{tmp_5_fu_1338_p1[23:8]}};

assign tmp_6_fu_1359_p1 = grp_fu_2237_p3;

assign tmp_6_fu_1359_p4 = {{tmp_6_fu_1359_p1[23:8]}};

assign tmp_7_fu_1380_p1 = grp_fu_2245_p3;

assign tmp_7_fu_1380_p4 = {{tmp_7_fu_1380_p1[23:8]}};

assign tmp_8_fu_1401_p1 = grp_fu_2253_p3;

assign tmp_8_fu_1401_p4 = {{tmp_8_fu_1401_p1[23:8]}};

assign tmp_9_fu_1422_p1 = grp_fu_2261_p3;

assign tmp_9_fu_1422_p4 = {{tmp_9_fu_1422_p1[23:8]}};

assign trunc_ln_fu_2183_p1 = grp_fu_2549_p3;

assign trunc_ln_fu_2183_p4 = {{trunc_ln_fu_2183_p1[22:8]}};

assign zext_ln56_fu_1269_p1 = ap_sig_allocacmp_i_2;

always @ (posedge ap_clk) begin
    zext_ln56_reg_2784[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter16_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter17_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter18_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter19_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter20_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter21_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter22_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter23_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter24_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter25_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter26_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter27_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter28_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter29_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter30_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter31_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter32_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter33_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter34_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter35_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter36_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter37_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter38_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter39_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter40_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter41_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter42_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter43_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter44_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_2784_pp0_iter45_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_56_1
