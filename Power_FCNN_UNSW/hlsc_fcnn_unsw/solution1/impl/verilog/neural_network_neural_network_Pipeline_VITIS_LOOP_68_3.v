// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_68_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln73,
        conv_i86_1_cast,
        zext_ln73_1,
        zext_ln73_2,
        zext_ln73_3,
        conv_i86_5_cast,
        conv_i86_6_cast,
        zext_ln73_4,
        zext_ln73_5,
        zext_ln73_6,
        zext_ln73_7,
        zext_ln73_8,
        zext_ln73_9,
        zext_ln73_10,
        zext_ln73_11,
        zext_ln73_12,
        zext_ln73_13,
        zext_ln73_14,
        conv_i86_22_cast,
        zext_ln73_15,
        zext_ln73_16,
        zext_ln73_17,
        conv_i86_27_cast,
        conv_i86_28_cast,
        zext_ln73_18,
        zext_ln73_19,
        conv_i86_31_cast,
        zext_ln73_20,
        zext_ln73_21,
        zext_ln73_22,
        zext_ln73_23,
        zext_ln73_24,
        zext_ln73_25,
        conv_i86_38_cast,
        zext_ln73_26,
        zext_ln73_27,
        zext_ln73_28,
        zext_ln73_29,
        zext_ln73_30,
        zext_ln73_31,
        zext_ln73_32,
        conv_i86_46_cast,
        conv_i86_48_cast,
        conv_i86_49_cast,
        conv_i86_50_cast,
        zext_ln73_33,
        zext_ln73_34,
        zext_ln73_35,
        conv_i86_54_cast,
        conv_i86_55_cast,
        zext_ln73_36,
        zext_ln73_37,
        zext_ln73_38,
        conv_i86_59_cast,
        zext_ln73_39,
        conv_i86_62_cast,
        zext_ln73_40,
        layer2_output_address0,
        layer2_output_ce0,
        layer2_output_we0,
        layer2_output_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [14:0] zext_ln73;
input  [14:0] conv_i86_1_cast;
input  [14:0] zext_ln73_1;
input  [14:0] zext_ln73_2;
input  [14:0] zext_ln73_3;
input  [14:0] conv_i86_5_cast;
input  [14:0] conv_i86_6_cast;
input  [14:0] zext_ln73_4;
input  [14:0] zext_ln73_5;
input  [14:0] zext_ln73_6;
input  [14:0] zext_ln73_7;
input  [14:0] zext_ln73_8;
input  [14:0] zext_ln73_9;
input  [14:0] zext_ln73_10;
input  [14:0] zext_ln73_11;
input  [14:0] zext_ln73_12;
input  [14:0] zext_ln73_13;
input  [14:0] zext_ln73_14;
input  [14:0] conv_i86_22_cast;
input  [14:0] zext_ln73_15;
input  [14:0] zext_ln73_16;
input  [14:0] zext_ln73_17;
input  [14:0] conv_i86_27_cast;
input  [14:0] conv_i86_28_cast;
input  [14:0] zext_ln73_18;
input  [14:0] zext_ln73_19;
input  [14:0] conv_i86_31_cast;
input  [14:0] zext_ln73_20;
input  [14:0] zext_ln73_21;
input  [14:0] zext_ln73_22;
input  [14:0] zext_ln73_23;
input  [14:0] zext_ln73_24;
input  [14:0] zext_ln73_25;
input  [14:0] conv_i86_38_cast;
input  [14:0] zext_ln73_26;
input  [14:0] zext_ln73_27;
input  [14:0] zext_ln73_28;
input  [14:0] zext_ln73_29;
input  [14:0] zext_ln73_30;
input  [14:0] zext_ln73_31;
input  [14:0] zext_ln73_32;
input  [14:0] conv_i86_46_cast;
input  [14:0] conv_i86_48_cast;
input  [14:0] conv_i86_49_cast;
input  [14:0] conv_i86_50_cast;
input  [14:0] zext_ln73_33;
input  [14:0] zext_ln73_34;
input  [14:0] zext_ln73_35;
input  [14:0] conv_i86_54_cast;
input  [14:0] conv_i86_55_cast;
input  [14:0] zext_ln73_36;
input  [14:0] zext_ln73_37;
input  [14:0] zext_ln73_38;
input  [14:0] conv_i86_59_cast;
input  [14:0] zext_ln73_39;
input  [14:0] conv_i86_62_cast;
input  [14:0] zext_ln73_40;
output  [3:0] layer2_output_address0;
output   layer2_output_ce0;
output   layer2_output_we0;
output  [15:0] layer2_output_d0;

reg ap_idle;
reg layer2_output_ce0;
reg layer2_output_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_1627_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] layer2_weights_0_address0;
reg    layer2_weights_0_ce0;
wire   [10:0] layer2_weights_0_q0;
wire   [3:0] layer2_weights_1_address0;
reg    layer2_weights_1_ce0;
wire  signed [6:0] layer2_weights_1_q0;
wire   [3:0] layer2_weights_2_address0;
reg    layer2_weights_2_ce0;
wire  signed [9:0] layer2_weights_2_q0;
wire   [3:0] layer2_weights_3_address0;
reg    layer2_weights_3_ce0;
wire  signed [10:0] layer2_weights_3_q0;
wire   [3:0] layer2_weights_4_address0;
reg    layer2_weights_4_ce0;
wire  signed [9:0] layer2_weights_4_q0;
wire   [3:0] layer2_weights_5_address0;
reg    layer2_weights_5_ce0;
wire  signed [7:0] layer2_weights_5_q0;
wire   [3:0] layer2_weights_6_address0;
reg    layer2_weights_6_ce0;
wire  signed [8:0] layer2_weights_6_q0;
wire   [3:0] layer2_weights_7_address0;
reg    layer2_weights_7_ce0;
wire  signed [10:0] layer2_weights_7_q0;
wire   [3:0] layer2_weights_8_address0;
reg    layer2_weights_8_ce0;
wire   [10:0] layer2_weights_8_q0;
wire   [3:0] layer2_weights_9_address0;
reg    layer2_weights_9_ce0;
wire  signed [10:0] layer2_weights_9_q0;
wire   [3:0] layer2_weights_12_address0;
reg    layer2_weights_12_ce0;
wire  signed [11:0] layer2_weights_12_q0;
wire   [3:0] layer2_weights_13_address0;
reg    layer2_weights_13_ce0;
wire  signed [9:0] layer2_weights_13_q0;
wire   [3:0] layer2_weights_14_address0;
reg    layer2_weights_14_ce0;
wire  signed [10:0] layer2_weights_14_q0;
wire   [3:0] layer2_weights_15_address0;
reg    layer2_weights_15_ce0;
wire  signed [10:0] layer2_weights_15_q0;
wire   [3:0] layer2_weights_16_address0;
reg    layer2_weights_16_ce0;
wire  signed [10:0] layer2_weights_16_q0;
wire   [3:0] layer2_weights_18_address0;
reg    layer2_weights_18_ce0;
wire  signed [11:0] layer2_weights_18_q0;
wire   [3:0] layer2_weights_20_address0;
reg    layer2_weights_20_ce0;
wire  signed [9:0] layer2_weights_20_q0;
wire   [3:0] layer2_weights_21_address0;
reg    layer2_weights_21_ce0;
wire   [9:0] layer2_weights_21_q0;
wire   [3:0] layer2_weights_22_address0;
reg    layer2_weights_22_ce0;
wire  signed [5:0] layer2_weights_22_q0;
wire   [3:0] layer2_weights_23_address0;
reg    layer2_weights_23_ce0;
wire   [10:0] layer2_weights_23_q0;
wire   [3:0] layer2_weights_25_address0;
reg    layer2_weights_25_ce0;
wire  signed [10:0] layer2_weights_25_q0;
wire   [3:0] layer2_weights_26_address0;
reg    layer2_weights_26_ce0;
wire  signed [10:0] layer2_weights_26_q0;
wire   [3:0] layer2_weights_27_address0;
reg    layer2_weights_27_ce0;
wire  signed [7:0] layer2_weights_27_q0;
wire   [3:0] layer2_weights_28_address0;
reg    layer2_weights_28_ce0;
wire  signed [6:0] layer2_weights_28_q0;
wire   [3:0] layer2_weights_29_address0;
reg    layer2_weights_29_ce0;
wire  signed [10:0] layer2_weights_29_q0;
wire   [3:0] layer2_weights_30_address0;
reg    layer2_weights_30_ce0;
wire  signed [11:0] layer2_weights_30_q0;
wire   [3:0] layer2_weights_31_address0;
reg    layer2_weights_31_ce0;
wire  signed [7:0] layer2_weights_31_q0;
wire   [3:0] layer2_weights_32_address0;
reg    layer2_weights_32_ce0;
wire  signed [10:0] layer2_weights_32_q0;
wire   [3:0] layer2_weights_33_address0;
reg    layer2_weights_33_ce0;
wire  signed [11:0] layer2_weights_33_q0;
wire   [3:0] layer2_weights_34_address0;
reg    layer2_weights_34_ce0;
wire  signed [9:0] layer2_weights_34_q0;
wire   [3:0] layer2_weights_35_address0;
reg    layer2_weights_35_ce0;
wire   [8:0] layer2_weights_35_q0;
wire   [3:0] layer2_weights_36_address0;
reg    layer2_weights_36_ce0;
wire  signed [11:0] layer2_weights_36_q0;
wire   [3:0] layer2_weights_37_address0;
reg    layer2_weights_37_ce0;
wire  signed [12:0] layer2_weights_37_q0;
wire   [3:0] layer2_weights_38_address0;
reg    layer2_weights_38_ce0;
wire  signed [4:0] layer2_weights_38_q0;
wire   [3:0] layer2_weights_39_address0;
reg    layer2_weights_39_ce0;
wire  signed [10:0] layer2_weights_39_q0;
wire   [3:0] layer2_weights_40_address0;
reg    layer2_weights_40_ce0;
wire  signed [10:0] layer2_weights_40_q0;
wire   [3:0] layer2_weights_41_address0;
reg    layer2_weights_41_ce0;
wire  signed [10:0] layer2_weights_41_q0;
wire   [3:0] layer2_weights_42_address0;
reg    layer2_weights_42_ce0;
wire  signed [10:0] layer2_weights_42_q0;
wire   [3:0] layer2_weights_43_address0;
reg    layer2_weights_43_ce0;
wire  signed [11:0] layer2_weights_43_q0;
wire   [3:0] layer2_weights_44_address0;
reg    layer2_weights_44_ce0;
wire  signed [10:0] layer2_weights_44_q0;
wire   [3:0] layer2_weights_45_address0;
reg    layer2_weights_45_ce0;
wire  signed [11:0] layer2_weights_45_q0;
wire   [3:0] layer2_weights_46_address0;
reg    layer2_weights_46_ce0;
wire   [7:0] layer2_weights_46_q0;
wire   [3:0] layer2_weights_48_address0;
reg    layer2_weights_48_ce0;
wire   [7:0] layer2_weights_48_q0;
wire   [3:0] layer2_weights_49_address0;
reg    layer2_weights_49_ce0;
wire  signed [7:0] layer2_weights_49_q0;
wire   [3:0] layer2_weights_50_address0;
reg    layer2_weights_50_ce0;
wire   [6:0] layer2_weights_50_q0;
wire   [3:0] layer2_weights_51_address0;
reg    layer2_weights_51_ce0;
wire  signed [10:0] layer2_weights_51_q0;
wire   [3:0] layer2_weights_52_address0;
reg    layer2_weights_52_ce0;
wire  signed [9:0] layer2_weights_52_q0;
wire   [3:0] layer2_weights_53_address0;
reg    layer2_weights_53_ce0;
wire  signed [10:0] layer2_weights_53_q0;
wire   [3:0] layer2_weights_54_address0;
reg    layer2_weights_54_ce0;
wire  signed [7:0] layer2_weights_54_q0;
wire   [3:0] layer2_weights_55_address0;
reg    layer2_weights_55_ce0;
wire   [6:0] layer2_weights_55_q0;
wire   [3:0] layer2_weights_56_address0;
reg    layer2_weights_56_ce0;
wire  signed [10:0] layer2_weights_56_q0;
wire   [3:0] layer2_weights_57_address0;
reg    layer2_weights_57_ce0;
wire  signed [11:0] layer2_weights_57_q0;
wire   [3:0] layer2_weights_58_address0;
reg    layer2_weights_58_ce0;
wire  signed [10:0] layer2_weights_58_q0;
wire   [3:0] layer2_weights_59_address0;
reg    layer2_weights_59_ce0;
wire   [3:0] layer2_weights_59_q0;
wire   [3:0] layer2_weights_61_address0;
reg    layer2_weights_61_ce0;
wire  signed [10:0] layer2_weights_61_q0;
wire   [3:0] layer2_weights_62_address0;
reg    layer2_weights_62_ce0;
wire   [4:0] layer2_weights_62_q0;
wire   [3:0] layer2_weights_63_address0;
reg    layer2_weights_63_ce0;
wire  signed [9:0] layer2_weights_63_q0;
wire   [3:0] layer2_bias_address0;
reg    layer2_bias_ce0;
wire   [10:0] layer2_bias_q0;
wire   [23:0] zext_ln73_40_cast_fu_1391_p1;
reg   [23:0] zext_ln73_40_cast_reg_3324;
wire    ap_block_pp0_stage0_11001;
wire   [19:0] conv_i86_62_cast_cast_fu_1395_p1;
reg   [19:0] conv_i86_62_cast_cast_reg_3329;
wire   [23:0] zext_ln73_39_cast_fu_1399_p1;
reg   [23:0] zext_ln73_39_cast_reg_3334;
wire   [19:0] conv_i86_59_cast_cast_fu_1403_p1;
reg   [19:0] conv_i86_59_cast_cast_reg_3339;
wire   [23:0] zext_ln73_38_cast_fu_1407_p1;
reg   [23:0] zext_ln73_38_cast_reg_3344;
wire   [23:0] zext_ln73_37_cast_fu_1411_p1;
reg   [23:0] zext_ln73_37_cast_reg_3349;
wire   [23:0] zext_ln73_36_cast_fu_1415_p1;
reg   [23:0] zext_ln73_36_cast_reg_3354;
wire   [21:0] conv_i86_55_cast_cast_fu_1419_p1;
reg   [21:0] conv_i86_55_cast_cast_reg_3359;
wire   [22:0] conv_i86_54_cast_cast_fu_1423_p1;
reg   [22:0] conv_i86_54_cast_cast_reg_3364;
wire   [23:0] zext_ln73_35_cast_fu_1427_p1;
reg   [23:0] zext_ln73_35_cast_reg_3369;
wire   [23:0] zext_ln73_34_cast_fu_1431_p1;
reg   [23:0] zext_ln73_34_cast_reg_3374;
wire   [23:0] zext_ln73_33_cast_fu_1435_p1;
reg   [23:0] zext_ln73_33_cast_reg_3379;
wire   [21:0] conv_i86_50_cast_cast_fu_1439_p1;
reg   [21:0] conv_i86_50_cast_cast_reg_3384;
wire   [22:0] conv_i86_49_cast_cast_fu_1443_p1;
reg   [22:0] conv_i86_49_cast_cast_reg_3389;
wire   [23:0] conv_i86_48_cast_cast_fu_1447_p1;
reg   [23:0] conv_i86_48_cast_cast_reg_3394;
wire   [23:0] conv_i86_46_cast_cast_fu_1451_p1;
reg   [23:0] conv_i86_46_cast_cast_reg_3399;
wire   [23:0] zext_ln73_32_cast_fu_1455_p1;
reg   [23:0] zext_ln73_32_cast_reg_3404;
wire   [23:0] zext_ln73_31_cast_fu_1459_p1;
reg   [23:0] zext_ln73_31_cast_reg_3409;
wire   [23:0] zext_ln73_30_cast_fu_1463_p1;
reg   [23:0] zext_ln73_30_cast_reg_3414;
wire   [23:0] zext_ln73_29_cast_fu_1467_p1;
reg   [23:0] zext_ln73_29_cast_reg_3419;
wire   [23:0] zext_ln73_28_cast_fu_1471_p1;
reg   [23:0] zext_ln73_28_cast_reg_3424;
wire   [23:0] zext_ln73_27_cast_fu_1475_p1;
reg   [23:0] zext_ln73_27_cast_reg_3429;
wire   [23:0] zext_ln73_26_cast_fu_1479_p1;
reg   [23:0] zext_ln73_26_cast_reg_3434;
wire   [19:0] conv_i86_38_cast_cast_fu_1483_p1;
reg   [19:0] conv_i86_38_cast_cast_reg_3439;
wire   [23:0] zext_ln73_25_cast_fu_1487_p1;
reg   [23:0] zext_ln73_25_cast_reg_3444;
wire   [23:0] zext_ln73_24_cast_fu_1491_p1;
reg   [23:0] zext_ln73_24_cast_reg_3449;
wire   [23:0] zext_ln73_23_cast_fu_1495_p1;
reg   [23:0] zext_ln73_23_cast_reg_3454;
wire   [23:0] zext_ln73_22_cast_fu_1499_p1;
reg   [23:0] zext_ln73_22_cast_reg_3459;
wire   [23:0] zext_ln73_21_cast_fu_1503_p1;
reg   [23:0] zext_ln73_21_cast_reg_3464;
wire   [23:0] zext_ln73_20_cast_fu_1507_p1;
reg   [23:0] zext_ln73_20_cast_reg_3469;
wire   [22:0] conv_i86_31_cast_cast_fu_1511_p1;
reg   [22:0] conv_i86_31_cast_cast_reg_3474;
wire   [23:0] zext_ln73_19_cast_fu_1515_p1;
reg   [23:0] zext_ln73_19_cast_reg_3479;
wire   [23:0] zext_ln73_18_cast_fu_1519_p1;
reg   [23:0] zext_ln73_18_cast_reg_3484;
wire   [21:0] conv_i86_28_cast_cast_fu_1523_p1;
reg   [21:0] conv_i86_28_cast_cast_reg_3489;
wire   [22:0] conv_i86_27_cast_cast_fu_1527_p1;
reg   [22:0] conv_i86_27_cast_cast_reg_3494;
wire   [23:0] zext_ln73_17_cast_fu_1531_p1;
reg   [23:0] zext_ln73_17_cast_reg_3499;
wire   [23:0] zext_ln73_16_cast_fu_1535_p1;
reg   [23:0] zext_ln73_16_cast_reg_3504;
wire   [23:0] zext_ln73_15_cast_fu_1539_p1;
reg   [23:0] zext_ln73_15_cast_reg_3509;
wire   [20:0] conv_i86_22_cast_cast_fu_1543_p1;
reg   [20:0] conv_i86_22_cast_cast_reg_3514;
wire   [23:0] zext_ln73_14_cast_fu_1547_p1;
reg   [23:0] zext_ln73_14_cast_reg_3519;
wire   [23:0] zext_ln73_13_cast_fu_1551_p1;
reg   [23:0] zext_ln73_13_cast_reg_3524;
wire   [23:0] zext_ln73_12_cast_fu_1555_p1;
reg   [23:0] zext_ln73_12_cast_reg_3529;
wire   [23:0] zext_ln73_11_cast_fu_1559_p1;
reg   [23:0] zext_ln73_11_cast_reg_3534;
wire   [23:0] zext_ln73_10_cast_fu_1563_p1;
reg   [23:0] zext_ln73_10_cast_reg_3539;
wire   [23:0] zext_ln73_9_cast_fu_1567_p1;
reg   [23:0] zext_ln73_9_cast_reg_3544;
wire   [23:0] zext_ln73_8_cast_fu_1571_p1;
reg   [23:0] zext_ln73_8_cast_reg_3549;
wire   [23:0] zext_ln73_7_cast_fu_1575_p1;
reg   [23:0] zext_ln73_7_cast_reg_3554;
wire   [23:0] zext_ln73_6_cast_fu_1579_p1;
reg   [23:0] zext_ln73_6_cast_reg_3559;
wire   [23:0] zext_ln73_5_cast_fu_1583_p1;
reg   [23:0] zext_ln73_5_cast_reg_3564;
wire   [23:0] zext_ln73_4_cast_fu_1587_p1;
reg   [23:0] zext_ln73_4_cast_reg_3569;
wire   [23:0] conv_i86_6_cast_cast_fu_1591_p1;
reg   [23:0] conv_i86_6_cast_cast_reg_3574;
wire   [22:0] conv_i86_5_cast_cast_fu_1595_p1;
reg   [22:0] conv_i86_5_cast_cast_reg_3579;
wire   [23:0] zext_ln73_3_cast_fu_1599_p1;
reg   [23:0] zext_ln73_3_cast_reg_3584;
wire   [23:0] zext_ln73_2_cast_fu_1603_p1;
reg   [23:0] zext_ln73_2_cast_reg_3589;
wire   [23:0] zext_ln73_1_cast_fu_1607_p1;
reg   [23:0] zext_ln73_1_cast_reg_3594;
wire   [21:0] conv_i86_1_cast_cast_fu_1611_p1;
reg   [21:0] conv_i86_1_cast_cast_reg_3599;
wire   [23:0] zext_ln73_cast_fu_1615_p1;
reg   [23:0] zext_ln73_cast_reg_3604;
wire   [63:0] zext_ln68_fu_1639_p1;
reg   [63:0] zext_ln68_reg_3613;
reg   [63:0] zext_ln68_reg_3613_pp0_iter1_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter2_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter3_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter4_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter5_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter6_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter7_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter8_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter9_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter10_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter11_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter12_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter13_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter14_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter15_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter16_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter17_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter18_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter19_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter20_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter21_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter22_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter23_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter24_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter25_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter26_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter27_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter28_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter29_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter30_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter31_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter32_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter33_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter34_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter35_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter36_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter37_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter38_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter39_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter40_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter41_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter42_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter43_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter44_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter45_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter46_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter47_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter48_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter49_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter50_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter51_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter52_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter53_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter54_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter55_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter56_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter57_reg;
reg   [63:0] zext_ln68_reg_3613_pp0_iter58_reg;
reg  signed [10:0] layer2_weights_0_load_reg_3684;
reg   [15:0] tmp_s_reg_3699;
reg   [10:0] layer2_bias_load_reg_4534;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_278;
wire   [3:0] add_ln68_fu_1633_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
wire   [14:0] mul_ln73_fu_1657_p1;
wire   [23:0] mul_ln73_fu_1657_p2;
wire  signed [23:0] grp_fu_2869_p3;
wire   [15:0] tmp_1_fu_1687_p4;
wire  signed [23:0] tmp_2_fu_1708_p1;
wire   [23:0] grp_fu_2877_p3;
wire   [15:0] tmp_2_fu_1708_p4;
wire  signed [23:0] tmp_3_fu_1729_p1;
wire   [23:0] grp_fu_2885_p3;
wire   [15:0] tmp_3_fu_1729_p4;
wire  signed [23:0] tmp_4_fu_1750_p1;
wire   [23:0] grp_fu_2893_p3;
wire   [15:0] tmp_4_fu_1750_p4;
wire  signed [23:0] grp_fu_2901_p3;
wire   [15:0] tmp_5_fu_1771_p4;
wire  signed [23:0] tmp_6_fu_1792_p1;
wire   [23:0] grp_fu_2909_p3;
wire   [15:0] tmp_6_fu_1792_p4;
wire  signed [23:0] tmp_7_fu_1813_p1;
wire   [23:0] grp_fu_2917_p3;
wire   [15:0] tmp_7_fu_1813_p4;
wire   [23:0] grp_fu_2925_p3;
wire   [15:0] tmp_8_fu_1834_p4;
wire  signed [23:0] tmp_9_fu_1855_p1;
wire   [23:0] grp_fu_2933_p3;
wire   [15:0] tmp_9_fu_1855_p4;
wire  signed [23:0] tmp_10_fu_1876_p1;
wire   [23:0] grp_fu_2941_p3;
wire   [15:0] tmp_10_fu_1876_p4;
wire  signed [23:0] tmp_11_fu_1897_p1;
wire   [23:0] grp_fu_2949_p3;
wire   [15:0] tmp_11_fu_1897_p4;
wire  signed [23:0] tmp_12_fu_1918_p1;
wire   [23:0] grp_fu_2957_p3;
wire   [15:0] tmp_12_fu_1918_p4;
wire  signed [23:0] tmp_13_fu_1939_p1;
wire   [23:0] grp_fu_2965_p3;
wire   [15:0] tmp_13_fu_1939_p4;
wire  signed [23:0] tmp_14_fu_1960_p1;
wire   [23:0] grp_fu_2973_p3;
wire   [15:0] tmp_14_fu_1960_p4;
wire  signed [23:0] tmp_15_fu_1981_p1;
wire   [23:0] grp_fu_2981_p3;
wire   [15:0] tmp_15_fu_1981_p4;
wire  signed [23:0] tmp_16_fu_2002_p1;
wire   [23:0] grp_fu_2989_p3;
wire   [15:0] tmp_16_fu_2002_p4;
wire   [23:0] grp_fu_2997_p3;
wire   [15:0] tmp_17_fu_2023_p4;
wire  signed [23:0] grp_fu_3005_p3;
wire   [15:0] tmp_18_fu_2044_p4;
wire   [23:0] grp_fu_3013_p3;
wire   [15:0] tmp_19_fu_2065_p4;
wire  signed [23:0] tmp_20_fu_2086_p1;
wire   [23:0] grp_fu_3021_p3;
wire   [15:0] tmp_20_fu_2086_p4;
wire  signed [23:0] tmp_21_fu_2107_p1;
wire   [23:0] grp_fu_3029_p3;
wire   [15:0] tmp_21_fu_2107_p4;
wire  signed [23:0] grp_fu_3037_p3;
wire   [15:0] tmp_22_fu_2128_p4;
wire  signed [23:0] grp_fu_3045_p3;
wire   [15:0] tmp_23_fu_2149_p4;
wire  signed [23:0] tmp_24_fu_2170_p1;
wire   [23:0] grp_fu_3053_p3;
wire   [15:0] tmp_24_fu_2170_p4;
wire  signed [23:0] tmp_25_fu_2191_p1;
wire   [23:0] grp_fu_3061_p3;
wire   [15:0] tmp_25_fu_2191_p4;
wire  signed [23:0] grp_fu_3069_p3;
wire   [15:0] tmp_26_fu_2212_p4;
wire  signed [23:0] tmp_27_fu_2233_p1;
wire   [23:0] grp_fu_3077_p3;
wire   [15:0] tmp_27_fu_2233_p4;
wire  signed [9:0] sext_ln73_33_fu_2250_p1;
wire  signed [23:0] tmp_28_fu_2258_p1;
wire   [23:0] grp_fu_3085_p3;
wire   [15:0] tmp_28_fu_2258_p4;
wire  signed [23:0] tmp_29_fu_2279_p1;
wire   [23:0] grp_fu_3093_p3;
wire   [15:0] tmp_29_fu_2279_p4;
wire   [23:0] grp_fu_3101_p3;
wire   [15:0] tmp_30_fu_2300_p4;
wire  signed [23:0] tmp_31_fu_2321_p1;
wire   [23:0] grp_fu_3109_p3;
wire   [15:0] tmp_31_fu_2321_p4;
wire  signed [23:0] tmp_32_fu_2342_p1;
wire   [23:0] grp_fu_3117_p3;
wire   [15:0] tmp_32_fu_2342_p4;
wire  signed [23:0] grp_fu_3125_p3;
wire   [15:0] tmp_33_fu_2363_p4;
wire  signed [23:0] tmp_34_fu_2384_p1;
wire   [23:0] grp_fu_3133_p3;
wire   [15:0] tmp_34_fu_2384_p4;
wire  signed [23:0] tmp_35_fu_2405_p1;
wire   [23:0] grp_fu_3141_p3;
wire   [15:0] tmp_35_fu_2405_p4;
wire  signed [23:0] tmp_36_fu_2426_p1;
wire   [23:0] grp_fu_3149_p3;
wire   [15:0] tmp_36_fu_2426_p4;
wire  signed [23:0] tmp_37_fu_2447_p1;
wire   [23:0] grp_fu_3157_p3;
wire   [15:0] tmp_37_fu_2447_p4;
wire  signed [23:0] tmp_38_fu_2468_p1;
wire   [23:0] grp_fu_3165_p3;
wire   [15:0] tmp_38_fu_2468_p4;
wire  signed [8:0] sext_ln73_45_fu_2485_p1;
wire  signed [23:0] tmp_39_fu_2493_p1;
wire   [23:0] grp_fu_3173_p3;
wire   [15:0] tmp_39_fu_2493_p4;
wire  signed [8:0] sext_ln73_46_fu_2510_p1;
wire  signed [23:0] tmp_40_fu_2518_p1;
wire   [23:0] grp_fu_3181_p3;
wire   [15:0] tmp_40_fu_2518_p4;
wire   [23:0] grp_fu_3189_p3;
wire   [15:0] tmp_41_fu_2539_p4;
wire   [23:0] grp_fu_3197_p3;
wire   [15:0] tmp_42_fu_2560_p4;
wire  signed [23:0] grp_fu_3205_p3;
wire   [15:0] tmp_43_fu_2581_p4;
wire   [23:0] grp_fu_3213_p3;
wire   [15:0] tmp_44_fu_2602_p4;
wire  signed [23:0] tmp_45_fu_2623_p1;
wire   [23:0] grp_fu_3221_p3;
wire   [15:0] tmp_45_fu_2623_p4;
wire  signed [23:0] tmp_46_fu_2644_p1;
wire   [23:0] grp_fu_3229_p3;
wire   [15:0] tmp_46_fu_2644_p4;
wire  signed [23:0] tmp_47_fu_2665_p1;
wire   [23:0] grp_fu_3237_p3;
wire   [15:0] tmp_47_fu_2665_p4;
wire  signed [23:0] grp_fu_3245_p3;
wire   [15:0] tmp_48_fu_2686_p4;
wire   [23:0] grp_fu_3253_p3;
wire   [15:0] tmp_49_fu_2707_p4;
wire  signed [23:0] tmp_50_fu_2728_p1;
wire   [23:0] grp_fu_3261_p3;
wire   [15:0] tmp_50_fu_2728_p4;
wire  signed [4:0] sext_ln73_57_fu_2745_p1;
wire  signed [23:0] tmp_51_fu_2753_p1;
wire   [23:0] grp_fu_3269_p3;
wire   [15:0] tmp_51_fu_2753_p4;
wire  signed [23:0] tmp_52_fu_2774_p1;
wire   [23:0] grp_fu_3277_p3;
wire   [15:0] tmp_52_fu_2774_p4;
wire   [23:0] grp_fu_3285_p3;
wire   [15:0] tmp_53_fu_2795_p4;
wire  signed [23:0] tmp_54_fu_2816_p1;
wire   [23:0] grp_fu_3293_p3;
wire   [15:0] tmp_54_fu_2816_p4;
wire   [23:0] grp_fu_3301_p3;
wire   [15:0] tmp_55_fu_2833_p4;
wire  signed [23:0] sum_fu_2850_p1;
wire   [23:0] grp_fu_3309_p3;
wire  signed [15:0] sext_ln75_fu_2859_p1;
wire   [15:0] sum_fu_2850_p4;
wire   [14:0] grp_fu_2869_p1;
wire  signed [23:0] grp_fu_2869_p2;
wire   [14:0] grp_fu_2877_p1;
wire   [23:0] grp_fu_2877_p2;
wire   [14:0] grp_fu_2885_p1;
wire   [23:0] grp_fu_2885_p2;
wire   [14:0] grp_fu_2893_p1;
wire   [23:0] grp_fu_2893_p2;
wire   [14:0] grp_fu_2901_p1;
wire  signed [23:0] grp_fu_2901_p2;
wire   [14:0] grp_fu_2909_p1;
wire   [23:0] grp_fu_2909_p2;
wire   [14:0] grp_fu_2917_p1;
wire   [23:0] grp_fu_2917_p2;
wire   [10:0] grp_fu_2925_p0;
wire   [14:0] grp_fu_2925_p1;
wire   [23:0] grp_fu_2925_p2;
wire   [14:0] grp_fu_2933_p1;
wire   [23:0] grp_fu_2933_p2;
wire   [14:0] grp_fu_2941_p1;
wire   [23:0] grp_fu_2941_p2;
wire   [14:0] grp_fu_2949_p1;
wire   [23:0] grp_fu_2949_p2;
wire   [14:0] grp_fu_2957_p1;
wire   [23:0] grp_fu_2957_p2;
wire   [14:0] grp_fu_2965_p1;
wire   [23:0] grp_fu_2965_p2;
wire   [14:0] grp_fu_2973_p1;
wire   [23:0] grp_fu_2973_p2;
wire   [14:0] grp_fu_2981_p1;
wire   [23:0] grp_fu_2981_p2;
wire   [14:0] grp_fu_2989_p1;
wire   [23:0] grp_fu_2989_p2;
wire   [9:0] grp_fu_2997_p0;
wire   [14:0] grp_fu_2997_p1;
wire   [23:0] grp_fu_2997_p2;
wire   [14:0] grp_fu_3005_p1;
wire  signed [23:0] grp_fu_3005_p2;
wire   [10:0] grp_fu_3013_p0;
wire   [14:0] grp_fu_3013_p1;
wire   [23:0] grp_fu_3013_p2;
wire   [14:0] grp_fu_3021_p1;
wire   [23:0] grp_fu_3021_p2;
wire   [14:0] grp_fu_3029_p1;
wire   [23:0] grp_fu_3029_p2;
wire   [14:0] grp_fu_3037_p1;
wire  signed [23:0] grp_fu_3037_p2;
wire   [14:0] grp_fu_3045_p1;
wire  signed [23:0] grp_fu_3045_p2;
wire   [14:0] grp_fu_3053_p1;
wire   [23:0] grp_fu_3053_p2;
wire   [14:0] grp_fu_3061_p1;
wire   [23:0] grp_fu_3061_p2;
wire   [14:0] grp_fu_3069_p1;
wire  signed [23:0] grp_fu_3069_p2;
wire   [14:0] grp_fu_3077_p1;
wire   [23:0] grp_fu_3077_p2;
wire   [14:0] grp_fu_3085_p1;
wire   [23:0] grp_fu_3085_p2;
wire   [14:0] grp_fu_3093_p1;
wire   [23:0] grp_fu_3093_p2;
wire   [9:0] grp_fu_3101_p0;
wire   [14:0] grp_fu_3101_p1;
wire   [23:0] grp_fu_3101_p2;
wire   [14:0] grp_fu_3109_p1;
wire   [23:0] grp_fu_3109_p2;
wire   [14:0] grp_fu_3117_p1;
wire   [23:0] grp_fu_3117_p2;
wire   [14:0] grp_fu_3125_p1;
wire  signed [23:0] grp_fu_3125_p2;
wire   [14:0] grp_fu_3133_p1;
wire   [23:0] grp_fu_3133_p2;
wire   [14:0] grp_fu_3141_p1;
wire   [23:0] grp_fu_3141_p2;
wire   [14:0] grp_fu_3149_p1;
wire   [23:0] grp_fu_3149_p2;
wire   [14:0] grp_fu_3157_p1;
wire   [23:0] grp_fu_3157_p2;
wire   [14:0] grp_fu_3165_p1;
wire   [23:0] grp_fu_3165_p2;
wire   [14:0] grp_fu_3173_p1;
wire   [23:0] grp_fu_3173_p2;
wire   [14:0] grp_fu_3181_p1;
wire   [23:0] grp_fu_3181_p2;
wire   [8:0] grp_fu_3189_p0;
wire   [14:0] grp_fu_3189_p1;
wire   [23:0] grp_fu_3189_p2;
wire   [8:0] grp_fu_3197_p0;
wire   [14:0] grp_fu_3197_p1;
wire   [23:0] grp_fu_3197_p2;
wire   [14:0] grp_fu_3205_p1;
wire  signed [23:0] grp_fu_3205_p2;
wire   [6:0] grp_fu_3213_p0;
wire   [14:0] grp_fu_3213_p1;
wire   [23:0] grp_fu_3213_p2;
wire   [14:0] grp_fu_3221_p1;
wire   [23:0] grp_fu_3221_p2;
wire   [14:0] grp_fu_3229_p1;
wire   [23:0] grp_fu_3229_p2;
wire   [14:0] grp_fu_3237_p1;
wire   [23:0] grp_fu_3237_p2;
wire   [14:0] grp_fu_3245_p1;
wire  signed [23:0] grp_fu_3245_p2;
wire   [6:0] grp_fu_3253_p0;
wire   [14:0] grp_fu_3253_p1;
wire   [23:0] grp_fu_3253_p2;
wire   [14:0] grp_fu_3261_p1;
wire   [23:0] grp_fu_3261_p2;
wire   [14:0] grp_fu_3269_p1;
wire   [23:0] grp_fu_3269_p2;
wire   [14:0] grp_fu_3277_p1;
wire   [23:0] grp_fu_3277_p2;
wire   [4:0] grp_fu_3285_p0;
wire   [14:0] grp_fu_3285_p1;
wire   [23:0] grp_fu_3285_p2;
wire   [14:0] grp_fu_3293_p1;
wire   [23:0] grp_fu_3293_p2;
wire   [4:0] grp_fu_3301_p0;
wire   [14:0] grp_fu_3301_p1;
wire   [23:0] grp_fu_3301_p2;
wire   [14:0] grp_fu_3309_p1;
wire   [23:0] grp_fu_3309_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [23:0] grp_fu_2925_p00;
wire   [23:0] grp_fu_2997_p00;
wire   [23:0] grp_fu_3013_p00;
wire   [23:0] grp_fu_3101_p00;
wire   [23:0] grp_fu_3189_p00;
wire   [23:0] grp_fu_3197_p00;
wire   [21:0] grp_fu_3213_p00;
wire   [21:0] grp_fu_3253_p00;
wire   [19:0] grp_fu_3285_p00;
wire   [19:0] grp_fu_3301_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_0_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_0_address0),
    .ce0(layer2_weights_0_ce0),
    .q0(layer2_weights_0_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_1_RAM_2P_BRAM_1R1W #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_1_address0),
    .ce0(layer2_weights_1_ce0),
    .q0(layer2_weights_1_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_2_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_2_address0),
    .ce0(layer2_weights_2_ce0),
    .q0(layer2_weights_2_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_3_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_3_address0),
    .ce0(layer2_weights_3_ce0),
    .q0(layer2_weights_3_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_4_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_4_address0),
    .ce0(layer2_weights_4_ce0),
    .q0(layer2_weights_4_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_5_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_5_address0),
    .ce0(layer2_weights_5_ce0),
    .q0(layer2_weights_5_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_6_RAM_2P_BRAM_1R1W #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_6_address0),
    .ce0(layer2_weights_6_ce0),
    .q0(layer2_weights_6_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_7_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_7_address0),
    .ce0(layer2_weights_7_ce0),
    .q0(layer2_weights_7_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_8_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_8_address0),
    .ce0(layer2_weights_8_ce0),
    .q0(layer2_weights_8_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_9_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_9_address0),
    .ce0(layer2_weights_9_ce0),
    .q0(layer2_weights_9_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_12_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_12_address0),
    .ce0(layer2_weights_12_ce0),
    .q0(layer2_weights_12_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_13_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_13_address0),
    .ce0(layer2_weights_13_ce0),
    .q0(layer2_weights_13_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_14_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_14_address0),
    .ce0(layer2_weights_14_ce0),
    .q0(layer2_weights_14_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_15_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_15_address0),
    .ce0(layer2_weights_15_ce0),
    .q0(layer2_weights_15_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_16_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_16_address0),
    .ce0(layer2_weights_16_ce0),
    .q0(layer2_weights_16_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_18_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_18_address0),
    .ce0(layer2_weights_18_ce0),
    .q0(layer2_weights_18_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_20_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_20_address0),
    .ce0(layer2_weights_20_ce0),
    .q0(layer2_weights_20_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_21_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_21_address0),
    .ce0(layer2_weights_21_ce0),
    .q0(layer2_weights_21_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_22_RAM_2P_BRAM_1R1W #(
    .DataWidth( 6 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_22_address0),
    .ce0(layer2_weights_22_ce0),
    .q0(layer2_weights_22_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_23_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_23_address0),
    .ce0(layer2_weights_23_ce0),
    .q0(layer2_weights_23_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_25_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_25_address0),
    .ce0(layer2_weights_25_ce0),
    .q0(layer2_weights_25_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_26_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_26_address0),
    .ce0(layer2_weights_26_ce0),
    .q0(layer2_weights_26_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_27_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_27_address0),
    .ce0(layer2_weights_27_ce0),
    .q0(layer2_weights_27_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_28_RAM_2P_BRAM_1R1W #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_28_address0),
    .ce0(layer2_weights_28_ce0),
    .q0(layer2_weights_28_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_29_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_29_address0),
    .ce0(layer2_weights_29_ce0),
    .q0(layer2_weights_29_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_30_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_30_address0),
    .ce0(layer2_weights_30_ce0),
    .q0(layer2_weights_30_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_31_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_31_address0),
    .ce0(layer2_weights_31_ce0),
    .q0(layer2_weights_31_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_32_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_32_address0),
    .ce0(layer2_weights_32_ce0),
    .q0(layer2_weights_32_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_33_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_33_address0),
    .ce0(layer2_weights_33_ce0),
    .q0(layer2_weights_33_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_34_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_34_address0),
    .ce0(layer2_weights_34_ce0),
    .q0(layer2_weights_34_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_35_RAM_2P_BRAM_1R1W #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_35_address0),
    .ce0(layer2_weights_35_ce0),
    .q0(layer2_weights_35_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_36_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_36_address0),
    .ce0(layer2_weights_36_ce0),
    .q0(layer2_weights_36_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_37_RAM_2P_BRAM_1R1W #(
    .DataWidth( 13 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_37_address0),
    .ce0(layer2_weights_37_ce0),
    .q0(layer2_weights_37_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_38_RAM_2P_BRAM_1R1W #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_38_address0),
    .ce0(layer2_weights_38_ce0),
    .q0(layer2_weights_38_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_39_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_39_address0),
    .ce0(layer2_weights_39_ce0),
    .q0(layer2_weights_39_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_40_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_40_address0),
    .ce0(layer2_weights_40_ce0),
    .q0(layer2_weights_40_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_41_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_41_address0),
    .ce0(layer2_weights_41_ce0),
    .q0(layer2_weights_41_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_42_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_42_address0),
    .ce0(layer2_weights_42_ce0),
    .q0(layer2_weights_42_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_43_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_43_address0),
    .ce0(layer2_weights_43_ce0),
    .q0(layer2_weights_43_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_44_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_44_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_44_address0),
    .ce0(layer2_weights_44_ce0),
    .q0(layer2_weights_44_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_45_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_45_address0),
    .ce0(layer2_weights_45_ce0),
    .q0(layer2_weights_45_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_46_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_46_address0),
    .ce0(layer2_weights_46_ce0),
    .q0(layer2_weights_46_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_48_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_48_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_48_address0),
    .ce0(layer2_weights_48_ce0),
    .q0(layer2_weights_48_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_49_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_49_address0),
    .ce0(layer2_weights_49_ce0),
    .q0(layer2_weights_49_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_50_RAM_2P_BRAM_1R1W #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_50_address0),
    .ce0(layer2_weights_50_ce0),
    .q0(layer2_weights_50_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_51_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_51_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_51_address0),
    .ce0(layer2_weights_51_ce0),
    .q0(layer2_weights_51_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_52_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_52_address0),
    .ce0(layer2_weights_52_ce0),
    .q0(layer2_weights_52_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_53_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_53_address0),
    .ce0(layer2_weights_53_ce0),
    .q0(layer2_weights_53_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_54_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_54_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_54_address0),
    .ce0(layer2_weights_54_ce0),
    .q0(layer2_weights_54_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_55_RAM_2P_BRAM_1R1W #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_55_address0),
    .ce0(layer2_weights_55_ce0),
    .q0(layer2_weights_55_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_56_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_56_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_56_address0),
    .ce0(layer2_weights_56_ce0),
    .q0(layer2_weights_56_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_57_RAM_2P_BRAM_1R1W #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_57_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_57_address0),
    .ce0(layer2_weights_57_ce0),
    .q0(layer2_weights_57_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_58_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_58_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_58_address0),
    .ce0(layer2_weights_58_ce0),
    .q0(layer2_weights_58_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_59_RAM_2P_BRAM_1R1W #(
    .DataWidth( 4 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_59_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_59_address0),
    .ce0(layer2_weights_59_ce0),
    .q0(layer2_weights_59_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_61_RAM_2P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_61_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_61_address0),
    .ce0(layer2_weights_61_ce0),
    .q0(layer2_weights_61_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_62_RAM_2P_BRAM_1R1W #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_62_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_62_address0),
    .ce0(layer2_weights_62_ce0),
    .q0(layer2_weights_62_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_weights_63_RAM_2P_BRAM_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_63_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_63_address0),
    .ce0(layer2_weights_63_ce0),
    .q0(layer2_weights_63_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_68_3_layer2_bias_RAM_1P_BRAM_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_bias_address0),
    .ce0(layer2_bias_ce0),
    .q0(layer2_bias_q0)
);

neural_network_mul_11s_15ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 24 ))
mul_11s_15ns_24_1_1_U139(
    .din0(layer2_weights_0_load_reg_3684),
    .din1(mul_ln73_fu_1657_p1),
    .dout(mul_ln73_fu_1657_p2)
);

neural_network_mac_muladd_7s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7s_15ns_24s_24_4_1_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_1_q0),
    .din1(grp_fu_2869_p1),
    .din2(grp_fu_2869_p2),
    .ce(1'b1),
    .dout(grp_fu_2869_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_2_q0),
    .din1(grp_fu_2877_p1),
    .din2(grp_fu_2877_p2),
    .ce(1'b1),
    .dout(grp_fu_2877_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_3_q0),
    .din1(grp_fu_2885_p1),
    .din2(grp_fu_2885_p2),
    .ce(1'b1),
    .dout(grp_fu_2885_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_4_q0),
    .din1(grp_fu_2893_p1),
    .din2(grp_fu_2893_p2),
    .ce(1'b1),
    .dout(grp_fu_2893_p3)
);

neural_network_mac_muladd_8s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_15ns_24s_24_4_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_5_q0),
    .din1(grp_fu_2901_p1),
    .din2(grp_fu_2901_p2),
    .ce(1'b1),
    .dout(grp_fu_2901_p3)
);

neural_network_mac_muladd_9s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9s_15ns_24ns_24_4_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_6_q0),
    .din1(grp_fu_2909_p1),
    .din2(grp_fu_2909_p2),
    .ce(1'b1),
    .dout(grp_fu_2909_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_7_q0),
    .din1(grp_fu_2917_p1),
    .din2(grp_fu_2917_p2),
    .ce(1'b1),
    .dout(grp_fu_2917_p3)
);

neural_network_mac_muladd_11ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11ns_15ns_24ns_24_4_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2925_p0),
    .din1(grp_fu_2925_p1),
    .din2(grp_fu_2925_p2),
    .ce(1'b1),
    .dout(grp_fu_2925_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_9_q0),
    .din1(grp_fu_2933_p1),
    .din2(grp_fu_2933_p2),
    .ce(1'b1),
    .dout(grp_fu_2933_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_12_q0),
    .din1(grp_fu_2941_p1),
    .din2(grp_fu_2941_p2),
    .ce(1'b1),
    .dout(grp_fu_2941_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_13_q0),
    .din1(grp_fu_2949_p1),
    .din2(grp_fu_2949_p2),
    .ce(1'b1),
    .dout(grp_fu_2949_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_14_q0),
    .din1(grp_fu_2957_p1),
    .din2(grp_fu_2957_p2),
    .ce(1'b1),
    .dout(grp_fu_2957_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_15_q0),
    .din1(grp_fu_2965_p1),
    .din2(grp_fu_2965_p2),
    .ce(1'b1),
    .dout(grp_fu_2965_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_16_q0),
    .din1(grp_fu_2973_p1),
    .din2(grp_fu_2973_p2),
    .ce(1'b1),
    .dout(grp_fu_2973_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_18_q0),
    .din1(grp_fu_2981_p1),
    .din2(grp_fu_2981_p2),
    .ce(1'b1),
    .dout(grp_fu_2981_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_20_q0),
    .din1(grp_fu_2989_p1),
    .din2(grp_fu_2989_p2),
    .ce(1'b1),
    .dout(grp_fu_2989_p3)
);

neural_network_mac_muladd_10ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10ns_15ns_24ns_24_4_1_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2997_p0),
    .din1(grp_fu_2997_p1),
    .din2(grp_fu_2997_p2),
    .ce(1'b1),
    .dout(grp_fu_2997_p3)
);

neural_network_mac_muladd_6s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_6s_15ns_24s_24_4_1_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_22_q0),
    .din1(grp_fu_3005_p1),
    .din2(grp_fu_3005_p2),
    .ce(1'b1),
    .dout(grp_fu_3005_p3)
);

neural_network_mac_muladd_11ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11ns_15ns_24ns_24_4_1_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3013_p0),
    .din1(grp_fu_3013_p1),
    .din2(grp_fu_3013_p2),
    .ce(1'b1),
    .dout(grp_fu_3013_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_25_q0),
    .din1(grp_fu_3021_p1),
    .din2(grp_fu_3021_p2),
    .ce(1'b1),
    .dout(grp_fu_3021_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_26_q0),
    .din1(grp_fu_3029_p1),
    .din2(grp_fu_3029_p2),
    .ce(1'b1),
    .dout(grp_fu_3029_p3)
);

neural_network_mac_muladd_8s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_15ns_24s_24_4_1_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_27_q0),
    .din1(grp_fu_3037_p1),
    .din2(grp_fu_3037_p2),
    .ce(1'b1),
    .dout(grp_fu_3037_p3)
);

neural_network_mac_muladd_7s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7s_15ns_24s_24_4_1_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_28_q0),
    .din1(grp_fu_3045_p1),
    .din2(grp_fu_3045_p2),
    .ce(1'b1),
    .dout(grp_fu_3045_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_29_q0),
    .din1(grp_fu_3053_p1),
    .din2(grp_fu_3053_p2),
    .ce(1'b1),
    .dout(grp_fu_3053_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_30_q0),
    .din1(grp_fu_3061_p1),
    .din2(grp_fu_3061_p2),
    .ce(1'b1),
    .dout(grp_fu_3061_p3)
);

neural_network_mac_muladd_8s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_15ns_24s_24_4_1_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_31_q0),
    .din1(grp_fu_3069_p1),
    .din2(grp_fu_3069_p2),
    .ce(1'b1),
    .dout(grp_fu_3069_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_32_q0),
    .din1(grp_fu_3077_p1),
    .din2(grp_fu_3077_p2),
    .ce(1'b1),
    .dout(grp_fu_3077_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U167(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_33_q0),
    .din1(grp_fu_3085_p1),
    .din2(grp_fu_3085_p2),
    .ce(1'b1),
    .dout(grp_fu_3085_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_34_q0),
    .din1(grp_fu_3093_p1),
    .din2(grp_fu_3093_p2),
    .ce(1'b1),
    .dout(grp_fu_3093_p3)
);

neural_network_mac_muladd_10ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10ns_15ns_24ns_24_4_1_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3101_p0),
    .din1(grp_fu_3101_p1),
    .din2(grp_fu_3101_p2),
    .ce(1'b1),
    .dout(grp_fu_3101_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U170(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_36_q0),
    .din1(grp_fu_3109_p1),
    .din2(grp_fu_3109_p2),
    .ce(1'b1),
    .dout(grp_fu_3109_p3)
);

neural_network_mac_muladd_13s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_15ns_24ns_24_4_1_U171(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_37_q0),
    .din1(grp_fu_3117_p1),
    .din2(grp_fu_3117_p2),
    .ce(1'b1),
    .dout(grp_fu_3117_p3)
);

neural_network_mac_muladd_5s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_5s_15ns_24s_24_4_1_U172(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_38_q0),
    .din1(grp_fu_3125_p1),
    .din2(grp_fu_3125_p2),
    .ce(1'b1),
    .dout(grp_fu_3125_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U173(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_39_q0),
    .din1(grp_fu_3133_p1),
    .din2(grp_fu_3133_p2),
    .ce(1'b1),
    .dout(grp_fu_3133_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_40_q0),
    .din1(grp_fu_3141_p1),
    .din2(grp_fu_3141_p2),
    .ce(1'b1),
    .dout(grp_fu_3141_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_41_q0),
    .din1(grp_fu_3149_p1),
    .din2(grp_fu_3149_p2),
    .ce(1'b1),
    .dout(grp_fu_3149_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U176(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_42_q0),
    .din1(grp_fu_3157_p1),
    .din2(grp_fu_3157_p2),
    .ce(1'b1),
    .dout(grp_fu_3157_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_43_q0),
    .din1(grp_fu_3165_p1),
    .din2(grp_fu_3165_p2),
    .ce(1'b1),
    .dout(grp_fu_3165_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_44_q0),
    .din1(grp_fu_3173_p1),
    .din2(grp_fu_3173_p2),
    .ce(1'b1),
    .dout(grp_fu_3173_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U179(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_45_q0),
    .din1(grp_fu_3181_p1),
    .din2(grp_fu_3181_p2),
    .ce(1'b1),
    .dout(grp_fu_3181_p3)
);

neural_network_mac_muladd_9ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9ns_15ns_24ns_24_4_1_U180(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3189_p0),
    .din1(grp_fu_3189_p1),
    .din2(grp_fu_3189_p2),
    .ce(1'b1),
    .dout(grp_fu_3189_p3)
);

neural_network_mac_muladd_9ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9ns_15ns_24ns_24_4_1_U181(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3197_p0),
    .din1(grp_fu_3197_p1),
    .din2(grp_fu_3197_p2),
    .ce(1'b1),
    .dout(grp_fu_3197_p3)
);

neural_network_mac_muladd_8s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_15ns_24s_24_4_1_U182(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_49_q0),
    .din1(grp_fu_3205_p1),
    .din2(grp_fu_3205_p2),
    .ce(1'b1),
    .dout(grp_fu_3205_p3)
);

neural_network_mac_muladd_7ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7ns_15ns_24ns_24_4_1_U183(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3213_p0),
    .din1(grp_fu_3213_p1),
    .din2(grp_fu_3213_p2),
    .ce(1'b1),
    .dout(grp_fu_3213_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U184(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_51_q0),
    .din1(grp_fu_3221_p1),
    .din2(grp_fu_3221_p2),
    .ce(1'b1),
    .dout(grp_fu_3221_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U185(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_52_q0),
    .din1(grp_fu_3229_p1),
    .din2(grp_fu_3229_p2),
    .ce(1'b1),
    .dout(grp_fu_3229_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_53_q0),
    .din1(grp_fu_3237_p1),
    .din2(grp_fu_3237_p2),
    .ce(1'b1),
    .dout(grp_fu_3237_p3)
);

neural_network_mac_muladd_8s_15ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_15ns_24s_24_4_1_U187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_54_q0),
    .din1(grp_fu_3245_p1),
    .din2(grp_fu_3245_p2),
    .ce(1'b1),
    .dout(grp_fu_3245_p3)
);

neural_network_mac_muladd_7ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7ns_15ns_24ns_24_4_1_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3253_p0),
    .din1(grp_fu_3253_p1),
    .din2(grp_fu_3253_p2),
    .ce(1'b1),
    .dout(grp_fu_3253_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_56_q0),
    .din1(grp_fu_3261_p1),
    .din2(grp_fu_3261_p2),
    .ce(1'b1),
    .dout(grp_fu_3261_p3)
);

neural_network_mac_muladd_12s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_15ns_24ns_24_4_1_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_57_q0),
    .din1(grp_fu_3269_p1),
    .din2(grp_fu_3269_p2),
    .ce(1'b1),
    .dout(grp_fu_3269_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_58_q0),
    .din1(grp_fu_3277_p1),
    .din2(grp_fu_3277_p2),
    .ce(1'b1),
    .dout(grp_fu_3277_p3)
);

neural_network_mac_muladd_5ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_5ns_15ns_24ns_24_4_1_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3285_p0),
    .din1(grp_fu_3285_p1),
    .din2(grp_fu_3285_p2),
    .ce(1'b1),
    .dout(grp_fu_3285_p3)
);

neural_network_mac_muladd_11s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_15ns_24ns_24_4_1_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_61_q0),
    .din1(grp_fu_3293_p1),
    .din2(grp_fu_3293_p2),
    .ce(1'b1),
    .dout(grp_fu_3293_p3)
);

neural_network_mac_muladd_5ns_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_5ns_15ns_24ns_24_4_1_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3301_p0),
    .din1(grp_fu_3301_p1),
    .din2(grp_fu_3301_p2),
    .ce(1'b1),
    .dout(grp_fu_3301_p3)
);

neural_network_mac_muladd_10s_15ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_15ns_24ns_24_4_1_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_63_q0),
    .din1(grp_fu_3309_p1),
    .din2(grp_fu_3309_p2),
    .ce(1'b1),
    .dout(grp_fu_3309_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter58_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln68_fu_1627_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_278 <= add_ln68_fu_1633_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_278 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        layer2_bias_load_reg_4534 <= layer2_bias_q0;
        tmp_s_reg_3699 <= {{mul_ln73_fu_1657_p2[23:8]}};
        zext_ln68_reg_3613_pp0_iter10_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter9_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter11_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter10_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter12_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter11_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter13_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter12_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter14_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter13_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter15_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter14_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter16_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter15_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter17_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter16_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter18_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter17_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter19_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter18_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter20_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter19_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter21_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter20_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter22_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter21_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter23_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter22_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter24_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter23_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter25_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter24_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter26_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter25_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter27_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter26_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter28_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter27_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter29_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter28_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter2_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter1_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter30_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter29_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter31_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter30_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter32_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter31_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter33_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter32_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter34_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter33_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter35_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter34_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter36_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter35_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter37_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter36_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter38_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter37_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter39_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter38_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter3_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter2_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter40_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter39_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter41_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter40_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter42_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter41_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter43_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter42_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter44_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter43_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter45_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter44_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter46_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter45_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter47_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter46_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter48_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter47_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter49_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter48_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter4_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter3_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter50_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter49_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter51_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter50_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter52_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter51_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter53_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter52_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter54_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter53_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter55_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter54_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter56_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter55_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter57_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter56_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter58_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter57_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter5_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter4_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter6_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter5_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter7_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter6_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter8_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter7_reg[3 : 0];
        zext_ln68_reg_3613_pp0_iter9_reg[3 : 0] <= zext_ln68_reg_3613_pp0_iter8_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv_i86_1_cast_cast_reg_3599[14 : 0] <= conv_i86_1_cast_cast_fu_1611_p1[14 : 0];
        conv_i86_22_cast_cast_reg_3514[14 : 0] <= conv_i86_22_cast_cast_fu_1543_p1[14 : 0];
        conv_i86_27_cast_cast_reg_3494[14 : 0] <= conv_i86_27_cast_cast_fu_1527_p1[14 : 0];
        conv_i86_28_cast_cast_reg_3489[14 : 0] <= conv_i86_28_cast_cast_fu_1523_p1[14 : 0];
        conv_i86_31_cast_cast_reg_3474[14 : 0] <= conv_i86_31_cast_cast_fu_1511_p1[14 : 0];
        conv_i86_38_cast_cast_reg_3439[14 : 0] <= conv_i86_38_cast_cast_fu_1483_p1[14 : 0];
        conv_i86_46_cast_cast_reg_3399[14 : 0] <= conv_i86_46_cast_cast_fu_1451_p1[14 : 0];
        conv_i86_48_cast_cast_reg_3394[14 : 0] <= conv_i86_48_cast_cast_fu_1447_p1[14 : 0];
        conv_i86_49_cast_cast_reg_3389[14 : 0] <= conv_i86_49_cast_cast_fu_1443_p1[14 : 0];
        conv_i86_50_cast_cast_reg_3384[14 : 0] <= conv_i86_50_cast_cast_fu_1439_p1[14 : 0];
        conv_i86_54_cast_cast_reg_3364[14 : 0] <= conv_i86_54_cast_cast_fu_1423_p1[14 : 0];
        conv_i86_55_cast_cast_reg_3359[14 : 0] <= conv_i86_55_cast_cast_fu_1419_p1[14 : 0];
        conv_i86_59_cast_cast_reg_3339[14 : 0] <= conv_i86_59_cast_cast_fu_1403_p1[14 : 0];
        conv_i86_5_cast_cast_reg_3579[14 : 0] <= conv_i86_5_cast_cast_fu_1595_p1[14 : 0];
        conv_i86_62_cast_cast_reg_3329[14 : 0] <= conv_i86_62_cast_cast_fu_1395_p1[14 : 0];
        conv_i86_6_cast_cast_reg_3574[14 : 0] <= conv_i86_6_cast_cast_fu_1591_p1[14 : 0];
        layer2_weights_0_load_reg_3684 <= layer2_weights_0_q0;
        zext_ln68_reg_3613_pp0_iter1_reg[3 : 0] <= zext_ln68_reg_3613[3 : 0];
        zext_ln73_10_cast_reg_3539[14 : 0] <= zext_ln73_10_cast_fu_1563_p1[14 : 0];
        zext_ln73_11_cast_reg_3534[14 : 0] <= zext_ln73_11_cast_fu_1559_p1[14 : 0];
        zext_ln73_12_cast_reg_3529[14 : 0] <= zext_ln73_12_cast_fu_1555_p1[14 : 0];
        zext_ln73_13_cast_reg_3524[14 : 0] <= zext_ln73_13_cast_fu_1551_p1[14 : 0];
        zext_ln73_14_cast_reg_3519[14 : 0] <= zext_ln73_14_cast_fu_1547_p1[14 : 0];
        zext_ln73_15_cast_reg_3509[14 : 0] <= zext_ln73_15_cast_fu_1539_p1[14 : 0];
        zext_ln73_16_cast_reg_3504[14 : 0] <= zext_ln73_16_cast_fu_1535_p1[14 : 0];
        zext_ln73_17_cast_reg_3499[14 : 0] <= zext_ln73_17_cast_fu_1531_p1[14 : 0];
        zext_ln73_18_cast_reg_3484[14 : 0] <= zext_ln73_18_cast_fu_1519_p1[14 : 0];
        zext_ln73_19_cast_reg_3479[14 : 0] <= zext_ln73_19_cast_fu_1515_p1[14 : 0];
        zext_ln73_1_cast_reg_3594[14 : 0] <= zext_ln73_1_cast_fu_1607_p1[14 : 0];
        zext_ln73_20_cast_reg_3469[14 : 0] <= zext_ln73_20_cast_fu_1507_p1[14 : 0];
        zext_ln73_21_cast_reg_3464[14 : 0] <= zext_ln73_21_cast_fu_1503_p1[14 : 0];
        zext_ln73_22_cast_reg_3459[14 : 0] <= zext_ln73_22_cast_fu_1499_p1[14 : 0];
        zext_ln73_23_cast_reg_3454[14 : 0] <= zext_ln73_23_cast_fu_1495_p1[14 : 0];
        zext_ln73_24_cast_reg_3449[14 : 0] <= zext_ln73_24_cast_fu_1491_p1[14 : 0];
        zext_ln73_25_cast_reg_3444[14 : 0] <= zext_ln73_25_cast_fu_1487_p1[14 : 0];
        zext_ln73_26_cast_reg_3434[14 : 0] <= zext_ln73_26_cast_fu_1479_p1[14 : 0];
        zext_ln73_27_cast_reg_3429[14 : 0] <= zext_ln73_27_cast_fu_1475_p1[14 : 0];
        zext_ln73_28_cast_reg_3424[14 : 0] <= zext_ln73_28_cast_fu_1471_p1[14 : 0];
        zext_ln73_29_cast_reg_3419[14 : 0] <= zext_ln73_29_cast_fu_1467_p1[14 : 0];
        zext_ln73_2_cast_reg_3589[14 : 0] <= zext_ln73_2_cast_fu_1603_p1[14 : 0];
        zext_ln73_30_cast_reg_3414[14 : 0] <= zext_ln73_30_cast_fu_1463_p1[14 : 0];
        zext_ln73_31_cast_reg_3409[14 : 0] <= zext_ln73_31_cast_fu_1459_p1[14 : 0];
        zext_ln73_32_cast_reg_3404[14 : 0] <= zext_ln73_32_cast_fu_1455_p1[14 : 0];
        zext_ln73_33_cast_reg_3379[14 : 0] <= zext_ln73_33_cast_fu_1435_p1[14 : 0];
        zext_ln73_34_cast_reg_3374[14 : 0] <= zext_ln73_34_cast_fu_1431_p1[14 : 0];
        zext_ln73_35_cast_reg_3369[14 : 0] <= zext_ln73_35_cast_fu_1427_p1[14 : 0];
        zext_ln73_36_cast_reg_3354[14 : 0] <= zext_ln73_36_cast_fu_1415_p1[14 : 0];
        zext_ln73_37_cast_reg_3349[14 : 0] <= zext_ln73_37_cast_fu_1411_p1[14 : 0];
        zext_ln73_38_cast_reg_3344[14 : 0] <= zext_ln73_38_cast_fu_1407_p1[14 : 0];
        zext_ln73_39_cast_reg_3334[14 : 0] <= zext_ln73_39_cast_fu_1399_p1[14 : 0];
        zext_ln73_3_cast_reg_3584[14 : 0] <= zext_ln73_3_cast_fu_1599_p1[14 : 0];
        zext_ln73_40_cast_reg_3324[14 : 0] <= zext_ln73_40_cast_fu_1391_p1[14 : 0];
        zext_ln73_4_cast_reg_3569[14 : 0] <= zext_ln73_4_cast_fu_1587_p1[14 : 0];
        zext_ln73_5_cast_reg_3564[14 : 0] <= zext_ln73_5_cast_fu_1583_p1[14 : 0];
        zext_ln73_6_cast_reg_3559[14 : 0] <= zext_ln73_6_cast_fu_1579_p1[14 : 0];
        zext_ln73_7_cast_reg_3554[14 : 0] <= zext_ln73_7_cast_fu_1575_p1[14 : 0];
        zext_ln73_8_cast_reg_3549[14 : 0] <= zext_ln73_8_cast_fu_1571_p1[14 : 0];
        zext_ln73_9_cast_reg_3544[14 : 0] <= zext_ln73_9_cast_fu_1567_p1[14 : 0];
        zext_ln73_cast_reg_3604[14 : 0] <= zext_ln73_cast_fu_1615_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_1627_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln68_reg_3613[3 : 0] <= zext_ln68_fu_1639_p1[3 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_1627_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter58_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) 
    & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 
    == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_278;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter57 == 1'b1))) begin
        layer2_bias_ce0 = 1'b1;
    end else begin
        layer2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_ce0 = 1'b1;
    end else begin
        layer2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_we0 = 1'b1;
    end else begin
        layer2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weights_0_ce0 = 1'b1;
    end else begin
        layer2_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_12_ce0 = 1'b1;
    end else begin
        layer2_weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_13_ce0 = 1'b1;
    end else begin
        layer2_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_14_ce0 = 1'b1;
    end else begin
        layer2_weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_15_ce0 = 1'b1;
    end else begin
        layer2_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_16_ce0 = 1'b1;
    end else begin
        layer2_weights_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_18_ce0 = 1'b1;
    end else begin
        layer2_weights_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weights_1_ce0 = 1'b1;
    end else begin
        layer2_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_20_ce0 = 1'b1;
    end else begin
        layer2_weights_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_21_ce0 = 1'b1;
    end else begin
        layer2_weights_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_22_ce0 = 1'b1;
    end else begin
        layer2_weights_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_23_ce0 = 1'b1;
    end else begin
        layer2_weights_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_25_ce0 = 1'b1;
    end else begin
        layer2_weights_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_26_ce0 = 1'b1;
    end else begin
        layer2_weights_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_27_ce0 = 1'b1;
    end else begin
        layer2_weights_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_28_ce0 = 1'b1;
    end else begin
        layer2_weights_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_29_ce0 = 1'b1;
    end else begin
        layer2_weights_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weights_2_ce0 = 1'b1;
    end else begin
        layer2_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_30_ce0 = 1'b1;
    end else begin
        layer2_weights_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_31_ce0 = 1'b1;
    end else begin
        layer2_weights_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_32_ce0 = 1'b1;
    end else begin
        layer2_weights_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        layer2_weights_33_ce0 = 1'b1;
    end else begin
        layer2_weights_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        layer2_weights_34_ce0 = 1'b1;
    end else begin
        layer2_weights_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        layer2_weights_35_ce0 = 1'b1;
    end else begin
        layer2_weights_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        layer2_weights_36_ce0 = 1'b1;
    end else begin
        layer2_weights_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        layer2_weights_37_ce0 = 1'b1;
    end else begin
        layer2_weights_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        layer2_weights_38_ce0 = 1'b1;
    end else begin
        layer2_weights_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        layer2_weights_39_ce0 = 1'b1;
    end else begin
        layer2_weights_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_weights_3_ce0 = 1'b1;
    end else begin
        layer2_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        layer2_weights_40_ce0 = 1'b1;
    end else begin
        layer2_weights_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        layer2_weights_41_ce0 = 1'b1;
    end else begin
        layer2_weights_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        layer2_weights_42_ce0 = 1'b1;
    end else begin
        layer2_weights_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer2_weights_43_ce0 = 1'b1;
    end else begin
        layer2_weights_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        layer2_weights_44_ce0 = 1'b1;
    end else begin
        layer2_weights_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        layer2_weights_45_ce0 = 1'b1;
    end else begin
        layer2_weights_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        layer2_weights_46_ce0 = 1'b1;
    end else begin
        layer2_weights_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        layer2_weights_48_ce0 = 1'b1;
    end else begin
        layer2_weights_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        layer2_weights_49_ce0 = 1'b1;
    end else begin
        layer2_weights_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_4_ce0 = 1'b1;
    end else begin
        layer2_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        layer2_weights_50_ce0 = 1'b1;
    end else begin
        layer2_weights_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter44 == 1'b1))) begin
        layer2_weights_51_ce0 = 1'b1;
    end else begin
        layer2_weights_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        layer2_weights_52_ce0 = 1'b1;
    end else begin
        layer2_weights_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer2_weights_53_ce0 = 1'b1;
    end else begin
        layer2_weights_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        layer2_weights_54_ce0 = 1'b1;
    end else begin
        layer2_weights_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter48 == 1'b1))) begin
        layer2_weights_55_ce0 = 1'b1;
    end else begin
        layer2_weights_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        layer2_weights_56_ce0 = 1'b1;
    end else begin
        layer2_weights_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_57_ce0 = 1'b1;
    end else begin
        layer2_weights_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter51 == 1'b1))) begin
        layer2_weights_58_ce0 = 1'b1;
    end else begin
        layer2_weights_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter52 == 1'b1))) begin
        layer2_weights_59_ce0 = 1'b1;
    end else begin
        layer2_weights_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_5_ce0 = 1'b1;
    end else begin
        layer2_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter53 == 1'b1))) begin
        layer2_weights_61_ce0 = 1'b1;
    end else begin
        layer2_weights_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter54 == 1'b1))) begin
        layer2_weights_62_ce0 = 1'b1;
    end else begin
        layer2_weights_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter55 == 1'b1))) begin
        layer2_weights_63_ce0 = 1'b1;
    end else begin
        layer2_weights_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_6_ce0 = 1'b1;
    end else begin
        layer2_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_7_ce0 = 1'b1;
    end else begin
        layer2_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_8_ce0 = 1'b1;
    end else begin
        layer2_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_9_ce0 = 1'b1;
    end else begin
        layer2_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln68_fu_1633_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_i86_1_cast_cast_fu_1611_p1 = conv_i86_1_cast;

assign conv_i86_22_cast_cast_fu_1543_p1 = conv_i86_22_cast;

assign conv_i86_27_cast_cast_fu_1527_p1 = conv_i86_27_cast;

assign conv_i86_28_cast_cast_fu_1523_p1 = conv_i86_28_cast;

assign conv_i86_31_cast_cast_fu_1511_p1 = conv_i86_31_cast;

assign conv_i86_38_cast_cast_fu_1483_p1 = conv_i86_38_cast;

assign conv_i86_46_cast_cast_fu_1451_p1 = conv_i86_46_cast;

assign conv_i86_48_cast_cast_fu_1447_p1 = conv_i86_48_cast;

assign conv_i86_49_cast_cast_fu_1443_p1 = conv_i86_49_cast;

assign conv_i86_50_cast_cast_fu_1439_p1 = conv_i86_50_cast;

assign conv_i86_54_cast_cast_fu_1423_p1 = conv_i86_54_cast;

assign conv_i86_55_cast_cast_fu_1419_p1 = conv_i86_55_cast;

assign conv_i86_59_cast_cast_fu_1403_p1 = conv_i86_59_cast;

assign conv_i86_5_cast_cast_fu_1595_p1 = conv_i86_5_cast;

assign conv_i86_62_cast_cast_fu_1395_p1 = conv_i86_62_cast;

assign conv_i86_6_cast_cast_fu_1591_p1 = conv_i86_6_cast;

assign grp_fu_2869_p1 = conv_i86_1_cast_cast_reg_3599;

assign grp_fu_2869_p2 = {{tmp_s_reg_3699}, {8'd0}};

assign grp_fu_2877_p1 = zext_ln73_1_cast_reg_3594;

assign grp_fu_2877_p2 = {{tmp_1_fu_1687_p4}, {8'd0}};

assign grp_fu_2885_p1 = zext_ln73_2_cast_reg_3589;

assign grp_fu_2885_p2 = {{tmp_2_fu_1708_p4}, {8'd0}};

assign grp_fu_2893_p1 = zext_ln73_3_cast_reg_3584;

assign grp_fu_2893_p2 = {{tmp_3_fu_1729_p4}, {8'd0}};

assign grp_fu_2901_p1 = conv_i86_5_cast_cast_reg_3579;

assign grp_fu_2901_p2 = {{tmp_4_fu_1750_p4}, {8'd0}};

assign grp_fu_2909_p1 = conv_i86_6_cast_cast_reg_3574;

assign grp_fu_2909_p2 = {{tmp_5_fu_1771_p4}, {8'd0}};

assign grp_fu_2917_p1 = zext_ln73_4_cast_reg_3569;

assign grp_fu_2917_p2 = {{tmp_6_fu_1792_p4}, {8'd0}};

assign grp_fu_2925_p0 = grp_fu_2925_p00;

assign grp_fu_2925_p00 = layer2_weights_8_q0;

assign grp_fu_2925_p1 = zext_ln73_5_cast_reg_3564;

assign grp_fu_2925_p2 = {{tmp_7_fu_1813_p4}, {8'd0}};

assign grp_fu_2933_p1 = zext_ln73_6_cast_reg_3559;

assign grp_fu_2933_p2 = {{tmp_8_fu_1834_p4}, {8'd0}};

assign grp_fu_2941_p1 = zext_ln73_7_cast_reg_3554;

assign grp_fu_2941_p2 = {{tmp_9_fu_1855_p4}, {8'd0}};

assign grp_fu_2949_p1 = zext_ln73_8_cast_reg_3549;

assign grp_fu_2949_p2 = {{tmp_10_fu_1876_p4}, {8'd0}};

assign grp_fu_2957_p1 = zext_ln73_9_cast_reg_3544;

assign grp_fu_2957_p2 = {{tmp_11_fu_1897_p4}, {8'd0}};

assign grp_fu_2965_p1 = zext_ln73_10_cast_reg_3539;

assign grp_fu_2965_p2 = {{tmp_12_fu_1918_p4}, {8'd0}};

assign grp_fu_2973_p1 = zext_ln73_11_cast_reg_3534;

assign grp_fu_2973_p2 = {{tmp_13_fu_1939_p4}, {8'd0}};

assign grp_fu_2981_p1 = zext_ln73_12_cast_reg_3529;

assign grp_fu_2981_p2 = {{tmp_14_fu_1960_p4}, {8'd0}};

assign grp_fu_2989_p1 = zext_ln73_13_cast_reg_3524;

assign grp_fu_2989_p2 = {{tmp_15_fu_1981_p4}, {8'd0}};

assign grp_fu_2997_p0 = grp_fu_2997_p00;

assign grp_fu_2997_p00 = layer2_weights_21_q0;

assign grp_fu_2997_p1 = zext_ln73_14_cast_reg_3519;

assign grp_fu_2997_p2 = {{tmp_16_fu_2002_p4}, {8'd0}};

assign grp_fu_3005_p1 = conv_i86_22_cast_cast_reg_3514;

assign grp_fu_3005_p2 = {{tmp_17_fu_2023_p4}, {8'd0}};

assign grp_fu_3013_p0 = grp_fu_3013_p00;

assign grp_fu_3013_p00 = layer2_weights_23_q0;

assign grp_fu_3013_p1 = zext_ln73_15_cast_reg_3509;

assign grp_fu_3013_p2 = {{tmp_18_fu_2044_p4}, {8'd0}};

assign grp_fu_3021_p1 = zext_ln73_16_cast_reg_3504;

assign grp_fu_3021_p2 = {{tmp_19_fu_2065_p4}, {8'd0}};

assign grp_fu_3029_p1 = zext_ln73_17_cast_reg_3499;

assign grp_fu_3029_p2 = {{tmp_20_fu_2086_p4}, {8'd0}};

assign grp_fu_3037_p1 = conv_i86_27_cast_cast_reg_3494;

assign grp_fu_3037_p2 = {{tmp_21_fu_2107_p4}, {8'd0}};

assign grp_fu_3045_p1 = conv_i86_28_cast_cast_reg_3489;

assign grp_fu_3045_p2 = {{tmp_22_fu_2128_p4}, {8'd0}};

assign grp_fu_3053_p1 = zext_ln73_18_cast_reg_3484;

assign grp_fu_3053_p2 = {{tmp_23_fu_2149_p4}, {8'd0}};

assign grp_fu_3061_p1 = zext_ln73_19_cast_reg_3479;

assign grp_fu_3061_p2 = {{tmp_24_fu_2170_p4}, {8'd0}};

assign grp_fu_3069_p1 = conv_i86_31_cast_cast_reg_3474;

assign grp_fu_3069_p2 = {{tmp_25_fu_2191_p4}, {8'd0}};

assign grp_fu_3077_p1 = zext_ln73_20_cast_reg_3469;

assign grp_fu_3077_p2 = {{tmp_26_fu_2212_p4}, {8'd0}};

assign grp_fu_3085_p1 = zext_ln73_21_cast_reg_3464;

assign grp_fu_3085_p2 = {{tmp_27_fu_2233_p4}, {8'd0}};

assign grp_fu_3093_p1 = zext_ln73_22_cast_reg_3459;

assign grp_fu_3093_p2 = {{tmp_28_fu_2258_p4}, {8'd0}};

assign grp_fu_3101_p0 = grp_fu_3101_p00;

assign grp_fu_3101_p00 = $unsigned(sext_ln73_33_fu_2250_p1);

assign grp_fu_3101_p1 = zext_ln73_23_cast_reg_3454;

assign grp_fu_3101_p2 = {{tmp_29_fu_2279_p4}, {8'd0}};

assign grp_fu_3109_p1 = zext_ln73_24_cast_reg_3449;

assign grp_fu_3109_p2 = {{tmp_30_fu_2300_p4}, {8'd0}};

assign grp_fu_3117_p1 = zext_ln73_25_cast_reg_3444;

assign grp_fu_3117_p2 = {{tmp_31_fu_2321_p4}, {8'd0}};

assign grp_fu_3125_p1 = conv_i86_38_cast_cast_reg_3439;

assign grp_fu_3125_p2 = {{tmp_32_fu_2342_p4}, {8'd0}};

assign grp_fu_3133_p1 = zext_ln73_26_cast_reg_3434;

assign grp_fu_3133_p2 = {{tmp_33_fu_2363_p4}, {8'd0}};

assign grp_fu_3141_p1 = zext_ln73_27_cast_reg_3429;

assign grp_fu_3141_p2 = {{tmp_34_fu_2384_p4}, {8'd0}};

assign grp_fu_3149_p1 = zext_ln73_28_cast_reg_3424;

assign grp_fu_3149_p2 = {{tmp_35_fu_2405_p4}, {8'd0}};

assign grp_fu_3157_p1 = zext_ln73_29_cast_reg_3419;

assign grp_fu_3157_p2 = {{tmp_36_fu_2426_p4}, {8'd0}};

assign grp_fu_3165_p1 = zext_ln73_30_cast_reg_3414;

assign grp_fu_3165_p2 = {{tmp_37_fu_2447_p4}, {8'd0}};

assign grp_fu_3173_p1 = zext_ln73_31_cast_reg_3409;

assign grp_fu_3173_p2 = {{tmp_38_fu_2468_p4}, {8'd0}};

assign grp_fu_3181_p1 = zext_ln73_32_cast_reg_3404;

assign grp_fu_3181_p2 = {{tmp_39_fu_2493_p4}, {8'd0}};

assign grp_fu_3189_p0 = grp_fu_3189_p00;

assign grp_fu_3189_p00 = $unsigned(sext_ln73_45_fu_2485_p1);

assign grp_fu_3189_p1 = conv_i86_46_cast_cast_reg_3399;

assign grp_fu_3189_p2 = {{tmp_40_fu_2518_p4}, {8'd0}};

assign grp_fu_3197_p0 = grp_fu_3197_p00;

assign grp_fu_3197_p00 = $unsigned(sext_ln73_46_fu_2510_p1);

assign grp_fu_3197_p1 = conv_i86_48_cast_cast_reg_3394;

assign grp_fu_3197_p2 = {{tmp_41_fu_2539_p4}, {8'd0}};

assign grp_fu_3205_p1 = conv_i86_49_cast_cast_reg_3389;

assign grp_fu_3205_p2 = {{tmp_42_fu_2560_p4}, {8'd0}};

assign grp_fu_3213_p0 = grp_fu_3213_p00;

assign grp_fu_3213_p00 = layer2_weights_50_q0;

assign grp_fu_3213_p1 = conv_i86_50_cast_cast_reg_3384;

assign grp_fu_3213_p2 = {{tmp_43_fu_2581_p4}, {8'd0}};

assign grp_fu_3221_p1 = zext_ln73_33_cast_reg_3379;

assign grp_fu_3221_p2 = {{tmp_44_fu_2602_p4}, {8'd0}};

assign grp_fu_3229_p1 = zext_ln73_34_cast_reg_3374;

assign grp_fu_3229_p2 = {{tmp_45_fu_2623_p4}, {8'd0}};

assign grp_fu_3237_p1 = zext_ln73_35_cast_reg_3369;

assign grp_fu_3237_p2 = {{tmp_46_fu_2644_p4}, {8'd0}};

assign grp_fu_3245_p1 = conv_i86_54_cast_cast_reg_3364;

assign grp_fu_3245_p2 = {{tmp_47_fu_2665_p4}, {8'd0}};

assign grp_fu_3253_p0 = grp_fu_3253_p00;

assign grp_fu_3253_p00 = layer2_weights_55_q0;

assign grp_fu_3253_p1 = conv_i86_55_cast_cast_reg_3359;

assign grp_fu_3253_p2 = {{tmp_48_fu_2686_p4}, {8'd0}};

assign grp_fu_3261_p1 = zext_ln73_36_cast_reg_3354;

assign grp_fu_3261_p2 = {{tmp_49_fu_2707_p4}, {8'd0}};

assign grp_fu_3269_p1 = zext_ln73_37_cast_reg_3349;

assign grp_fu_3269_p2 = {{tmp_50_fu_2728_p4}, {8'd0}};

assign grp_fu_3277_p1 = zext_ln73_38_cast_reg_3344;

assign grp_fu_3277_p2 = {{tmp_51_fu_2753_p4}, {8'd0}};

assign grp_fu_3285_p0 = grp_fu_3285_p00;

assign grp_fu_3285_p00 = $unsigned(sext_ln73_57_fu_2745_p1);

assign grp_fu_3285_p1 = conv_i86_59_cast_cast_reg_3339;

assign grp_fu_3285_p2 = {{tmp_52_fu_2774_p4}, {8'd0}};

assign grp_fu_3293_p1 = zext_ln73_39_cast_reg_3334;

assign grp_fu_3293_p2 = {{tmp_53_fu_2795_p4}, {8'd0}};

assign grp_fu_3301_p0 = grp_fu_3301_p00;

assign grp_fu_3301_p00 = layer2_weights_62_q0;

assign grp_fu_3301_p1 = conv_i86_62_cast_cast_reg_3329;

assign grp_fu_3301_p2 = {{tmp_54_fu_2816_p4}, {8'd0}};

assign grp_fu_3309_p1 = zext_ln73_40_cast_reg_3324;

assign grp_fu_3309_p2 = {{tmp_55_fu_2833_p4}, {8'd0}};

assign icmp_ln68_fu_1627_p2 = ((ap_sig_allocacmp_i_1 == 4'd10) ? 1'b1 : 1'b0);

assign layer2_bias_address0 = zext_ln68_reg_3613_pp0_iter56_reg;

assign layer2_output_address0 = zext_ln68_reg_3613_pp0_iter58_reg;

assign layer2_output_d0 = ($signed(sext_ln75_fu_2859_p1) + $signed(sum_fu_2850_p4));

assign layer2_weights_0_address0 = zext_ln68_fu_1639_p1;

assign layer2_weights_12_address0 = zext_ln68_reg_3613_pp0_iter8_reg;

assign layer2_weights_13_address0 = zext_ln68_reg_3613_pp0_iter9_reg;

assign layer2_weights_14_address0 = zext_ln68_reg_3613_pp0_iter10_reg;

assign layer2_weights_15_address0 = zext_ln68_reg_3613_pp0_iter11_reg;

assign layer2_weights_16_address0 = zext_ln68_reg_3613_pp0_iter12_reg;

assign layer2_weights_18_address0 = zext_ln68_reg_3613_pp0_iter13_reg;

assign layer2_weights_1_address0 = zext_ln68_fu_1639_p1;

assign layer2_weights_20_address0 = zext_ln68_reg_3613_pp0_iter14_reg;

assign layer2_weights_21_address0 = zext_ln68_reg_3613_pp0_iter15_reg;

assign layer2_weights_22_address0 = zext_ln68_reg_3613_pp0_iter16_reg;

assign layer2_weights_23_address0 = zext_ln68_reg_3613_pp0_iter17_reg;

assign layer2_weights_25_address0 = zext_ln68_reg_3613_pp0_iter18_reg;

assign layer2_weights_26_address0 = zext_ln68_reg_3613_pp0_iter19_reg;

assign layer2_weights_27_address0 = zext_ln68_reg_3613_pp0_iter20_reg;

assign layer2_weights_28_address0 = zext_ln68_reg_3613_pp0_iter21_reg;

assign layer2_weights_29_address0 = zext_ln68_reg_3613_pp0_iter22_reg;

assign layer2_weights_2_address0 = zext_ln68_reg_3613;

assign layer2_weights_30_address0 = zext_ln68_reg_3613_pp0_iter23_reg;

assign layer2_weights_31_address0 = zext_ln68_reg_3613_pp0_iter24_reg;

assign layer2_weights_32_address0 = zext_ln68_reg_3613_pp0_iter25_reg;

assign layer2_weights_33_address0 = zext_ln68_reg_3613_pp0_iter26_reg;

assign layer2_weights_34_address0 = zext_ln68_reg_3613_pp0_iter27_reg;

assign layer2_weights_35_address0 = zext_ln68_reg_3613_pp0_iter28_reg;

assign layer2_weights_36_address0 = zext_ln68_reg_3613_pp0_iter29_reg;

assign layer2_weights_37_address0 = zext_ln68_reg_3613_pp0_iter30_reg;

assign layer2_weights_38_address0 = zext_ln68_reg_3613_pp0_iter31_reg;

assign layer2_weights_39_address0 = zext_ln68_reg_3613_pp0_iter32_reg;

assign layer2_weights_3_address0 = zext_ln68_reg_3613_pp0_iter1_reg;

assign layer2_weights_40_address0 = zext_ln68_reg_3613_pp0_iter33_reg;

assign layer2_weights_41_address0 = zext_ln68_reg_3613_pp0_iter34_reg;

assign layer2_weights_42_address0 = zext_ln68_reg_3613_pp0_iter35_reg;

assign layer2_weights_43_address0 = zext_ln68_reg_3613_pp0_iter36_reg;

assign layer2_weights_44_address0 = zext_ln68_reg_3613_pp0_iter37_reg;

assign layer2_weights_45_address0 = zext_ln68_reg_3613_pp0_iter38_reg;

assign layer2_weights_46_address0 = zext_ln68_reg_3613_pp0_iter39_reg;

assign layer2_weights_48_address0 = zext_ln68_reg_3613_pp0_iter40_reg;

assign layer2_weights_49_address0 = zext_ln68_reg_3613_pp0_iter41_reg;

assign layer2_weights_4_address0 = zext_ln68_reg_3613_pp0_iter2_reg;

assign layer2_weights_50_address0 = zext_ln68_reg_3613_pp0_iter42_reg;

assign layer2_weights_51_address0 = zext_ln68_reg_3613_pp0_iter43_reg;

assign layer2_weights_52_address0 = zext_ln68_reg_3613_pp0_iter44_reg;

assign layer2_weights_53_address0 = zext_ln68_reg_3613_pp0_iter45_reg;

assign layer2_weights_54_address0 = zext_ln68_reg_3613_pp0_iter46_reg;

assign layer2_weights_55_address0 = zext_ln68_reg_3613_pp0_iter47_reg;

assign layer2_weights_56_address0 = zext_ln68_reg_3613_pp0_iter48_reg;

assign layer2_weights_57_address0 = zext_ln68_reg_3613_pp0_iter49_reg;

assign layer2_weights_58_address0 = zext_ln68_reg_3613_pp0_iter50_reg;

assign layer2_weights_59_address0 = zext_ln68_reg_3613_pp0_iter51_reg;

assign layer2_weights_5_address0 = zext_ln68_reg_3613_pp0_iter3_reg;

assign layer2_weights_61_address0 = zext_ln68_reg_3613_pp0_iter52_reg;

assign layer2_weights_62_address0 = zext_ln68_reg_3613_pp0_iter53_reg;

assign layer2_weights_63_address0 = zext_ln68_reg_3613_pp0_iter54_reg;

assign layer2_weights_6_address0 = zext_ln68_reg_3613_pp0_iter4_reg;

assign layer2_weights_7_address0 = zext_ln68_reg_3613_pp0_iter5_reg;

assign layer2_weights_8_address0 = zext_ln68_reg_3613_pp0_iter6_reg;

assign layer2_weights_9_address0 = zext_ln68_reg_3613_pp0_iter7_reg;

assign mul_ln73_fu_1657_p1 = zext_ln73_cast_reg_3604;

assign sext_ln73_33_fu_2250_p1 = $signed(layer2_weights_35_q0);

assign sext_ln73_45_fu_2485_p1 = $signed(layer2_weights_46_q0);

assign sext_ln73_46_fu_2510_p1 = $signed(layer2_weights_48_q0);

assign sext_ln73_57_fu_2745_p1 = $signed(layer2_weights_59_q0);

assign sext_ln75_fu_2859_p1 = $signed(layer2_bias_load_reg_4534);

assign sum_fu_2850_p1 = grp_fu_3309_p3;

assign sum_fu_2850_p4 = {{sum_fu_2850_p1[23:8]}};

assign tmp_10_fu_1876_p1 = grp_fu_2941_p3;

assign tmp_10_fu_1876_p4 = {{tmp_10_fu_1876_p1[23:8]}};

assign tmp_11_fu_1897_p1 = grp_fu_2949_p3;

assign tmp_11_fu_1897_p4 = {{tmp_11_fu_1897_p1[23:8]}};

assign tmp_12_fu_1918_p1 = grp_fu_2957_p3;

assign tmp_12_fu_1918_p4 = {{tmp_12_fu_1918_p1[23:8]}};

assign tmp_13_fu_1939_p1 = grp_fu_2965_p3;

assign tmp_13_fu_1939_p4 = {{tmp_13_fu_1939_p1[23:8]}};

assign tmp_14_fu_1960_p1 = grp_fu_2973_p3;

assign tmp_14_fu_1960_p4 = {{tmp_14_fu_1960_p1[23:8]}};

assign tmp_15_fu_1981_p1 = grp_fu_2981_p3;

assign tmp_15_fu_1981_p4 = {{tmp_15_fu_1981_p1[23:8]}};

assign tmp_16_fu_2002_p1 = grp_fu_2989_p3;

assign tmp_16_fu_2002_p4 = {{tmp_16_fu_2002_p1[23:8]}};

assign tmp_17_fu_2023_p4 = {{grp_fu_2997_p3[23:8]}};

assign tmp_18_fu_2044_p4 = {{grp_fu_3005_p3[23:8]}};

assign tmp_19_fu_2065_p4 = {{grp_fu_3013_p3[23:8]}};

assign tmp_1_fu_1687_p4 = {{grp_fu_2869_p3[23:8]}};

assign tmp_20_fu_2086_p1 = grp_fu_3021_p3;

assign tmp_20_fu_2086_p4 = {{tmp_20_fu_2086_p1[23:8]}};

assign tmp_21_fu_2107_p1 = grp_fu_3029_p3;

assign tmp_21_fu_2107_p4 = {{tmp_21_fu_2107_p1[23:8]}};

assign tmp_22_fu_2128_p4 = {{grp_fu_3037_p3[23:8]}};

assign tmp_23_fu_2149_p4 = {{grp_fu_3045_p3[23:8]}};

assign tmp_24_fu_2170_p1 = grp_fu_3053_p3;

assign tmp_24_fu_2170_p4 = {{tmp_24_fu_2170_p1[23:8]}};

assign tmp_25_fu_2191_p1 = grp_fu_3061_p3;

assign tmp_25_fu_2191_p4 = {{tmp_25_fu_2191_p1[23:8]}};

assign tmp_26_fu_2212_p4 = {{grp_fu_3069_p3[23:8]}};

assign tmp_27_fu_2233_p1 = grp_fu_3077_p3;

assign tmp_27_fu_2233_p4 = {{tmp_27_fu_2233_p1[23:8]}};

assign tmp_28_fu_2258_p1 = grp_fu_3085_p3;

assign tmp_28_fu_2258_p4 = {{tmp_28_fu_2258_p1[23:8]}};

assign tmp_29_fu_2279_p1 = grp_fu_3093_p3;

assign tmp_29_fu_2279_p4 = {{tmp_29_fu_2279_p1[23:8]}};

assign tmp_2_fu_1708_p1 = grp_fu_2877_p3;

assign tmp_2_fu_1708_p4 = {{tmp_2_fu_1708_p1[23:8]}};

assign tmp_30_fu_2300_p4 = {{grp_fu_3101_p3[23:8]}};

assign tmp_31_fu_2321_p1 = grp_fu_3109_p3;

assign tmp_31_fu_2321_p4 = {{tmp_31_fu_2321_p1[23:8]}};

assign tmp_32_fu_2342_p1 = grp_fu_3117_p3;

assign tmp_32_fu_2342_p4 = {{tmp_32_fu_2342_p1[23:8]}};

assign tmp_33_fu_2363_p4 = {{grp_fu_3125_p3[23:8]}};

assign tmp_34_fu_2384_p1 = grp_fu_3133_p3;

assign tmp_34_fu_2384_p4 = {{tmp_34_fu_2384_p1[23:8]}};

assign tmp_35_fu_2405_p1 = grp_fu_3141_p3;

assign tmp_35_fu_2405_p4 = {{tmp_35_fu_2405_p1[23:8]}};

assign tmp_36_fu_2426_p1 = grp_fu_3149_p3;

assign tmp_36_fu_2426_p4 = {{tmp_36_fu_2426_p1[23:8]}};

assign tmp_37_fu_2447_p1 = grp_fu_3157_p3;

assign tmp_37_fu_2447_p4 = {{tmp_37_fu_2447_p1[23:8]}};

assign tmp_38_fu_2468_p1 = grp_fu_3165_p3;

assign tmp_38_fu_2468_p4 = {{tmp_38_fu_2468_p1[23:8]}};

assign tmp_39_fu_2493_p1 = grp_fu_3173_p3;

assign tmp_39_fu_2493_p4 = {{tmp_39_fu_2493_p1[23:8]}};

assign tmp_3_fu_1729_p1 = grp_fu_2885_p3;

assign tmp_3_fu_1729_p4 = {{tmp_3_fu_1729_p1[23:8]}};

assign tmp_40_fu_2518_p1 = grp_fu_3181_p3;

assign tmp_40_fu_2518_p4 = {{tmp_40_fu_2518_p1[23:8]}};

assign tmp_41_fu_2539_p4 = {{grp_fu_3189_p3[23:8]}};

assign tmp_42_fu_2560_p4 = {{grp_fu_3197_p3[23:8]}};

assign tmp_43_fu_2581_p4 = {{grp_fu_3205_p3[23:8]}};

assign tmp_44_fu_2602_p4 = {{grp_fu_3213_p3[23:8]}};

assign tmp_45_fu_2623_p1 = grp_fu_3221_p3;

assign tmp_45_fu_2623_p4 = {{tmp_45_fu_2623_p1[23:8]}};

assign tmp_46_fu_2644_p1 = grp_fu_3229_p3;

assign tmp_46_fu_2644_p4 = {{tmp_46_fu_2644_p1[23:8]}};

assign tmp_47_fu_2665_p1 = grp_fu_3237_p3;

assign tmp_47_fu_2665_p4 = {{tmp_47_fu_2665_p1[23:8]}};

assign tmp_48_fu_2686_p4 = {{grp_fu_3245_p3[23:8]}};

assign tmp_49_fu_2707_p4 = {{grp_fu_3253_p3[23:8]}};

assign tmp_4_fu_1750_p1 = grp_fu_2893_p3;

assign tmp_4_fu_1750_p4 = {{tmp_4_fu_1750_p1[23:8]}};

assign tmp_50_fu_2728_p1 = grp_fu_3261_p3;

assign tmp_50_fu_2728_p4 = {{tmp_50_fu_2728_p1[23:8]}};

assign tmp_51_fu_2753_p1 = grp_fu_3269_p3;

assign tmp_51_fu_2753_p4 = {{tmp_51_fu_2753_p1[23:8]}};

assign tmp_52_fu_2774_p1 = grp_fu_3277_p3;

assign tmp_52_fu_2774_p4 = {{tmp_52_fu_2774_p1[23:8]}};

assign tmp_53_fu_2795_p4 = {{grp_fu_3285_p3[23:8]}};

assign tmp_54_fu_2816_p1 = grp_fu_3293_p3;

assign tmp_54_fu_2816_p4 = {{tmp_54_fu_2816_p1[23:8]}};

assign tmp_55_fu_2833_p4 = {{grp_fu_3301_p3[23:8]}};

assign tmp_5_fu_1771_p4 = {{grp_fu_2901_p3[23:8]}};

assign tmp_6_fu_1792_p1 = grp_fu_2909_p3;

assign tmp_6_fu_1792_p4 = {{tmp_6_fu_1792_p1[23:8]}};

assign tmp_7_fu_1813_p1 = grp_fu_2917_p3;

assign tmp_7_fu_1813_p4 = {{tmp_7_fu_1813_p1[23:8]}};

assign tmp_8_fu_1834_p4 = {{grp_fu_2925_p3[23:8]}};

assign tmp_9_fu_1855_p1 = grp_fu_2933_p3;

assign tmp_9_fu_1855_p4 = {{tmp_9_fu_1855_p1[23:8]}};

assign zext_ln68_fu_1639_p1 = ap_sig_allocacmp_i_1;

assign zext_ln73_10_cast_fu_1563_p1 = zext_ln73_10;

assign zext_ln73_11_cast_fu_1559_p1 = zext_ln73_11;

assign zext_ln73_12_cast_fu_1555_p1 = zext_ln73_12;

assign zext_ln73_13_cast_fu_1551_p1 = zext_ln73_13;

assign zext_ln73_14_cast_fu_1547_p1 = zext_ln73_14;

assign zext_ln73_15_cast_fu_1539_p1 = zext_ln73_15;

assign zext_ln73_16_cast_fu_1535_p1 = zext_ln73_16;

assign zext_ln73_17_cast_fu_1531_p1 = zext_ln73_17;

assign zext_ln73_18_cast_fu_1519_p1 = zext_ln73_18;

assign zext_ln73_19_cast_fu_1515_p1 = zext_ln73_19;

assign zext_ln73_1_cast_fu_1607_p1 = zext_ln73_1;

assign zext_ln73_20_cast_fu_1507_p1 = zext_ln73_20;

assign zext_ln73_21_cast_fu_1503_p1 = zext_ln73_21;

assign zext_ln73_22_cast_fu_1499_p1 = zext_ln73_22;

assign zext_ln73_23_cast_fu_1495_p1 = zext_ln73_23;

assign zext_ln73_24_cast_fu_1491_p1 = zext_ln73_24;

assign zext_ln73_25_cast_fu_1487_p1 = zext_ln73_25;

assign zext_ln73_26_cast_fu_1479_p1 = zext_ln73_26;

assign zext_ln73_27_cast_fu_1475_p1 = zext_ln73_27;

assign zext_ln73_28_cast_fu_1471_p1 = zext_ln73_28;

assign zext_ln73_29_cast_fu_1467_p1 = zext_ln73_29;

assign zext_ln73_2_cast_fu_1603_p1 = zext_ln73_2;

assign zext_ln73_30_cast_fu_1463_p1 = zext_ln73_30;

assign zext_ln73_31_cast_fu_1459_p1 = zext_ln73_31;

assign zext_ln73_32_cast_fu_1455_p1 = zext_ln73_32;

assign zext_ln73_33_cast_fu_1435_p1 = zext_ln73_33;

assign zext_ln73_34_cast_fu_1431_p1 = zext_ln73_34;

assign zext_ln73_35_cast_fu_1427_p1 = zext_ln73_35;

assign zext_ln73_36_cast_fu_1415_p1 = zext_ln73_36;

assign zext_ln73_37_cast_fu_1411_p1 = zext_ln73_37;

assign zext_ln73_38_cast_fu_1407_p1 = zext_ln73_38;

assign zext_ln73_39_cast_fu_1399_p1 = zext_ln73_39;

assign zext_ln73_3_cast_fu_1599_p1 = zext_ln73_3;

assign zext_ln73_40_cast_fu_1391_p1 = zext_ln73_40;

assign zext_ln73_4_cast_fu_1587_p1 = zext_ln73_4;

assign zext_ln73_5_cast_fu_1583_p1 = zext_ln73_5;

assign zext_ln73_6_cast_fu_1579_p1 = zext_ln73_6;

assign zext_ln73_7_cast_fu_1575_p1 = zext_ln73_7;

assign zext_ln73_8_cast_fu_1571_p1 = zext_ln73_8;

assign zext_ln73_9_cast_fu_1567_p1 = zext_ln73_9;

assign zext_ln73_cast_fu_1615_p1 = zext_ln73;

always @ (posedge ap_clk) begin
    zext_ln73_40_cast_reg_3324[23:15] <= 9'b000000000;
    conv_i86_62_cast_cast_reg_3329[19:15] <= 5'b00000;
    zext_ln73_39_cast_reg_3334[23:15] <= 9'b000000000;
    conv_i86_59_cast_cast_reg_3339[19:15] <= 5'b00000;
    zext_ln73_38_cast_reg_3344[23:15] <= 9'b000000000;
    zext_ln73_37_cast_reg_3349[23:15] <= 9'b000000000;
    zext_ln73_36_cast_reg_3354[23:15] <= 9'b000000000;
    conv_i86_55_cast_cast_reg_3359[21:15] <= 7'b0000000;
    conv_i86_54_cast_cast_reg_3364[22:15] <= 8'b00000000;
    zext_ln73_35_cast_reg_3369[23:15] <= 9'b000000000;
    zext_ln73_34_cast_reg_3374[23:15] <= 9'b000000000;
    zext_ln73_33_cast_reg_3379[23:15] <= 9'b000000000;
    conv_i86_50_cast_cast_reg_3384[21:15] <= 7'b0000000;
    conv_i86_49_cast_cast_reg_3389[22:15] <= 8'b00000000;
    conv_i86_48_cast_cast_reg_3394[23:15] <= 9'b000000000;
    conv_i86_46_cast_cast_reg_3399[23:15] <= 9'b000000000;
    zext_ln73_32_cast_reg_3404[23:15] <= 9'b000000000;
    zext_ln73_31_cast_reg_3409[23:15] <= 9'b000000000;
    zext_ln73_30_cast_reg_3414[23:15] <= 9'b000000000;
    zext_ln73_29_cast_reg_3419[23:15] <= 9'b000000000;
    zext_ln73_28_cast_reg_3424[23:15] <= 9'b000000000;
    zext_ln73_27_cast_reg_3429[23:15] <= 9'b000000000;
    zext_ln73_26_cast_reg_3434[23:15] <= 9'b000000000;
    conv_i86_38_cast_cast_reg_3439[19:15] <= 5'b00000;
    zext_ln73_25_cast_reg_3444[23:15] <= 9'b000000000;
    zext_ln73_24_cast_reg_3449[23:15] <= 9'b000000000;
    zext_ln73_23_cast_reg_3454[23:15] <= 9'b000000000;
    zext_ln73_22_cast_reg_3459[23:15] <= 9'b000000000;
    zext_ln73_21_cast_reg_3464[23:15] <= 9'b000000000;
    zext_ln73_20_cast_reg_3469[23:15] <= 9'b000000000;
    conv_i86_31_cast_cast_reg_3474[22:15] <= 8'b00000000;
    zext_ln73_19_cast_reg_3479[23:15] <= 9'b000000000;
    zext_ln73_18_cast_reg_3484[23:15] <= 9'b000000000;
    conv_i86_28_cast_cast_reg_3489[21:15] <= 7'b0000000;
    conv_i86_27_cast_cast_reg_3494[22:15] <= 8'b00000000;
    zext_ln73_17_cast_reg_3499[23:15] <= 9'b000000000;
    zext_ln73_16_cast_reg_3504[23:15] <= 9'b000000000;
    zext_ln73_15_cast_reg_3509[23:15] <= 9'b000000000;
    conv_i86_22_cast_cast_reg_3514[20:15] <= 6'b000000;
    zext_ln73_14_cast_reg_3519[23:15] <= 9'b000000000;
    zext_ln73_13_cast_reg_3524[23:15] <= 9'b000000000;
    zext_ln73_12_cast_reg_3529[23:15] <= 9'b000000000;
    zext_ln73_11_cast_reg_3534[23:15] <= 9'b000000000;
    zext_ln73_10_cast_reg_3539[23:15] <= 9'b000000000;
    zext_ln73_9_cast_reg_3544[23:15] <= 9'b000000000;
    zext_ln73_8_cast_reg_3549[23:15] <= 9'b000000000;
    zext_ln73_7_cast_reg_3554[23:15] <= 9'b000000000;
    zext_ln73_6_cast_reg_3559[23:15] <= 9'b000000000;
    zext_ln73_5_cast_reg_3564[23:15] <= 9'b000000000;
    zext_ln73_4_cast_reg_3569[23:15] <= 9'b000000000;
    conv_i86_6_cast_cast_reg_3574[23:15] <= 9'b000000000;
    conv_i86_5_cast_cast_reg_3579[22:15] <= 8'b00000000;
    zext_ln73_3_cast_reg_3584[23:15] <= 9'b000000000;
    zext_ln73_2_cast_reg_3589[23:15] <= 9'b000000000;
    zext_ln73_1_cast_reg_3594[23:15] <= 9'b000000000;
    conv_i86_1_cast_cast_reg_3599[21:15] <= 7'b0000000;
    zext_ln73_cast_reg_3604[23:15] <= 9'b000000000;
    zext_ln68_reg_3613[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter7_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter8_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter9_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter10_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter11_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter12_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter13_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter14_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter15_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter16_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter17_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter18_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter19_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter20_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter21_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter22_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter23_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter24_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter25_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter26_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter27_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter28_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter29_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter30_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter31_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter32_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter33_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter34_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter35_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter36_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter37_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter38_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter39_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter40_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter41_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter42_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter43_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter44_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter45_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter46_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter47_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter48_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter49_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter50_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter51_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter52_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter53_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter54_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter55_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter56_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter57_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_3613_pp0_iter58_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_68_3
