-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity neural_network is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_INPUT_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_INPUT_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_OUTPUT_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_OUTPUT_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_CONTROL_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_INPUT_AWVALID : IN STD_LOGIC;
    s_axi_INPUT_AWREADY : OUT STD_LOGIC;
    s_axi_INPUT_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_ADDR_WIDTH-1 downto 0);
    s_axi_INPUT_WVALID : IN STD_LOGIC;
    s_axi_INPUT_WREADY : OUT STD_LOGIC;
    s_axi_INPUT_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_DATA_WIDTH-1 downto 0);
    s_axi_INPUT_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_DATA_WIDTH/8-1 downto 0);
    s_axi_INPUT_ARVALID : IN STD_LOGIC;
    s_axi_INPUT_ARREADY : OUT STD_LOGIC;
    s_axi_INPUT_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_INPUT_ADDR_WIDTH-1 downto 0);
    s_axi_INPUT_RVALID : OUT STD_LOGIC;
    s_axi_INPUT_RREADY : IN STD_LOGIC;
    s_axi_INPUT_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_INPUT_DATA_WIDTH-1 downto 0);
    s_axi_INPUT_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_INPUT_BVALID : OUT STD_LOGIC;
    s_axi_INPUT_BREADY : IN STD_LOGIC;
    s_axi_INPUT_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_OUTPUT_AWVALID : IN STD_LOGIC;
    s_axi_OUTPUT_AWREADY : OUT STD_LOGIC;
    s_axi_OUTPUT_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_OUTPUT_ADDR_WIDTH-1 downto 0);
    s_axi_OUTPUT_WVALID : IN STD_LOGIC;
    s_axi_OUTPUT_WREADY : OUT STD_LOGIC;
    s_axi_OUTPUT_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_OUTPUT_DATA_WIDTH-1 downto 0);
    s_axi_OUTPUT_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_OUTPUT_DATA_WIDTH/8-1 downto 0);
    s_axi_OUTPUT_ARVALID : IN STD_LOGIC;
    s_axi_OUTPUT_ARREADY : OUT STD_LOGIC;
    s_axi_OUTPUT_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_OUTPUT_ADDR_WIDTH-1 downto 0);
    s_axi_OUTPUT_RVALID : OUT STD_LOGIC;
    s_axi_OUTPUT_RREADY : IN STD_LOGIC;
    s_axi_OUTPUT_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_OUTPUT_DATA_WIDTH-1 downto 0);
    s_axi_OUTPUT_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_OUTPUT_BVALID : OUT STD_LOGIC;
    s_axi_OUTPUT_BREADY : IN STD_LOGIC;
    s_axi_OUTPUT_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of neural_network is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "neural_network_neural_network,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.212429,HLS_SYN_LAT=144,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3544,HLS_SYN_LUT=3235,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_0_i : STD_LOGIC_VECTOR (15 downto 0);
    signal output_0_o : STD_LOGIC_VECTOR (15 downto 0);
    signal output_0_o_ap_vld : STD_LOGIC;
    signal output_1_i : STD_LOGIC_VECTOR (15 downto 0);
    signal output_1_o : STD_LOGIC_VECTOR (15 downto 0);
    signal output_1_o_ap_vld : STD_LOGIC;
    signal output_2_i : STD_LOGIC_VECTOR (15 downto 0);
    signal output_2_o : STD_LOGIC_VECTOR (15 downto 0);
    signal output_2_o_ap_vld : STD_LOGIC;
    signal input_0_read_reg_369 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_1_read_reg_374 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_2_read_reg_379 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_3_read_reg_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_done : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_idle : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_ready : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_7_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_7_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_6_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_6_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_5_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_5_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_4_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_4_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_3_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_2_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_2_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_1_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_1_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_done : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_idle : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_ready : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_2_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_2_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_1_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_1_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_done : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_idle : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_ready : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_max_val_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_max_val_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_done : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_idle : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_ready : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_sum_4_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_sum_4_out_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_idle : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_ready : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o_ap_vld : STD_LOGIC;
    signal grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component neural_network_neural_network_Pipeline_VITIS_LOOP_58_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln63 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln63_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln63_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln63_3 : IN STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_7_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_7_out_ap_vld : OUT STD_LOGIC;
        layer1_output_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_6_out_ap_vld : OUT STD_LOGIC;
        layer1_output_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_5_out_ap_vld : OUT STD_LOGIC;
        layer1_output_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_4_out_ap_vld : OUT STD_LOGIC;
        layer1_output_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_3_out_ap_vld : OUT STD_LOGIC;
        layer1_output_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_2_out_ap_vld : OUT STD_LOGIC;
        layer1_output_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_1_out_ap_vld : OUT STD_LOGIC;
        layer1_output_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer1_output_out_ap_vld : OUT STD_LOGIC );
    end component;


    component neural_network_neural_network_Pipeline_VITIS_LOOP_70_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln75 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_3 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_4 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_5 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_6 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln75_7 : IN STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_2_out_ap_vld : OUT STD_LOGIC;
        layer2_output_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_1_out_ap_vld : OUT STD_LOGIC;
        layer2_output_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_out_ap_vld : OUT STD_LOGIC );
    end component;


    component neural_network_neural_network_Pipeline_VITIS_LOOP_23_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer2_output_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_1_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_2_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        max_val_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        max_val_out_ap_vld : OUT STD_LOGIC );
    end component;


    component neural_network_neural_network_Pipeline_VITIS_LOOP_29_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_ap_vld : OUT STD_LOGIC;
        output_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_ap_vld : OUT STD_LOGIC;
        output_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_ap_vld : OUT STD_LOGIC;
        layer2_output_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_1_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        layer2_output_2_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_i_i13_i_i8 : IN STD_LOGIC_VECTOR (15 downto 0);
        sum_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        sum_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component neural_network_neural_network_Pipeline_VITIS_LOOP_36_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_0_i : IN STD_LOGIC_VECTOR (15 downto 0);
        output_0_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_o_ap_vld : OUT STD_LOGIC;
        output_2_i : IN STD_LOGIC_VECTOR (15 downto 0);
        output_2_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_o_ap_vld : OUT STD_LOGIC;
        output_1_i : IN STD_LOGIC_VECTOR (15 downto 0);
        output_1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_o_ap_vld : OUT STD_LOGIC;
        sext_ln38_1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component neural_network_CONTROL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component neural_network_INPUT_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component neural_network_OUTPUT_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        output_0_o : IN STD_LOGIC_VECTOR (15 downto 0);
        output_0_o_ap_vld : IN STD_LOGIC;
        output_0_i : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_o : IN STD_LOGIC_VECTOR (15 downto 0);
        output_1_o_ap_vld : IN STD_LOGIC;
        output_1_i : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_o : IN STD_LOGIC_VECTOR (15 downto 0);
        output_2_o_ap_vld : IN STD_LOGIC;
        output_2_i : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154 : component neural_network_neural_network_Pipeline_VITIS_LOOP_58_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start,
        ap_done => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_done,
        ap_idle => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_idle,
        ap_ready => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_ready,
        sext_ln63 => input_0_read_reg_369,
        sext_ln63_1 => input_1_read_reg_374,
        sext_ln63_2 => input_2_read_reg_379,
        sext_ln63_3 => input_3_read_reg_384,
        layer1_output_7_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_7_out,
        layer1_output_7_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_7_out_ap_vld,
        layer1_output_6_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_6_out,
        layer1_output_6_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_6_out_ap_vld,
        layer1_output_5_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_5_out,
        layer1_output_5_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_5_out_ap_vld,
        layer1_output_4_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_4_out,
        layer1_output_4_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_4_out_ap_vld,
        layer1_output_3_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_3_out,
        layer1_output_3_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_3_out_ap_vld,
        layer1_output_2_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_2_out,
        layer1_output_2_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_2_out_ap_vld,
        layer1_output_1_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_1_out,
        layer1_output_1_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_1_out_ap_vld,
        layer1_output_out => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_out,
        layer1_output_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_out_ap_vld);

    grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184 : component neural_network_neural_network_Pipeline_VITIS_LOOP_70_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start,
        ap_done => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_done,
        ap_idle => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_idle,
        ap_ready => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_ready,
        sext_ln75 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_out,
        sext_ln75_1 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_1_out,
        sext_ln75_2 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_2_out,
        sext_ln75_3 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_3_out,
        sext_ln75_4 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_4_out,
        sext_ln75_5 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_5_out,
        sext_ln75_6 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_6_out,
        sext_ln75_7 => grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_layer1_output_7_out,
        layer2_output_2_out => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_2_out,
        layer2_output_2_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_2_out_ap_vld,
        layer2_output_1_out => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_1_out,
        layer2_output_1_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_1_out_ap_vld,
        layer2_output_out => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_out,
        layer2_output_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_out_ap_vld);

    grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199 : component neural_network_neural_network_Pipeline_VITIS_LOOP_23_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start,
        ap_done => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_done,
        ap_idle => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_idle,
        ap_ready => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_ready,
        layer2_output_reload => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_out,
        layer2_output_1_reload => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_1_out,
        layer2_output_2_reload => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_2_out,
        max_val_out => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_max_val_out,
        max_val_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_max_val_out_ap_vld);

    grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207 : component neural_network_neural_network_Pipeline_VITIS_LOOP_29_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start,
        ap_done => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_done,
        ap_idle => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_idle,
        ap_ready => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_ready,
        output_0 => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0,
        output_0_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0_ap_vld,
        output_2 => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2,
        output_2_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2_ap_vld,
        output_1 => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1,
        output_1_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1_ap_vld,
        layer2_output_reload => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_out,
        layer2_output_1_reload => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_1_out,
        layer2_output_2_reload => grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_layer2_output_2_out,
        conv_i_i13_i_i8 => grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_max_val_out,
        sum_4_out => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_sum_4_out,
        sum_4_out_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_sum_4_out_ap_vld);

    grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228 : component neural_network_neural_network_Pipeline_VITIS_LOOP_36_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start,
        ap_done => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done,
        ap_idle => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_idle,
        ap_ready => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_ready,
        output_0_i => output_0_i,
        output_0_o => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o,
        output_0_o_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o_ap_vld,
        output_2_i => output_2_i,
        output_2_o => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o,
        output_2_o_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o_ap_vld,
        output_1_i => output_1_i,
        output_1_o => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o,
        output_1_o_ap_vld => grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o_ap_vld,
        sext_ln38_1 => grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_sum_4_out);

    CONTROL_s_axi_U : component neural_network_CONTROL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_AWVALID,
        AWREADY => s_axi_CONTROL_AWREADY,
        AWADDR => s_axi_CONTROL_AWADDR,
        WVALID => s_axi_CONTROL_WVALID,
        WREADY => s_axi_CONTROL_WREADY,
        WDATA => s_axi_CONTROL_WDATA,
        WSTRB => s_axi_CONTROL_WSTRB,
        ARVALID => s_axi_CONTROL_ARVALID,
        ARREADY => s_axi_CONTROL_ARREADY,
        ARADDR => s_axi_CONTROL_ARADDR,
        RVALID => s_axi_CONTROL_RVALID,
        RREADY => s_axi_CONTROL_RREADY,
        RDATA => s_axi_CONTROL_RDATA,
        RRESP => s_axi_CONTROL_RRESP,
        BVALID => s_axi_CONTROL_BVALID,
        BREADY => s_axi_CONTROL_BREADY,
        BRESP => s_axi_CONTROL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    INPUT_s_axi_U : component neural_network_INPUT_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_INPUT_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_INPUT_DATA_WIDTH)
    port map (
        AWVALID => s_axi_INPUT_AWVALID,
        AWREADY => s_axi_INPUT_AWREADY,
        AWADDR => s_axi_INPUT_AWADDR,
        WVALID => s_axi_INPUT_WVALID,
        WREADY => s_axi_INPUT_WREADY,
        WDATA => s_axi_INPUT_WDATA,
        WSTRB => s_axi_INPUT_WSTRB,
        ARVALID => s_axi_INPUT_ARVALID,
        ARREADY => s_axi_INPUT_ARREADY,
        ARADDR => s_axi_INPUT_ARADDR,
        RVALID => s_axi_INPUT_RVALID,
        RREADY => s_axi_INPUT_RREADY,
        RDATA => s_axi_INPUT_RDATA,
        RRESP => s_axi_INPUT_RRESP,
        BVALID => s_axi_INPUT_BVALID,
        BREADY => s_axi_INPUT_BREADY,
        BRESP => s_axi_INPUT_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_0 => input_0,
        input_1 => input_1,
        input_2 => input_2,
        input_3 => input_3);

    OUTPUT_s_axi_U : component neural_network_OUTPUT_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_OUTPUT_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_OUTPUT_DATA_WIDTH)
    port map (
        AWVALID => s_axi_OUTPUT_AWVALID,
        AWREADY => s_axi_OUTPUT_AWREADY,
        AWADDR => s_axi_OUTPUT_AWADDR,
        WVALID => s_axi_OUTPUT_WVALID,
        WREADY => s_axi_OUTPUT_WREADY,
        WDATA => s_axi_OUTPUT_WDATA,
        WSTRB => s_axi_OUTPUT_WSTRB,
        ARVALID => s_axi_OUTPUT_ARVALID,
        ARREADY => s_axi_OUTPUT_ARREADY,
        ARADDR => s_axi_OUTPUT_ARADDR,
        RVALID => s_axi_OUTPUT_RVALID,
        RREADY => s_axi_OUTPUT_RREADY,
        RDATA => s_axi_OUTPUT_RDATA,
        RRESP => s_axi_OUTPUT_RRESP,
        BVALID => s_axi_OUTPUT_BVALID,
        BREADY => s_axi_OUTPUT_BREADY,
        BRESP => s_axi_OUTPUT_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        output_0_o => output_0_o,
        output_0_o_ap_vld => output_0_o_ap_vld,
        output_0_i => output_0_i,
        output_1_o => output_1_o,
        output_1_o_ap_vld => output_1_o_ap_vld,
        output_1_i => output_1_i,
        output_2_o => output_2_o,
        output_2_o_ap_vld => output_2_o_ap_vld,
        output_2_i => output_2_i);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_ready = ap_const_logic_1)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_ready = ap_const_logic_1)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_ready = ap_const_logic_1)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                input_0_read_reg_369 <= input_0;
                input_1_read_reg_374 <= input_1;
                input_2_read_reg_379 <= input_2;
                input_3_read_reg_384 <= input_3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_done, grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_done, grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_done, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_done, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done)
    begin
        if ((grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_done)
    begin
        if ((grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_done)
    begin
        if ((grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_done)
    begin
        if ((grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_done)
    begin
        if ((grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start <= grp_neural_network_Pipeline_VITIS_LOOP_23_1_fu_199_ap_start_reg;
    grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_ap_start_reg;
    grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_ap_start_reg;
    grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start <= grp_neural_network_Pipeline_VITIS_LOOP_58_1_fu_154_ap_start_reg;
    grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start <= grp_neural_network_Pipeline_VITIS_LOOP_70_3_fu_184_ap_start_reg;

    output_0_o_assign_proc : process(output_0_i, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0_ap_vld, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o_ap_vld, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o_ap_vld = ap_const_logic_1))) then 
            output_0_o <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0_ap_vld = ap_const_logic_1))) then 
            output_0_o <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0;
        else 
            output_0_o <= output_0_i;
        end if; 
    end process;


    output_0_o_ap_vld_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0_ap_vld, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o_ap_vld, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_0_o_ap_vld <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_0_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_0_o_ap_vld <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_0_ap_vld;
        else 
            output_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    output_1_o_assign_proc : process(output_1_i, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1_ap_vld, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o_ap_vld, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o_ap_vld = ap_const_logic_1))) then 
            output_1_o <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1_ap_vld = ap_const_logic_1))) then 
            output_1_o <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1;
        else 
            output_1_o <= output_1_i;
        end if; 
    end process;


    output_1_o_ap_vld_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1_ap_vld, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o_ap_vld, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_1_o_ap_vld <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_1_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_1_o_ap_vld <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_1_ap_vld;
        else 
            output_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    output_2_o_assign_proc : process(output_2_i, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2, grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2_ap_vld, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o_ap_vld, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o_ap_vld = ap_const_logic_1))) then 
            output_2_o <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2_ap_vld = ap_const_logic_1))) then 
            output_2_o <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2;
        else 
            output_2_o <= output_2_i;
        end if; 
    end process;


    output_2_o_ap_vld_assign_proc : process(grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2_ap_vld, grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o_ap_vld, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_2_o_ap_vld <= grp_neural_network_Pipeline_VITIS_LOOP_36_3_fu_228_output_2_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_2_o_ap_vld <= grp_neural_network_Pipeline_VITIS_LOOP_29_2_fu_207_output_2_ap_vld;
        else 
            output_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
