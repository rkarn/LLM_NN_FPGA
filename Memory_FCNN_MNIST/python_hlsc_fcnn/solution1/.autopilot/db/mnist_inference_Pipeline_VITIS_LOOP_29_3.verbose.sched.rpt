

================================================================
== Vitis HLS Report for 'mnist_inference_Pipeline_VITIS_LOOP_29_3'
================================================================
* Date:           Sun Sep 15 04:39:33 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        python_hlsc_fcnn
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.058 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       23|      791|  0.230 us|  7.910 us|   23|  791|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip   |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  |   Count  | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |- VITIS_LOOP_29_3  |       21|      789|         7|          1|          1|  16 ~ 784|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 1 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.37>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 10 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tile_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %tile"   --->   Operation 12 'read' 'tile_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%select_ln27_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %select_ln27"   --->   Operation 13 'read' 'select_ln27_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.61ns)   --->   "%store_ln0 = store i7 0, i7 %i"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.cond30"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_1 = load i7 %i" [fcnn.cpp:29]   --->   Operation 16 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln29_1 = zext i7 %i_1" [fcnn.cpp:29]   --->   Operation 17 'zext' 'zext_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (2.12ns)   --->   "%icmp_ln29 = icmp_eq  i10 %zext_ln29_1, i10 %select_ln27_read" [fcnn.cpp:29]   --->   Operation 18 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 2.12> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 16, i64 784, i64 0"   --->   Operation 19 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (2.03ns)   --->   "%add_ln29 = add i7 %i_1, i7 1" [fcnn.cpp:29]   --->   Operation 20 'add' 'add_ln29' <Predicate = true> <Delay = 2.03> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.03> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %for.inc41_ifconv, void %VITIS_LOOP_36_5.preheader.exitStub" [fcnn.cpp:29]   --->   Operation 21 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (2.12ns)   --->   "%add_ln31 = add i10 %zext_ln29_1, i10 %tile_read" [fcnn.cpp:31]   --->   Operation 22 'add' 'add_ln31' <Predicate = (!icmp_ln29)> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i10 %add_ln31" [fcnn.cpp:31]   --->   Operation 23 'zext' 'zext_ln31_1' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%input_r_addr = getelementptr i32 %input_r, i64 0, i64 %zext_ln31_1" [fcnn.cpp:31]   --->   Operation 24 'getelementptr' 'input_r_addr' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_1 : Operation 25 [2/2] (3.25ns)   --->   "%input_r_load = load i10 %input_r_addr" [fcnn.cpp:31]   --->   Operation 25 'load' 'input_r_load' <Predicate = (!icmp_ln29)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_1 : Operation 26 [1/1] (1.61ns)   --->   "%store_ln29 = store i7 %add_ln29, i7 %i" [fcnn.cpp:29]   --->   Operation 26 'store' 'store_ln29' <Predicate = (!icmp_ln29)> <Delay = 1.61>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 27 [1/2] (3.25ns)   --->   "%input_r_load = load i10 %input_r_addr" [fcnn.cpp:31]   --->   Operation 27 'load' 'input_r_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>

State 3 <SV = 2> <Delay = 4.09>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%bitcast_ln31 = bitcast i32 %input_r_load" [fcnn.cpp:31]   --->   Operation 28 'bitcast' 'bitcast_ln31' <Predicate = true> <Delay = 0.00>
ST_3 : [1/1] (1.61ns)   --->   Input mux for Operation 29 '%pf = fpext i32 %bitcast_ln31'
ST_3 : Operation 29 [2/2] (2.48ns)   --->   "%pf = fpext i32 %bitcast_ln31" [fcnn.cpp:31]   --->   Operation 29 'fpext' 'pf' <Predicate = true> <Delay = 2.48> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.09>
ST_4 : Operation 30 [1/2] (4.09ns)   --->   "%pf = fpext i32 %bitcast_ln31" [fcnn.cpp:31]   --->   Operation 30 'fpext' 'pf' <Predicate = true> <Delay = 4.09> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.09> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%bitcast_ln724 = bitcast i64 %pf" [fcnn.cpp:31]   --->   Operation 31 'bitcast' 'bitcast_ln724' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i64 %bitcast_ln724" [fcnn.cpp:31]   --->   Operation 32 'trunc' 'trunc_ln31' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %bitcast_ln724, i32 63" [fcnn.cpp:31]   --->   Operation 33 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_s = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %bitcast_ln724, i32 52, i32 62" [fcnn.cpp:31]   --->   Operation 34 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = trunc i64 %bitcast_ln724" [fcnn.cpp:31]   --->   Operation 35 'trunc' 'trunc_ln31_1' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.05>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i11 %tmp_s" [fcnn.cpp:31]   --->   Operation 36 'zext' 'zext_ln31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln31_2_cast = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln31_1" [fcnn.cpp:31]   --->   Operation 37 'bitconcatenate' 'zext_ln31_2_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln31_2 = zext i53 %zext_ln31_2_cast" [fcnn.cpp:31]   --->   Operation 38 'zext' 'zext_ln31_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (3.27ns)   --->   "%sub_ln31 = sub i54 0, i54 %zext_ln31_2" [fcnn.cpp:31]   --->   Operation 39 'sub' 'sub_ln31' <Predicate = (tmp)> <Delay = 3.27> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 40 [1/1] (1.38ns)   --->   "%select_ln31 = select i1 %tmp, i54 %sub_ln31, i54 %zext_ln31_2" [fcnn.cpp:31]   --->   Operation 40 'select' 'select_ln31' <Predicate = true> <Delay = 1.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 41 [1/1] (3.53ns)   --->   "%icmp_ln31 = icmp_eq  i63 %trunc_ln31, i63 0" [fcnn.cpp:31]   --->   Operation 41 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 3.53> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 3.53> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (2.13ns)   --->   "%sub_ln31_1 = sub i12 1075, i12 %zext_ln31" [fcnn.cpp:31]   --->   Operation 42 'sub' 'sub_ln31_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (2.13ns)   --->   "%icmp_ln31_1 = icmp_sgt  i12 %sub_ln31_1, i12 8" [fcnn.cpp:31]   --->   Operation 43 'icmp' 'icmp_ln31_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (2.13ns)   --->   "%add_ln31_1 = add i12 %sub_ln31_1, i12 4088" [fcnn.cpp:31]   --->   Operation 44 'add' 'add_ln31_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (2.13ns)   --->   "%sub_ln31_2 = sub i12 8, i12 %sub_ln31_1" [fcnn.cpp:31]   --->   Operation 45 'sub' 'sub_ln31_2' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.68ns)   --->   "%select_ln31_1 = select i1 %icmp_ln31_1, i12 %add_ln31_1, i12 %sub_ln31_2" [fcnn.cpp:31]   --->   Operation 46 'select' 'select_ln31_1' <Predicate = true> <Delay = 0.68> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (2.13ns)   --->   "%icmp_ln31_2 = icmp_eq  i12 %sub_ln31_1, i12 8" [fcnn.cpp:31]   --->   Operation 47 'icmp' 'icmp_ln31_2' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln31_2 = trunc i54 %select_ln31" [fcnn.cpp:31]   --->   Operation 48 'trunc' 'trunc_ln31_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i8 @_ssdm_op_PartSelect.i8.i12.i32.i32, i12 %select_ln31_1, i32 4, i32 11" [fcnn.cpp:31]   --->   Operation 49 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (2.11ns)   --->   "%icmp_ln31_4 = icmp_eq  i8 %tmp_5, i8 0" [fcnn.cpp:31]   --->   Operation 50 'icmp' 'icmp_ln31_4' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.25>
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i12 %select_ln31_1" [fcnn.cpp:31]   --->   Operation 51 'sext' 'sext_ln31' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 52 [1/1] (2.13ns)   --->   "%icmp_ln31_3 = icmp_ult  i12 %select_ln31_1, i12 54" [fcnn.cpp:31]   --->   Operation 52 'icmp' 'icmp_ln31_3' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln31_3 = zext i32 %sext_ln31" [fcnn.cpp:31]   --->   Operation 53 'zext' 'zext_ln31_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 54 [1/1] (4.28ns)   --->   "%ashr_ln31 = ashr i54 %select_ln31, i54 %zext_ln31_3" [fcnn.cpp:31]   --->   Operation 54 'ashr' 'ashr_ln31' <Predicate = true> <Delay = 4.28> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.28> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_6)   --->   "%trunc_ln31_3 = trunc i54 %ashr_ln31" [fcnn.cpp:31]   --->   Operation 55 'trunc' 'trunc_ln31_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_6)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %input_r_load, i32 31" [fcnn.cpp:31]   --->   Operation 56 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_6)   --->   "%select_ln31_7 = select i1 %tmp_4, i16 65535, i16 0" [fcnn.cpp:31]   --->   Operation 57 'select' 'select_ln31_7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_6)   --->   "%select_ln31_2 = select i1 %icmp_ln31_3, i16 %trunc_ln31_3, i16 %select_ln31_7" [fcnn.cpp:31]   --->   Operation 58 'select' 'select_ln31_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln31cast = trunc i32 %sext_ln31" [fcnn.cpp:31]   --->   Operation 59 'trunc' 'sext_ln31cast' <Predicate = (!icmp_ln31 & icmp_ln31_4)> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (3.67ns)   --->   "%shl_ln31 = shl i16 %trunc_ln31_2, i16 %sext_ln31cast" [fcnn.cpp:31]   --->   Operation 60 'shl' 'shl_ln31' <Predicate = (!icmp_ln31 & icmp_ln31_4)> <Delay = 3.67> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.67> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_5)   --->   "%select_ln31_3 = select i1 %icmp_ln31_4, i16 %shl_ln31, i16 0" [fcnn.cpp:31]   --->   Operation 61 'select' 'select_ln31_3' <Predicate = (!icmp_ln31)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_5)   --->   "%select_ln31_4 = select i1 %icmp_ln31, i16 0, i16 %select_ln31_3" [fcnn.cpp:31]   --->   Operation 62 'select' 'select_ln31_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_5)   --->   "%xor_ln31 = xor i1 %icmp_ln31, i1 1" [fcnn.cpp:31]   --->   Operation 63 'xor' 'xor_ln31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_5)   --->   "%and_ln31 = and i1 %icmp_ln31_2, i1 %xor_ln31" [fcnn.cpp:31]   --->   Operation 64 'and' 'and_ln31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (1.29ns) (out node of the LUT)   --->   "%select_ln31_5 = select i1 %and_ln31, i16 %trunc_ln31_2, i16 %select_ln31_4" [fcnn.cpp:31]   --->   Operation 65 'select' 'select_ln31_5' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_1)   --->   "%or_ln31 = or i1 %icmp_ln31, i1 %icmp_ln31_2" [fcnn.cpp:31]   --->   Operation 66 'or' 'or_ln31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_1)   --->   "%xor_ln31_1 = xor i1 %or_ln31, i1 1" [fcnn.cpp:31]   --->   Operation 67 'xor' 'xor_ln31_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln31_1 = and i1 %icmp_ln31_1, i1 %xor_ln31_1" [fcnn.cpp:31]   --->   Operation 68 'and' 'and_ln31_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (1.29ns) (out node of the LUT)   --->   "%select_ln31_6 = select i1 %and_ln31_1, i16 %select_ln31_2, i16 %select_ln31_5" [fcnn.cpp:31]   --->   Operation 69 'select' 'select_ln31_6' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 76 'ret' 'ret_ln0' <Predicate = (icmp_ln29)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 3.25>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i7 %i_1" [fcnn.cpp:29]   --->   Operation 70 'zext' 'zext_ln29' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%specpipeline_ln30 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [fcnn.cpp:30]   --->   Operation 71 'specpipeline' 'specpipeline_ln30' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln29 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [fcnn.cpp:29]   --->   Operation 72 'specloopname' 'specloopname_ln29' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%input_tile_addr = getelementptr i16 %input_tile, i64 0, i64 %zext_ln29" [fcnn.cpp:31]   --->   Operation 73 'getelementptr' 'input_tile_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (3.25ns)   --->   "%store_ln31 = store i16 %select_ln31_6, i6 %input_tile_addr" [fcnn.cpp:31]   --->   Operation 74 'store' 'store_ln31' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln29 = br void %for.cond30" [fcnn.cpp:29]   --->   Operation 75 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.380ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0.000 ns)
	'load' operation ('i', fcnn.cpp:29) on local variable 'i' [12]  (0.000 ns)
	'add' operation ('add_ln31', fcnn.cpp:31) [22]  (2.123 ns)
	'getelementptr' operation ('input_r_addr', fcnn.cpp:31) [24]  (0.000 ns)
	'load' operation ('input_r_load', fcnn.cpp:31) on array 'input_r' [25]  (3.257 ns)

 <State 2>: 3.257ns
The critical path consists of the following:
	'load' operation ('input_r_load', fcnn.cpp:31) on array 'input_r' [25]  (3.257 ns)

 <State 3>: 4.098ns
The critical path consists of the following:
	multiplexor before operation 'fpext' with delay (1.610 ns)
'fpext' operation ('pf', fcnn.cpp:31) [27]  (2.488 ns)

 <State 4>: 4.098ns
The critical path consists of the following:
	'fpext' operation ('pf', fcnn.cpp:31) [27]  (4.098 ns)

 <State 5>: 7.058ns
The critical path consists of the following:
	'sub' operation ('sub_ln31_1', fcnn.cpp:31) [39]  (2.131 ns)
	'icmp' operation ('icmp_ln31_1', fcnn.cpp:31) [40]  (2.131 ns)
	'select' operation ('select_ln31_1', fcnn.cpp:31) [43]  (0.682 ns)
	'icmp' operation ('icmp_ln31_4', fcnn.cpp:31) [55]  (2.115 ns)

 <State 6>: 6.258ns
The critical path consists of the following:
	'shl' operation ('shl_ln31', fcnn.cpp:31) [57]  (3.672 ns)
	'select' operation ('select_ln31_3', fcnn.cpp:31) [58]  (0.000 ns)
	'select' operation ('select_ln31_4', fcnn.cpp:31) [59]  (0.000 ns)
	'select' operation ('select_ln31_5', fcnn.cpp:31) [62]  (1.293 ns)
	'select' operation ('select_ln31_6', fcnn.cpp:31) [66]  (1.293 ns)

 <State 7>: 3.257ns
The critical path consists of the following:
	'getelementptr' operation ('input_tile_addr', fcnn.cpp:31) [67]  (0.000 ns)
	'store' operation ('store_ln31', fcnn.cpp:31) of variable 'select_ln31_6', fcnn.cpp:31 on array 'input_tile' [68]  (3.257 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
