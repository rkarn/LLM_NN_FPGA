

================================================================
== Vitis HLS Report for 'mnist_inference'
================================================================
* Date:           Sun Sep 15 04:39:35 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        python_hlsc_fcnn
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.225 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |   max  |   Type  |
    +---------+---------+----------+----------+-------+--------+---------+
    |    11041|   526582|  0.110 ms|  5.266 ms|  11042|  526583|       no|
    +---------+---------+----------+----------+-------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+-------------+-----------+-----------+----------+----------+
        |                      |  Latency (cycles) |  Iteration  |  Initiation Interval  |   Trip   |          |
        |       Loop Name      |   min   |   max   |   Latency   |  achieved |   target  |   Count  | Pipelined|
        +----------------------+---------+---------+-------------+-----------+-----------+----------+----------+
        |- VITIS_LOOP_27_2     |    11024|   526565|  848 ~ 40505|          -|          -|        13|        no|
        | + VITIS_LOOP_43_6    |      820|    39220|    82 ~ 3922|          -|          -|        10|        no|
        |  ++ VITIS_LOOP_45_7  |       79|     3919|            5|          -|          -|  16 ~ 784|        no|
        +----------------------+---------+---------+-------------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 28
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 17 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 6 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 12 10 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.15>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%indvars_iv18 = alloca i32 1"   --->   Operation 29 'alloca' 'indvars_iv18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvars_iv26 = alloca i32 1"   --->   Operation 30 'alloca' 'indvars_iv26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tile = alloca i32 1"   --->   Operation 31 'alloca' 'tile' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%input_tile = alloca i64 1" [fcnn.cpp:16]   --->   Operation 32 'alloca' 'input_tile' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%weight_tile = alloca i64 1" [fcnn.cpp:17]   --->   Operation 33 'alloca' 'weight_tile' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 640> <RAM>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%sum = alloca i64 1" [fcnn.cpp:18]   --->   Operation 34 'alloca' 'sum' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%sum_addr = getelementptr i16 %sum, i64 0, i64 0" [fcnn.cpp:23]   --->   Operation 35 'getelementptr' 'sum_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 65187, i4 %sum_addr" [fcnn.cpp:23]   --->   Operation 36 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%sum_addr_1 = getelementptr i16 %sum, i64 0, i64 1" [fcnn.cpp:23]   --->   Operation 37 'getelementptr' 'sum_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 65273, i4 %sum_addr_1" [fcnn.cpp:23]   --->   Operation 38 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_1 : Operation 39 [1/1] (1.61ns)   --->   "%store_ln27 = store i10 0, i10 %tile" [fcnn.cpp:27]   --->   Operation 39 'store' 'store_ln27' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 40 [1/1] (1.61ns)   --->   "%store_ln27 = store i11 2047, i11 %indvars_iv26" [fcnn.cpp:27]   --->   Operation 40 'store' 'store_ln27' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 41 [1/1] (1.61ns)   --->   "%store_ln27 = store i11 1264, i11 %indvars_iv18" [fcnn.cpp:27]   --->   Operation 41 'store' 'store_ln27' <Predicate = true> <Delay = 1.61>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%sum_addr_2 = getelementptr i16 %sum, i64 0, i64 2" [fcnn.cpp:23]   --->   Operation 42 'getelementptr' 'sum_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 65452, i4 %sum_addr_2" [fcnn.cpp:23]   --->   Operation 43 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%sum_addr_3 = getelementptr i16 %sum, i64 0, i64 3" [fcnn.cpp:23]   --->   Operation 44 'getelementptr' 'sum_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 373, i4 %sum_addr_3" [fcnn.cpp:23]   --->   Operation 45 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 3 <SV = 2> <Delay = 2.15>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%sum_addr_4 = getelementptr i16 %sum, i64 0, i64 4" [fcnn.cpp:23]   --->   Operation 46 'getelementptr' 'sum_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 88, i4 %sum_addr_4" [fcnn.cpp:23]   --->   Operation 47 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%sum_addr_5 = getelementptr i16 %sum, i64 0, i64 5" [fcnn.cpp:23]   --->   Operation 48 'getelementptr' 'sum_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 53, i4 %sum_addr_5" [fcnn.cpp:23]   --->   Operation 49 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 4 <SV = 3> <Delay = 2.15>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%sum_addr_6 = getelementptr i16 %sum, i64 0, i64 6" [fcnn.cpp:23]   --->   Operation 50 'getelementptr' 'sum_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 210, i4 %sum_addr_6" [fcnn.cpp:23]   --->   Operation 51 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%sum_addr_7 = getelementptr i16 %sum, i64 0, i64 7" [fcnn.cpp:23]   --->   Operation 52 'getelementptr' 'sum_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 65391, i4 %sum_addr_7" [fcnn.cpp:23]   --->   Operation 53 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 5 <SV = 4> <Delay = 2.15>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%spectopmodule_ln12 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [fcnn.cpp:12]   --->   Operation 54 'spectopmodule' 'spectopmodule_ln12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 55 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r"   --->   Operation 56 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_r, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 57 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %output_r"   --->   Operation 58 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%sum_addr_8 = getelementptr i16 %sum, i64 0, i64 8" [fcnn.cpp:23]   --->   Operation 59 'getelementptr' 'sum_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 65094, i4 %sum_addr_8" [fcnn.cpp:23]   --->   Operation 60 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%sum_addr_9 = getelementptr i16 %sum, i64 0, i64 9" [fcnn.cpp:23]   --->   Operation 61 'getelementptr' 'sum_addr_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (2.15ns)   --->   "%store_ln23 = store i16 116, i4 %sum_addr_9" [fcnn.cpp:23]   --->   Operation 62 'store' 'store_ln23' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln27 = br void %VITIS_LOOP_29_3" [fcnn.cpp:27]   --->   Operation 63 'br' 'br_ln27' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 5.38>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%indvars_iv18_load = load i11 %indvars_iv18" [fcnn.cpp:27]   --->   Operation 64 'load' 'indvars_iv18_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%indvars_iv26_load = load i11 %indvars_iv26" [fcnn.cpp:27]   --->   Operation 65 'load' 'indvars_iv26_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%tile_1 = load i10 %tile" [fcnn.cpp:27]   --->   Operation 66 'load' 'tile_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln27 = trunc i11 %indvars_iv18_load" [fcnn.cpp:27]   --->   Operation 67 'trunc' 'trunc_ln27' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln27_1 = trunc i11 %indvars_iv26_load" [fcnn.cpp:27]   --->   Operation 68 'trunc' 'trunc_ln27_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (2.12ns)   --->   "%icmp_ln27 = icmp_ult  i10 %tile_1, i10 784" [fcnn.cpp:27]   --->   Operation 69 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 2.12> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln27 = br i1 %icmp_ln27, void %for.body109_ifconv, void %VITIS_LOOP_29_3.split" [fcnn.cpp:27]   --->   Operation 70 'br' 'br_ln27' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (2.12ns)   --->   "%add_ln27_3 = add i11 %indvars_iv26_load, i11 1264" [fcnn.cpp:27]   --->   Operation 71 'add' 'add_ln27_3' <Predicate = (icmp_ln27)> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (2.12ns)   --->   "%icmp_ln27_1 = icmp_ugt  i11 %add_ln27_3, i11 1983" [fcnn.cpp:27]   --->   Operation 72 'icmp' 'icmp_ln27_1' <Predicate = (icmp_ln27)> <Delay = 2.12> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (2.12ns)   --->   "%sub_ln27 = sub i10 783, i10 %trunc_ln27_1" [fcnn.cpp:27]   --->   Operation 73 'sub' 'sub_ln27' <Predicate = (icmp_ln27)> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (1.12ns)   --->   "%select_ln27 = select i1 %icmp_ln27_1, i10 %sub_ln27, i10 64" [fcnn.cpp:27]   --->   Operation 74 'select' 'select_ln27' <Predicate = (icmp_ln27)> <Delay = 1.12> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 75 [2/2] (2.15ns)   --->   "%sum_load = load i4 %sum_addr" [fcnn.cpp:55]   --->   Operation 75 'load' 'sum_load' <Predicate = (!icmp_ln27)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_6 : Operation 76 [2/2] (2.15ns)   --->   "%sum_load_2 = load i4 %sum_addr_1" [fcnn.cpp:55]   --->   Operation 76 'load' 'sum_load_2' <Predicate = (!icmp_ln27)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 7 <SV = 6> <Delay = 2.13>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i10.i3, i10 %select_ln27, i3 0" [fcnn.cpp:35]   --->   Operation 77 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i13 %tmp_s" [fcnn.cpp:35]   --->   Operation 78 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i10.i1, i10 %select_ln27, i1 0" [fcnn.cpp:35]   --->   Operation 79 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i11 %tmp_3" [fcnn.cpp:35]   --->   Operation 80 'zext' 'zext_ln35_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (2.13ns)   --->   "%add_ln35_1 = add i14 %zext_ln35, i14 %zext_ln35_1" [fcnn.cpp:35]   --->   Operation 81 'add' 'add_ln35_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.75>
ST_8 : Operation 82 [2/2] (5.37ns)   --->   "%call_ln27 = call void @mnist_inference_Pipeline_VITIS_LOOP_29_3, i10 %select_ln27, i10 %tile_1, i32 %input_r, i16 %input_tile" [fcnn.cpp:27]   --->   Operation 82 'call' 'call_ln27' <Predicate = true> <Delay = 5.37> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 83 [2/2] (6.75ns)   --->   "%call_ln27 = call void @mnist_inference_Pipeline_VITIS_LOOP_35_4_VITIS_LOOP_36_5, i10 %select_ln27, i14 %add_ln35_1, i16 %weight_tile, i10 %tile_1, i32 %weights" [fcnn.cpp:27]   --->   Operation 83 'call' 'call_ln27' <Predicate = true> <Delay = 6.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 3.25>
ST_9 : Operation 84 [1/1] (2.12ns)   --->   "%icmp_ln27_2 = icmp_ugt  i11 %indvars_iv18_load, i11 1984" [fcnn.cpp:27]   --->   Operation 84 'icmp' 'icmp_ln27_2' <Predicate = true> <Delay = 2.12> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 85 [1/1] (2.12ns)   --->   "%sub_ln27_1 = sub i10 0, i10 %trunc_ln27" [fcnn.cpp:27]   --->   Operation 85 'sub' 'sub_ln27_1' <Predicate = true> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 86 [1/1] (1.12ns)   --->   "%select_ln27_1 = select i1 %icmp_ln27_2, i10 %sub_ln27_1, i10 64" [fcnn.cpp:27]   --->   Operation 86 'select' 'select_ln27_1' <Predicate = true> <Delay = 1.12> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%speclooptripcount_ln27 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 13, i64 13, i64 13" [fcnn.cpp:27]   --->   Operation 87 'speclooptripcount' 'speclooptripcount_ln27' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln27 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [fcnn.cpp:27]   --->   Operation 88 'specloopname' 'specloopname_ln27' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 89 [1/2] (0.00ns)   --->   "%call_ln27 = call void @mnist_inference_Pipeline_VITIS_LOOP_29_3, i10 %select_ln27, i10 %tile_1, i32 %input_r, i16 %input_tile" [fcnn.cpp:27]   --->   Operation 89 'call' 'call_ln27' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 90 [1/2] (0.00ns)   --->   "%call_ln27 = call void @mnist_inference_Pipeline_VITIS_LOOP_35_4_VITIS_LOOP_36_5, i10 %select_ln27, i14 %add_ln35_1, i16 %weight_tile, i10 %tile_1, i32 %weights" [fcnn.cpp:27]   --->   Operation 90 'call' 'call_ln27' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 91 [1/1] (1.61ns)   --->   "%br_ln43 = br void %for.body86.lr.ph" [fcnn.cpp:43]   --->   Operation 91 'br' 'br_ln43' <Predicate = true> <Delay = 1.61>

State 10 <SV = 9> <Delay = 3.73>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%i = phi i4 %add_ln43, void %for.inc99, i4 0, void %VITIS_LOOP_29_3.split" [fcnn.cpp:43]   --->   Operation 92 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (1.77ns)   --->   "%icmp_ln43 = icmp_eq  i4 %i, i4 10" [fcnn.cpp:43]   --->   Operation 93 'icmp' 'icmp_ln43' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 94 [1/1] (1.77ns)   --->   "%add_ln43 = add i4 %i, i4 1" [fcnn.cpp:43]   --->   Operation 94 'add' 'add_ln43' <Predicate = true> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %icmp_ln43, void %for.body86.lr.ph.split, void %for.inc102" [fcnn.cpp:43]   --->   Operation 95 'br' 'br_ln43' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i4 %i" [fcnn.cpp:43]   --->   Operation 96 'zext' 'zext_ln43' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%sum_addr_10 = getelementptr i16 %sum, i64 0, i64 %zext_ln43" [fcnn.cpp:43]   --->   Operation 97 'getelementptr' 'sum_addr_10' <Predicate = (!icmp_ln43)> <Delay = 0.00>
ST_10 : Operation 98 [2/2] (2.15ns)   --->   "%sum_load_1 = load i4 %sum_addr_10" [fcnn.cpp:47]   --->   Operation 98 'load' 'sum_load_1' <Predicate = (!icmp_ln43)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_10 : Operation 99 [1/1] (2.12ns)   --->   "%add_ln27 = add i10 %tile_1, i10 64" [fcnn.cpp:27]   --->   Operation 99 'add' 'add_ln27' <Predicate = (icmp_ln43)> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 100 [1/1] (2.12ns)   --->   "%add_ln27_1 = add i11 %indvars_iv18_load, i11 64" [fcnn.cpp:27]   --->   Operation 100 'add' 'add_ln27_1' <Predicate = (icmp_ln43)> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (2.12ns)   --->   "%add_ln27_2 = add i11 %indvars_iv26_load, i11 64" [fcnn.cpp:27]   --->   Operation 101 'add' 'add_ln27_2' <Predicate = (icmp_ln43)> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (1.61ns)   --->   "%store_ln27 = store i10 %add_ln27, i10 %tile" [fcnn.cpp:27]   --->   Operation 102 'store' 'store_ln27' <Predicate = (icmp_ln43)> <Delay = 1.61>
ST_10 : Operation 103 [1/1] (1.61ns)   --->   "%store_ln27 = store i11 %add_ln27_2, i11 %indvars_iv26" [fcnn.cpp:27]   --->   Operation 103 'store' 'store_ln27' <Predicate = (icmp_ln43)> <Delay = 1.61>
ST_10 : Operation 104 [1/1] (1.61ns)   --->   "%store_ln27 = store i11 %add_ln27_1, i11 %indvars_iv18" [fcnn.cpp:27]   --->   Operation 104 'store' 'store_ln27' <Predicate = (icmp_ln43)> <Delay = 1.61>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln27 = br void %VITIS_LOOP_29_3" [fcnn.cpp:27]   --->   Operation 105 'br' 'br_ln27' <Predicate = (icmp_ln43)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 2.15>
ST_11 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_76 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %i, i6 0" [fcnn.cpp:47]   --->   Operation 106 'bitconcatenate' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [fcnn.cpp:44]   --->   Operation 107 'specpipeline' 'specpipeline_ln44' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%speclooptripcount_ln43 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10" [fcnn.cpp:43]   --->   Operation 108 'speclooptripcount' 'speclooptripcount_ln43' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%specloopname_ln43 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [fcnn.cpp:43]   --->   Operation 109 'specloopname' 'specloopname_ln43' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 110 [1/2] (2.15ns)   --->   "%sum_load_1 = load i4 %sum_addr_10" [fcnn.cpp:47]   --->   Operation 110 'load' 'sum_load_1' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_11 : Operation 111 [1/1] (1.61ns)   --->   "%br_ln45 = br void %for.body86" [fcnn.cpp:45]   --->   Operation 111 'br' 'br_ln45' <Predicate = true> <Delay = 1.61>

State 12 <SV = 11> <Delay = 5.37>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%j_1 = phi i10 0, void %for.body86.lr.ph.split, i10 %add_ln45, void %for.body86" [fcnn.cpp:45]   --->   Operation 112 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i10 %j_1" [fcnn.cpp:47]   --->   Operation 113 'zext' 'zext_ln47' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (2.12ns)   --->   "%add_ln47_1 = add i10 %tmp_76, i10 %j_1" [fcnn.cpp:47]   --->   Operation 114 'add' 'add_ln47_1' <Predicate = true> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln47_1 = zext i10 %add_ln47_1" [fcnn.cpp:47]   --->   Operation 115 'zext' 'zext_ln47_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "%weight_tile_addr = getelementptr i16 %weight_tile, i64 0, i64 %zext_ln47_1" [fcnn.cpp:47]   --->   Operation 116 'getelementptr' 'weight_tile_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 117 [2/2] (3.25ns)   --->   "%weight_tile_load = load i10 %weight_tile_addr" [fcnn.cpp:47]   --->   Operation 117 'load' 'weight_tile_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 640> <RAM>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "%input_tile_addr = getelementptr i16 %input_tile, i64 0, i64 %zext_ln47" [fcnn.cpp:47]   --->   Operation 118 'getelementptr' 'input_tile_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 119 [2/2] (3.25ns)   --->   "%input_tile_load = load i6 %input_tile_addr" [fcnn.cpp:47]   --->   Operation 119 'load' 'input_tile_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_12 : Operation 120 [1/1] (2.12ns)   --->   "%add_ln45 = add i10 %j_1, i10 1" [fcnn.cpp:45]   --->   Operation 120 'add' 'add_ln45' <Predicate = true> <Delay = 2.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 121 [1/1] (2.12ns)   --->   "%icmp_ln45 = icmp_eq  i10 %add_ln45, i10 %select_ln27_1" [fcnn.cpp:45]   --->   Operation 121 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 2.12> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.70>
ST_13 : Operation 122 [1/2] (3.25ns)   --->   "%weight_tile_load = load i10 %weight_tile_addr" [fcnn.cpp:47]   --->   Operation 122 'load' 'weight_tile_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 640> <RAM>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%sext_ln47 = sext i16 %weight_tile_load" [fcnn.cpp:47]   --->   Operation 123 'sext' 'sext_ln47' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/2] (3.25ns)   --->   "%input_tile_load = load i6 %input_tile_addr" [fcnn.cpp:47]   --->   Operation 124 'load' 'input_tile_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_13 : Operation 125 [1/1] (0.00ns)   --->   "%sext_ln47_1 = sext i16 %input_tile_load" [fcnn.cpp:47]   --->   Operation 125 'sext' 'sext_ln47_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 126 [3/3] (1.45ns) (grouped into DSP with root node add_ln47)   --->   "%mul_ln47 = mul i24 %sext_ln47_1, i24 %sext_ln47" [fcnn.cpp:47]   --->   Operation 126 'mul' 'mul_ln47' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 14 <SV = 13> <Delay = 1.45>
ST_14 : Operation 127 [2/3] (1.45ns) (grouped into DSP with root node add_ln47)   --->   "%mul_ln47 = mul i24 %sext_ln47_1, i24 %sext_ln47" [fcnn.cpp:47]   --->   Operation 127 'mul' 'mul_ln47' <Predicate = true> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 15 <SV = 14> <Delay = 2.10>
ST_15 : Operation 128 [1/1] (0.00ns)   --->   "%conv_i_i9171 = phi i16 %sum_load_1, void %for.body86.lr.ph.split, i16 %trunc_ln4, void %for.body86" [fcnn.cpp:47]   --->   Operation 128 'phi' 'conv_i_i9171' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 129 [1/3] (0.00ns) (grouped into DSP with root node add_ln47)   --->   "%mul_ln47 = mul i24 %sext_ln47_1, i24 %sext_ln47" [fcnn.cpp:47]   --->   Operation 129 'mul' 'mul_ln47' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 130 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i24 @_ssdm_op_BitConcatenate.i24.i16.i8, i16 %conv_i_i9171, i8 0" [fcnn.cpp:47]   --->   Operation 130 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 131 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln47 = add i24 %shl_ln, i24 %mul_ln47" [fcnn.cpp:47]   --->   Operation 131 'add' 'add_ln47' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 16 <SV = 15> <Delay = 4.25>
ST_16 : Operation 132 [1/1] (0.00ns)   --->   "%specloopname_ln45 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [fcnn.cpp:45]   --->   Operation 132 'specloopname' 'specloopname_ln45' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 133 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln47 = add i24 %shl_ln, i24 %mul_ln47" [fcnn.cpp:47]   --->   Operation 133 'add' 'add_ln47' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i16 @_ssdm_op_PartSelect.i16.i24.i32.i32, i24 %add_ln47, i32 8, i32 23" [fcnn.cpp:47]   --->   Operation 134 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 135 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 16, i64 784, i64 0"   --->   Operation 135 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln45 = br i1 %icmp_ln45, void %for.body86, void %for.inc99" [fcnn.cpp:45]   --->   Operation 136 'br' 'br_ln45' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 137 [1/1] (2.15ns)   --->   "%store_ln47 = store i16 %trunc_ln4, i4 %sum_addr_10" [fcnn.cpp:47]   --->   Operation 137 'store' 'store_ln47' <Predicate = (icmp_ln45)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_16 : Operation 138 [1/1] (0.00ns)   --->   "%br_ln43 = br void %for.body86.lr.ph" [fcnn.cpp:43]   --->   Operation 138 'br' 'br_ln43' <Predicate = (icmp_ln45)> <Delay = 0.00>

State 17 <SV = 6> <Delay = 4.29>
ST_17 : Operation 139 [1/2] (2.15ns)   --->   "%sum_load = load i4 %sum_addr" [fcnn.cpp:55]   --->   Operation 139 'load' 'sum_load' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_17 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load, i32 15" [fcnn.cpp:55]   --->   Operation 140 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 141 [1/1] (2.14ns)   --->   "%sub_ln55 = sub i16 0, i16 %sum_load" [fcnn.cpp:55]   --->   Operation 141 'sub' 'sub_ln55' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 142 [1/2] (2.15ns)   --->   "%sum_load_2 = load i4 %sum_addr_1" [fcnn.cpp:55]   --->   Operation 142 'load' 'sum_load_2' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_17 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_2, i32 15" [fcnn.cpp:55]   --->   Operation 143 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 144 [1/1] (2.14ns)   --->   "%sub_ln55_3 = sub i16 0, i16 %sum_load_2" [fcnn.cpp:55]   --->   Operation 144 'sub' 'sub_ln55_3' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 145 [2/2] (2.15ns)   --->   "%sum_load_3 = load i4 %sum_addr_2" [fcnn.cpp:55]   --->   Operation 145 'load' 'sum_load_3' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_17 : Operation 146 [2/2] (2.15ns)   --->   "%sum_load_4 = load i4 %sum_addr_3" [fcnn.cpp:55]   --->   Operation 146 'load' 'sum_load_4' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 18 <SV = 7> <Delay = 6.14>
ST_18 : Operation 147 [1/1] (2.14ns)   --->   "%icmp_ln55 = icmp_eq  i16 %sum_load, i16 0" [fcnn.cpp:55]   --->   Operation 147 'icmp' 'icmp_ln55' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 148 [1/1] (1.29ns)   --->   "%select_ln55 = select i1 %tmp_6, i16 %sub_ln55, i16 %sum_load" [fcnn.cpp:55]   --->   Operation 148 'select' 'select_ln55' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 149 [1/1] (0.00ns)   --->   "%tmp = partselect i16 @llvm.part.select.i16, i16 %select_ln55, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 149 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp" [fcnn.cpp:55]   --->   Operation 150 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 151 [1/1] (0.00ns)   --->   "%sext_ln55 = sext i17 %tmp_1" [fcnn.cpp:55]   --->   Operation 151 'sext' 'sext_ln55' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_2 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55, i1 1" [fcnn.cpp:55]   --->   Operation 152 'cttz' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 153 [1/1] (2.70ns)   --->   "%sub_ln55_1 = sub i32 16, i32 %tmp_2" [fcnn.cpp:55]   --->   Operation 153 'sub' 'sub_ln55_1' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 154 [1/1] (0.00ns)   --->   "%trunc_ln55 = trunc i32 %sub_ln55_1" [fcnn.cpp:55]   --->   Operation 154 'trunc' 'trunc_ln55' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln55_1 = trunc i32 %sub_ln55_1" [fcnn.cpp:55]   --->   Operation 155 'trunc' 'trunc_ln55_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 156 [1/1] (2.14ns)   --->   "%add_ln55_1 = add i16 %trunc_ln55, i16 65512" [fcnn.cpp:55]   --->   Operation 156 'add' 'add_ln55_1' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 157 [1/1] (0.00ns)   --->   "%bit_select30_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55, i16 %add_ln55_1" [fcnn.cpp:55]   --->   Operation 157 'bitselect' 'bit_select30_i' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 158 [1/1] (0.00ns)   --->   "%trunc_ln55_2 = trunc i32 %tmp_2" [fcnn.cpp:55]   --->   Operation 158 'trunc' 'trunc_ln55_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 159 [1/1] (2.14ns)   --->   "%icmp_ln55_4 = icmp_eq  i16 %sum_load_2, i16 0" [fcnn.cpp:55]   --->   Operation 159 'icmp' 'icmp_ln55_4' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 160 [1/1] (1.29ns)   --->   "%select_ln55_3 = select i1 %tmp_19, i16 %sub_ln55_3, i16 %sum_load_2" [fcnn.cpp:55]   --->   Operation 160 'select' 'select_ln55_3' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_3, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 161 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 162 [1/1] (0.00ns)   --->   "%tmp_8 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_5" [fcnn.cpp:55]   --->   Operation 162 'bitconcatenate' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 163 [1/1] (0.00ns)   --->   "%sext_ln55_1 = sext i17 %tmp_8" [fcnn.cpp:55]   --->   Operation 163 'sext' 'sext_ln55_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_10 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_1, i1 1" [fcnn.cpp:55]   --->   Operation 164 'cttz' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 165 [1/1] (2.70ns)   --->   "%sub_ln55_4 = sub i32 16, i32 %tmp_10" [fcnn.cpp:55]   --->   Operation 165 'sub' 'sub_ln55_4' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 166 [1/1] (0.00ns)   --->   "%trunc_ln55_3 = trunc i32 %sub_ln55_4" [fcnn.cpp:55]   --->   Operation 166 'trunc' 'trunc_ln55_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 167 [1/1] (0.00ns)   --->   "%trunc_ln55_4 = trunc i32 %sub_ln55_4" [fcnn.cpp:55]   --->   Operation 167 'trunc' 'trunc_ln55_4' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 168 [1/1] (2.14ns)   --->   "%add_ln55_6 = add i16 %trunc_ln55_3, i16 65512" [fcnn.cpp:55]   --->   Operation 168 'add' 'add_ln55_6' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 169 [1/1] (0.00ns)   --->   "%bit_select30_i_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_3, i16 %add_ln55_6" [fcnn.cpp:55]   --->   Operation 169 'bitselect' 'bit_select30_i_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 170 [1/1] (0.00ns)   --->   "%trunc_ln55_5 = trunc i32 %tmp_10" [fcnn.cpp:55]   --->   Operation 170 'trunc' 'trunc_ln55_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 171 [1/2] (2.15ns)   --->   "%sum_load_3 = load i4 %sum_addr_2" [fcnn.cpp:55]   --->   Operation 171 'load' 'sum_load_3' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_18 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_36 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_3, i32 15" [fcnn.cpp:55]   --->   Operation 172 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 173 [1/1] (2.14ns)   --->   "%sub_ln55_6 = sub i16 0, i16 %sum_load_3" [fcnn.cpp:55]   --->   Operation 173 'sub' 'sub_ln55_6' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 174 [1/2] (2.15ns)   --->   "%sum_load_4 = load i4 %sum_addr_3" [fcnn.cpp:55]   --->   Operation 174 'load' 'sum_load_4' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_18 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_73 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_4, i32 15" [fcnn.cpp:55]   --->   Operation 175 'bitselect' 'tmp_73' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 176 [1/1] (2.14ns)   --->   "%sub_ln55_9 = sub i16 0, i16 %sum_load_4" [fcnn.cpp:55]   --->   Operation 176 'sub' 'sub_ln55_9' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 177 [2/2] (2.15ns)   --->   "%sum_load_5 = load i4 %sum_addr_4" [fcnn.cpp:55]   --->   Operation 177 'load' 'sum_load_5' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_18 : Operation 178 [2/2] (2.15ns)   --->   "%sum_load_6 = load i4 %sum_addr_5" [fcnn.cpp:55]   --->   Operation 178 'load' 'sum_load_6' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 19 <SV = 8> <Delay = 7.22>
ST_19 : Operation 179 [1/1] (2.70ns)   --->   "%add_ln55 = add i32 %sub_ln55_1, i32 4294967272" [fcnn.cpp:55]   --->   Operation 179 'add' 'add_ln55' <Predicate = (!icmp_ln55)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 180 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 180 'partselect' 'tmp_9' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 181 [1/1] (2.66ns)   --->   "%icmp_ln55_1 = icmp_sgt  i31 %tmp_9, i31 0" [fcnn.cpp:55]   --->   Operation 181 'icmp' 'icmp_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 182 [1/1] (1.77ns)   --->   "%sub_ln55_40 = sub i4 9, i4 %trunc_ln55_1" [fcnn.cpp:55]   --->   Operation 182 'sub' 'sub_ln55_40' <Predicate = (!icmp_ln55)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 183 [1/1] (0.00ns)   --->   "%zext_ln55_50 = zext i4 %sub_ln55_40" [fcnn.cpp:55]   --->   Operation 183 'zext' 'zext_ln55_50' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 184 [1/1] (2.32ns)   --->   "%lshr_ln55_19 = lshr i16 65535, i16 %zext_ln55_50" [fcnn.cpp:55]   --->   Operation 184 'lshr' 'lshr_ln55_19' <Predicate = (!icmp_ln55)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_2)   --->   "%and_ln55_20 = and i16 %select_ln55, i16 %lshr_ln55_19" [fcnn.cpp:55]   --->   Operation 185 'and' 'and_ln55_20' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 186 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_2 = icmp_ne  i16 %and_ln55_20, i16 0" [fcnn.cpp:55]   --->   Operation 186 'icmp' 'icmp_ln55_2' <Predicate = (!icmp_ln55)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln55 = and i1 %icmp_ln55_1, i1 %icmp_ln55_2" [fcnn.cpp:55]   --->   Operation 187 'and' 'and_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55, i32 31" [fcnn.cpp:55]   --->   Operation 188 'bitselect' 'tmp_11' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln55 = xor i1 %tmp_11, i1 1" [fcnn.cpp:55]   --->   Operation 189 'xor' 'xor_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln55_1 = and i1 %bit_select30_i, i1 %xor_ln55" [fcnn.cpp:55]   --->   Operation 190 'and' 'and_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln55_10 = or i1 %and_ln55_1, i1 %and_ln55" [fcnn.cpp:55]   --->   Operation 191 'or' 'or_ln55_10' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 192 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_10" [fcnn.cpp:55]   --->   Operation 192 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln55)> <Delay = 0.97>
ST_19 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i16 %select_ln55" [fcnn.cpp:55]   --->   Operation 193 'zext' 'zext_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 194 [1/1] (2.70ns)   --->   "%icmp_ln55_3 = icmp_sgt  i32 %add_ln55, i32 0" [fcnn.cpp:55]   --->   Operation 194 'icmp' 'icmp_ln55_3' <Predicate = (!icmp_ln55)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 195 [1/1] (2.70ns)   --->   "%add_ln55_2 = add i32 %sub_ln55_1, i32 4294967271" [fcnn.cpp:55]   --->   Operation 195 'add' 'add_ln55_2' <Predicate = (!icmp_ln55)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln55_1 = zext i32 %add_ln55_2" [fcnn.cpp:55]   --->   Operation 196 'zext' 'zext_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 197 [1/1] (4.08ns)   --->   "%lshr_ln55 = lshr i64 %zext_ln55, i64 %zext_ln55_1" [fcnn.cpp:55]   --->   Operation 197 'lshr' 'lshr_ln55' <Predicate = (!icmp_ln55)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 198 [1/1] (2.70ns)   --->   "%sub_ln55_2 = sub i32 25, i32 %sub_ln55_1" [fcnn.cpp:55]   --->   Operation 198 'sub' 'sub_ln55_2' <Predicate = (!icmp_ln55)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln55_2 = zext i32 %sub_ln55_2" [fcnn.cpp:55]   --->   Operation 199 'zext' 'zext_ln55_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 200 [1/1] (4.08ns)   --->   "%shl_ln55 = shl i64 %zext_ln55, i64 %zext_ln55_2" [fcnn.cpp:55]   --->   Operation 200 'shl' 'shl_ln55' <Predicate = (!icmp_ln55)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 201 [1/1] (2.70ns)   --->   "%add_ln55_5 = add i32 %sub_ln55_4, i32 4294967272" [fcnn.cpp:55]   --->   Operation 201 'add' 'add_ln55_5' <Predicate = (!icmp_ln55_4)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 202 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_5, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 202 'partselect' 'tmp_21' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_19 : Operation 203 [1/1] (2.66ns)   --->   "%icmp_ln55_5 = icmp_sgt  i31 %tmp_21, i31 0" [fcnn.cpp:55]   --->   Operation 203 'icmp' 'icmp_ln55_5' <Predicate = (!icmp_ln55_4)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 204 [1/1] (1.77ns)   --->   "%sub_ln55_41 = sub i4 9, i4 %trunc_ln55_4" [fcnn.cpp:55]   --->   Operation 204 'sub' 'sub_ln55_41' <Predicate = (!icmp_ln55_4)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln55_51 = zext i4 %sub_ln55_41" [fcnn.cpp:55]   --->   Operation 205 'zext' 'zext_ln55_51' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_19 : Operation 206 [1/1] (2.32ns)   --->   "%lshr_ln55_20 = lshr i16 65535, i16 %zext_ln55_51" [fcnn.cpp:55]   --->   Operation 206 'lshr' 'lshr_ln55_20' <Predicate = (!icmp_ln55_4)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_6)   --->   "%and_ln55_21 = and i16 %select_ln55_3, i16 %lshr_ln55_20" [fcnn.cpp:55]   --->   Operation 207 'and' 'and_ln55_21' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 208 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_6 = icmp_ne  i16 %and_ln55_21, i16 0" [fcnn.cpp:55]   --->   Operation 208 'icmp' 'icmp_ln55_6' <Predicate = (!icmp_ln55_4)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_1)   --->   "%and_ln55_2 = and i1 %icmp_ln55_5, i1 %icmp_ln55_6" [fcnn.cpp:55]   --->   Operation 209 'and' 'and_ln55_2' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_1)   --->   "%tmp_26 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_5, i32 31" [fcnn.cpp:55]   --->   Operation 210 'bitselect' 'tmp_26' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_19 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_1)   --->   "%xor_ln55_1 = xor i1 %tmp_26, i1 1" [fcnn.cpp:55]   --->   Operation 211 'xor' 'xor_ln55_1' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_1)   --->   "%and_ln55_3 = and i1 %bit_select30_i_1, i1 %xor_ln55_1" [fcnn.cpp:55]   --->   Operation 212 'and' 'and_ln55_3' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_1)   --->   "%or_ln55 = or i1 %and_ln55_3, i1 %and_ln55_2" [fcnn.cpp:55]   --->   Operation 213 'or' 'or_ln55' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 214 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_1 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55" [fcnn.cpp:55]   --->   Operation 214 'bitconcatenate' 'or_ln55_1' <Predicate = (!icmp_ln55_4)> <Delay = 0.97>
ST_19 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln55_4 = zext i16 %select_ln55_3" [fcnn.cpp:55]   --->   Operation 215 'zext' 'zext_ln55_4' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_19 : Operation 216 [1/1] (2.70ns)   --->   "%icmp_ln55_7 = icmp_sgt  i32 %add_ln55_5, i32 0" [fcnn.cpp:55]   --->   Operation 216 'icmp' 'icmp_ln55_7' <Predicate = (!icmp_ln55_4)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 217 [1/1] (2.70ns)   --->   "%add_ln55_7 = add i32 %sub_ln55_4, i32 4294967271" [fcnn.cpp:55]   --->   Operation 217 'add' 'add_ln55_7' <Predicate = (!icmp_ln55_4)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln55_5 = zext i32 %add_ln55_7" [fcnn.cpp:55]   --->   Operation 218 'zext' 'zext_ln55_5' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_19 : Operation 219 [1/1] (4.08ns)   --->   "%lshr_ln55_2 = lshr i64 %zext_ln55_4, i64 %zext_ln55_5" [fcnn.cpp:55]   --->   Operation 219 'lshr' 'lshr_ln55_2' <Predicate = (!icmp_ln55_4)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 220 [1/1] (2.70ns)   --->   "%sub_ln55_5 = sub i32 25, i32 %sub_ln55_4" [fcnn.cpp:55]   --->   Operation 220 'sub' 'sub_ln55_5' <Predicate = (!icmp_ln55_4)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln55_6 = zext i32 %sub_ln55_5" [fcnn.cpp:55]   --->   Operation 221 'zext' 'zext_ln55_6' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_19 : Operation 222 [1/1] (4.08ns)   --->   "%shl_ln55_1 = shl i64 %zext_ln55_4, i64 %zext_ln55_6" [fcnn.cpp:55]   --->   Operation 222 'shl' 'shl_ln55_1' <Predicate = (!icmp_ln55_4)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 223 [1/1] (2.14ns)   --->   "%icmp_ln55_8 = icmp_eq  i16 %sum_load_3, i16 0" [fcnn.cpp:55]   --->   Operation 223 'icmp' 'icmp_ln55_8' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 224 [1/1] (1.29ns)   --->   "%select_ln55_6 = select i1 %tmp_36, i16 %sub_ln55_6, i16 %sum_load_3" [fcnn.cpp:55]   --->   Operation 224 'select' 'select_ln55_6' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 225 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_6, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 225 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 226 [1/1] (0.00ns)   --->   "%tmp_13 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_12" [fcnn.cpp:55]   --->   Operation 226 'bitconcatenate' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 227 [1/1] (0.00ns)   --->   "%sext_ln55_2 = sext i17 %tmp_13" [fcnn.cpp:55]   --->   Operation 227 'sext' 'sext_ln55_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 228 [1/1] (0.00ns)   --->   "%tmp_15 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_2, i1 1" [fcnn.cpp:55]   --->   Operation 228 'cttz' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 229 [1/1] (2.70ns)   --->   "%sub_ln55_7 = sub i32 16, i32 %tmp_15" [fcnn.cpp:55]   --->   Operation 229 'sub' 'sub_ln55_7' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 230 [1/1] (0.00ns)   --->   "%trunc_ln55_6 = trunc i32 %sub_ln55_7" [fcnn.cpp:55]   --->   Operation 230 'trunc' 'trunc_ln55_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 231 [1/1] (0.00ns)   --->   "%trunc_ln55_7 = trunc i32 %sub_ln55_7" [fcnn.cpp:55]   --->   Operation 231 'trunc' 'trunc_ln55_7' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 232 [1/1] (2.14ns)   --->   "%add_ln55_11 = add i16 %trunc_ln55_6, i16 65512" [fcnn.cpp:55]   --->   Operation 232 'add' 'add_ln55_11' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 233 [1/1] (0.00ns)   --->   "%bit_select30_i_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_6, i16 %add_ln55_11" [fcnn.cpp:55]   --->   Operation 233 'bitselect' 'bit_select30_i_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 234 [1/1] (0.00ns)   --->   "%trunc_ln55_8 = trunc i32 %tmp_15" [fcnn.cpp:55]   --->   Operation 234 'trunc' 'trunc_ln55_8' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 235 [1/1] (2.14ns)   --->   "%icmp_ln55_12 = icmp_eq  i16 %sum_load_4, i16 0" [fcnn.cpp:55]   --->   Operation 235 'icmp' 'icmp_ln55_12' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 236 [1/1] (1.29ns)   --->   "%select_ln55_9 = select i1 %tmp_73, i16 %sub_ln55_9, i16 %sum_load_4" [fcnn.cpp:55]   --->   Operation 236 'select' 'select_ln55_9' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 237 [1/1] (0.00ns)   --->   "%tmp_17 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_9, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 237 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 238 [1/1] (0.00ns)   --->   "%tmp_18 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_17" [fcnn.cpp:55]   --->   Operation 238 'bitconcatenate' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 239 [1/1] (0.00ns)   --->   "%sext_ln55_3 = sext i17 %tmp_18" [fcnn.cpp:55]   --->   Operation 239 'sext' 'sext_ln55_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 240 [1/1] (0.00ns)   --->   "%tmp_20 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_3, i1 1" [fcnn.cpp:55]   --->   Operation 240 'cttz' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 241 [1/1] (2.70ns)   --->   "%sub_ln55_10 = sub i32 16, i32 %tmp_20" [fcnn.cpp:55]   --->   Operation 241 'sub' 'sub_ln55_10' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 242 [1/1] (0.00ns)   --->   "%trunc_ln55_9 = trunc i32 %sub_ln55_10" [fcnn.cpp:55]   --->   Operation 242 'trunc' 'trunc_ln55_9' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 243 [1/1] (0.00ns)   --->   "%trunc_ln55_10 = trunc i32 %sub_ln55_10" [fcnn.cpp:55]   --->   Operation 243 'trunc' 'trunc_ln55_10' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 244 [1/1] (2.14ns)   --->   "%add_ln55_16 = add i16 %trunc_ln55_9, i16 65512" [fcnn.cpp:55]   --->   Operation 244 'add' 'add_ln55_16' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 245 [1/1] (0.00ns)   --->   "%bit_select30_i_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_9, i16 %add_ln55_16" [fcnn.cpp:55]   --->   Operation 245 'bitselect' 'bit_select30_i_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 246 [1/1] (0.00ns)   --->   "%trunc_ln55_11 = trunc i32 %tmp_20" [fcnn.cpp:55]   --->   Operation 246 'trunc' 'trunc_ln55_11' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 247 [1/2] (2.15ns)   --->   "%sum_load_5 = load i4 %sum_addr_4" [fcnn.cpp:55]   --->   Operation 247 'load' 'sum_load_5' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_19 : Operation 248 [1/1] (0.00ns)   --->   "%tmp_78 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_5, i32 15" [fcnn.cpp:55]   --->   Operation 248 'bitselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 249 [1/1] (2.14ns)   --->   "%sub_ln55_12 = sub i16 0, i16 %sum_load_5" [fcnn.cpp:55]   --->   Operation 249 'sub' 'sub_ln55_12' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 250 [1/2] (2.15ns)   --->   "%sum_load_6 = load i4 %sum_addr_5" [fcnn.cpp:55]   --->   Operation 250 'load' 'sum_load_6' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_19 : Operation 251 [1/1] (0.00ns)   --->   "%tmp_82 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_6, i32 15" [fcnn.cpp:55]   --->   Operation 251 'bitselect' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 252 [1/1] (2.14ns)   --->   "%sub_ln55_15 = sub i16 0, i16 %sum_load_6" [fcnn.cpp:55]   --->   Operation 252 'sub' 'sub_ln55_15' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 253 [2/2] (2.15ns)   --->   "%sum_load_7 = load i4 %sum_addr_6" [fcnn.cpp:55]   --->   Operation 253 'load' 'sum_load_7' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_19 : Operation 254 [2/2] (2.15ns)   --->   "%sum_load_8 = load i4 %sum_addr_7" [fcnn.cpp:55]   --->   Operation 254 'load' 'sum_load_8' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 20 <SV = 9> <Delay = 7.22>
ST_20 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_3)   --->   "%select_ln55_1 = select i1 %icmp_ln55_3, i64 %lshr_ln55, i64 %shl_ln55" [fcnn.cpp:55]   --->   Operation 255 'select' 'select_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_3)   --->   "%zext_ln55_3 = zext i2 %or_ln" [fcnn.cpp:55]   --->   Operation 256 'zext' 'zext_ln55_3' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_20 : Operation 257 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_3 = add i64 %select_ln55_1, i64 %zext_ln55_3" [fcnn.cpp:55]   --->   Operation 257 'add' 'add_ln55_3' <Predicate = (!icmp_ln55)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 258 [1/1] (0.00ns)   --->   "%lshr_ln55_1 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_3, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 258 'partselect' 'lshr_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_20 : Operation 259 [1/1] (0.00ns)   --->   "%tmp_16 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_3, i32 25" [fcnn.cpp:55]   --->   Operation 259 'bitselect' 'tmp_16' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_20 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_8)   --->   "%select_ln55_10 = select i1 %icmp_ln55_7, i64 %lshr_ln55_2, i64 %shl_ln55_1" [fcnn.cpp:55]   --->   Operation 260 'select' 'select_ln55_10' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_8)   --->   "%zext_ln55_7 = zext i2 %or_ln55_1" [fcnn.cpp:55]   --->   Operation 261 'zext' 'zext_ln55_7' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_20 : Operation 262 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_8 = add i64 %select_ln55_10, i64 %zext_ln55_7" [fcnn.cpp:55]   --->   Operation 262 'add' 'add_ln55_8' <Predicate = (!icmp_ln55_4)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 263 [1/1] (0.00ns)   --->   "%lshr_ln55_3 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_8, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 263 'partselect' 'lshr_ln55_3' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_20 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_31 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_8, i32 25" [fcnn.cpp:55]   --->   Operation 264 'bitselect' 'tmp_31' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_20 : Operation 265 [1/1] (2.70ns)   --->   "%add_ln55_10 = add i32 %sub_ln55_7, i32 4294967272" [fcnn.cpp:55]   --->   Operation 265 'add' 'add_ln55_10' <Predicate = (!icmp_ln55_8)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 266 [1/1] (0.00ns)   --->   "%tmp_41 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_10, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 266 'partselect' 'tmp_41' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_20 : Operation 267 [1/1] (2.66ns)   --->   "%icmp_ln55_9 = icmp_sgt  i31 %tmp_41, i31 0" [fcnn.cpp:55]   --->   Operation 267 'icmp' 'icmp_ln55_9' <Predicate = (!icmp_ln55_8)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 268 [1/1] (1.77ns)   --->   "%sub_ln55_42 = sub i4 9, i4 %trunc_ln55_7" [fcnn.cpp:55]   --->   Operation 268 'sub' 'sub_ln55_42' <Predicate = (!icmp_ln55_8)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 269 [1/1] (0.00ns)   --->   "%zext_ln55_52 = zext i4 %sub_ln55_42" [fcnn.cpp:55]   --->   Operation 269 'zext' 'zext_ln55_52' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_20 : Operation 270 [1/1] (2.32ns)   --->   "%lshr_ln55_21 = lshr i16 65535, i16 %zext_ln55_52" [fcnn.cpp:55]   --->   Operation 270 'lshr' 'lshr_ln55_21' <Predicate = (!icmp_ln55_8)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_10)   --->   "%and_ln55_22 = and i16 %select_ln55_6, i16 %lshr_ln55_21" [fcnn.cpp:55]   --->   Operation 271 'and' 'and_ln55_22' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 272 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_10 = icmp_ne  i16 %and_ln55_22, i16 0" [fcnn.cpp:55]   --->   Operation 272 'icmp' 'icmp_ln55_10' <Predicate = (!icmp_ln55_8)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_2)   --->   "%and_ln55_4 = and i1 %icmp_ln55_9, i1 %icmp_ln55_10" [fcnn.cpp:55]   --->   Operation 273 'and' 'and_ln55_4' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_2)   --->   "%tmp_46 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_10, i32 31" [fcnn.cpp:55]   --->   Operation 274 'bitselect' 'tmp_46' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_20 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_2)   --->   "%xor_ln55_2 = xor i1 %tmp_46, i1 1" [fcnn.cpp:55]   --->   Operation 275 'xor' 'xor_ln55_2' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_2)   --->   "%and_ln55_5 = and i1 %bit_select30_i_2, i1 %xor_ln55_2" [fcnn.cpp:55]   --->   Operation 276 'and' 'and_ln55_5' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_2)   --->   "%or_ln55_11 = or i1 %and_ln55_5, i1 %and_ln55_4" [fcnn.cpp:55]   --->   Operation 277 'or' 'or_ln55_11' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 278 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_2 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_11" [fcnn.cpp:55]   --->   Operation 278 'bitconcatenate' 'or_ln55_2' <Predicate = (!icmp_ln55_8)> <Delay = 0.97>
ST_20 : Operation 279 [1/1] (0.00ns)   --->   "%zext_ln55_8 = zext i16 %select_ln55_6" [fcnn.cpp:55]   --->   Operation 279 'zext' 'zext_ln55_8' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_20 : Operation 280 [1/1] (2.70ns)   --->   "%icmp_ln55_11 = icmp_sgt  i32 %add_ln55_10, i32 0" [fcnn.cpp:55]   --->   Operation 280 'icmp' 'icmp_ln55_11' <Predicate = (!icmp_ln55_8)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 281 [1/1] (2.70ns)   --->   "%add_ln55_12 = add i32 %sub_ln55_7, i32 4294967271" [fcnn.cpp:55]   --->   Operation 281 'add' 'add_ln55_12' <Predicate = (!icmp_ln55_8)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 282 [1/1] (0.00ns)   --->   "%zext_ln55_9 = zext i32 %add_ln55_12" [fcnn.cpp:55]   --->   Operation 282 'zext' 'zext_ln55_9' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_20 : Operation 283 [1/1] (4.08ns)   --->   "%lshr_ln55_4 = lshr i64 %zext_ln55_8, i64 %zext_ln55_9" [fcnn.cpp:55]   --->   Operation 283 'lshr' 'lshr_ln55_4' <Predicate = (!icmp_ln55_8)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 284 [1/1] (2.70ns)   --->   "%sub_ln55_8 = sub i32 25, i32 %sub_ln55_7" [fcnn.cpp:55]   --->   Operation 284 'sub' 'sub_ln55_8' <Predicate = (!icmp_ln55_8)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 285 [1/1] (0.00ns)   --->   "%zext_ln55_10 = zext i32 %sub_ln55_8" [fcnn.cpp:55]   --->   Operation 285 'zext' 'zext_ln55_10' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_20 : Operation 286 [1/1] (4.08ns)   --->   "%shl_ln55_2 = shl i64 %zext_ln55_8, i64 %zext_ln55_10" [fcnn.cpp:55]   --->   Operation 286 'shl' 'shl_ln55_2' <Predicate = (!icmp_ln55_8)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 287 [1/1] (2.70ns)   --->   "%add_ln55_15 = add i32 %sub_ln55_10, i32 4294967272" [fcnn.cpp:55]   --->   Operation 287 'add' 'add_ln55_15' <Predicate = (!icmp_ln55_12)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 288 [1/1] (0.00ns)   --->   "%tmp_74 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_15, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 288 'partselect' 'tmp_74' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_20 : Operation 289 [1/1] (2.66ns)   --->   "%icmp_ln55_13 = icmp_sgt  i31 %tmp_74, i31 0" [fcnn.cpp:55]   --->   Operation 289 'icmp' 'icmp_ln55_13' <Predicate = (!icmp_ln55_12)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 290 [1/1] (1.77ns)   --->   "%sub_ln55_43 = sub i4 9, i4 %trunc_ln55_10" [fcnn.cpp:55]   --->   Operation 290 'sub' 'sub_ln55_43' <Predicate = (!icmp_ln55_12)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 291 [1/1] (0.00ns)   --->   "%zext_ln55_53 = zext i4 %sub_ln55_43" [fcnn.cpp:55]   --->   Operation 291 'zext' 'zext_ln55_53' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_20 : Operation 292 [1/1] (2.32ns)   --->   "%lshr_ln55_22 = lshr i16 65535, i16 %zext_ln55_53" [fcnn.cpp:55]   --->   Operation 292 'lshr' 'lshr_ln55_22' <Predicate = (!icmp_ln55_12)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 293 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_14)   --->   "%and_ln55_23 = and i16 %select_ln55_9, i16 %lshr_ln55_22" [fcnn.cpp:55]   --->   Operation 293 'and' 'and_ln55_23' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 294 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_14 = icmp_ne  i16 %and_ln55_23, i16 0" [fcnn.cpp:55]   --->   Operation 294 'icmp' 'icmp_ln55_14' <Predicate = (!icmp_ln55_12)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 295 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_3)   --->   "%and_ln55_6 = and i1 %icmp_ln55_13, i1 %icmp_ln55_14" [fcnn.cpp:55]   --->   Operation 295 'and' 'and_ln55_6' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_3)   --->   "%tmp_75 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_15, i32 31" [fcnn.cpp:55]   --->   Operation 296 'bitselect' 'tmp_75' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_20 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_3)   --->   "%xor_ln55_3 = xor i1 %tmp_75, i1 1" [fcnn.cpp:55]   --->   Operation 297 'xor' 'xor_ln55_3' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_3)   --->   "%and_ln55_7 = and i1 %bit_select30_i_3, i1 %xor_ln55_3" [fcnn.cpp:55]   --->   Operation 298 'and' 'and_ln55_7' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_3)   --->   "%or_ln55_12 = or i1 %and_ln55_7, i1 %and_ln55_6" [fcnn.cpp:55]   --->   Operation 299 'or' 'or_ln55_12' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 300 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_3 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_12" [fcnn.cpp:55]   --->   Operation 300 'bitconcatenate' 'or_ln55_3' <Predicate = (!icmp_ln55_12)> <Delay = 0.97>
ST_20 : Operation 301 [1/1] (0.00ns)   --->   "%zext_ln55_12 = zext i16 %select_ln55_9" [fcnn.cpp:55]   --->   Operation 301 'zext' 'zext_ln55_12' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_20 : Operation 302 [1/1] (2.70ns)   --->   "%icmp_ln55_15 = icmp_sgt  i32 %add_ln55_15, i32 0" [fcnn.cpp:55]   --->   Operation 302 'icmp' 'icmp_ln55_15' <Predicate = (!icmp_ln55_12)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 303 [1/1] (2.70ns)   --->   "%add_ln55_17 = add i32 %sub_ln55_10, i32 4294967271" [fcnn.cpp:55]   --->   Operation 303 'add' 'add_ln55_17' <Predicate = (!icmp_ln55_12)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 304 [1/1] (0.00ns)   --->   "%zext_ln55_13 = zext i32 %add_ln55_17" [fcnn.cpp:55]   --->   Operation 304 'zext' 'zext_ln55_13' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_20 : Operation 305 [1/1] (4.08ns)   --->   "%lshr_ln55_6 = lshr i64 %zext_ln55_12, i64 %zext_ln55_13" [fcnn.cpp:55]   --->   Operation 305 'lshr' 'lshr_ln55_6' <Predicate = (!icmp_ln55_12)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 306 [1/1] (2.70ns)   --->   "%sub_ln55_11 = sub i32 25, i32 %sub_ln55_10" [fcnn.cpp:55]   --->   Operation 306 'sub' 'sub_ln55_11' <Predicate = (!icmp_ln55_12)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 307 [1/1] (0.00ns)   --->   "%zext_ln55_14 = zext i32 %sub_ln55_11" [fcnn.cpp:55]   --->   Operation 307 'zext' 'zext_ln55_14' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_20 : Operation 308 [1/1] (4.08ns)   --->   "%shl_ln55_3 = shl i64 %zext_ln55_12, i64 %zext_ln55_14" [fcnn.cpp:55]   --->   Operation 308 'shl' 'shl_ln55_3' <Predicate = (!icmp_ln55_12)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 309 [1/1] (2.14ns)   --->   "%icmp_ln55_16 = icmp_eq  i16 %sum_load_5, i16 0" [fcnn.cpp:55]   --->   Operation 309 'icmp' 'icmp_ln55_16' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 310 [1/1] (1.29ns)   --->   "%select_ln55_12 = select i1 %tmp_78, i16 %sub_ln55_12, i16 %sum_load_5" [fcnn.cpp:55]   --->   Operation 310 'select' 'select_ln55_12' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 311 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_12, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 311 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 312 [1/1] (0.00ns)   --->   "%tmp_23 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_22" [fcnn.cpp:55]   --->   Operation 312 'bitconcatenate' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 313 [1/1] (0.00ns)   --->   "%sext_ln55_4 = sext i17 %tmp_23" [fcnn.cpp:55]   --->   Operation 313 'sext' 'sext_ln55_4' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 314 [1/1] (0.00ns)   --->   "%tmp_25 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_4, i1 1" [fcnn.cpp:55]   --->   Operation 314 'cttz' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 315 [1/1] (2.70ns)   --->   "%sub_ln55_13 = sub i32 16, i32 %tmp_25" [fcnn.cpp:55]   --->   Operation 315 'sub' 'sub_ln55_13' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 316 [1/1] (0.00ns)   --->   "%trunc_ln55_12 = trunc i32 %sub_ln55_13" [fcnn.cpp:55]   --->   Operation 316 'trunc' 'trunc_ln55_12' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 317 [1/1] (0.00ns)   --->   "%trunc_ln55_13 = trunc i32 %sub_ln55_13" [fcnn.cpp:55]   --->   Operation 317 'trunc' 'trunc_ln55_13' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 318 [1/1] (2.14ns)   --->   "%add_ln55_21 = add i16 %trunc_ln55_12, i16 65512" [fcnn.cpp:55]   --->   Operation 318 'add' 'add_ln55_21' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 319 [1/1] (0.00ns)   --->   "%bit_select30_i_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_12, i16 %add_ln55_21" [fcnn.cpp:55]   --->   Operation 319 'bitselect' 'bit_select30_i_4' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 320 [1/1] (0.00ns)   --->   "%trunc_ln55_14 = trunc i32 %tmp_25" [fcnn.cpp:55]   --->   Operation 320 'trunc' 'trunc_ln55_14' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 321 [1/1] (2.14ns)   --->   "%icmp_ln55_20 = icmp_eq  i16 %sum_load_6, i16 0" [fcnn.cpp:55]   --->   Operation 321 'icmp' 'icmp_ln55_20' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 322 [1/1] (1.29ns)   --->   "%select_ln55_15 = select i1 %tmp_82, i16 %sub_ln55_15, i16 %sum_load_6" [fcnn.cpp:55]   --->   Operation 322 'select' 'select_ln55_15' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 323 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_15, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 323 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 324 [1/1] (0.00ns)   --->   "%tmp_28 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_27" [fcnn.cpp:55]   --->   Operation 324 'bitconcatenate' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 325 [1/1] (0.00ns)   --->   "%sext_ln55_5 = sext i17 %tmp_28" [fcnn.cpp:55]   --->   Operation 325 'sext' 'sext_ln55_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 326 [1/1] (0.00ns)   --->   "%tmp_30 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_5, i1 1" [fcnn.cpp:55]   --->   Operation 326 'cttz' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 327 [1/1] (2.70ns)   --->   "%sub_ln55_16 = sub i32 16, i32 %tmp_30" [fcnn.cpp:55]   --->   Operation 327 'sub' 'sub_ln55_16' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 328 [1/1] (0.00ns)   --->   "%trunc_ln55_15 = trunc i32 %sub_ln55_16" [fcnn.cpp:55]   --->   Operation 328 'trunc' 'trunc_ln55_15' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 329 [1/1] (0.00ns)   --->   "%trunc_ln55_16 = trunc i32 %sub_ln55_16" [fcnn.cpp:55]   --->   Operation 329 'trunc' 'trunc_ln55_16' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 330 [1/1] (2.14ns)   --->   "%add_ln55_26 = add i16 %trunc_ln55_15, i16 65512" [fcnn.cpp:55]   --->   Operation 330 'add' 'add_ln55_26' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 331 [1/1] (0.00ns)   --->   "%bit_select30_i_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_15, i16 %add_ln55_26" [fcnn.cpp:55]   --->   Operation 331 'bitselect' 'bit_select30_i_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 332 [1/1] (0.00ns)   --->   "%trunc_ln55_17 = trunc i32 %tmp_30" [fcnn.cpp:55]   --->   Operation 332 'trunc' 'trunc_ln55_17' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 333 [1/2] (2.15ns)   --->   "%sum_load_7 = load i4 %sum_addr_6" [fcnn.cpp:55]   --->   Operation 333 'load' 'sum_load_7' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_20 : Operation 334 [1/1] (0.00ns)   --->   "%tmp_86 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_7, i32 15" [fcnn.cpp:55]   --->   Operation 334 'bitselect' 'tmp_86' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 335 [1/1] (2.14ns)   --->   "%sub_ln55_18 = sub i16 0, i16 %sum_load_7" [fcnn.cpp:55]   --->   Operation 335 'sub' 'sub_ln55_18' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 336 [1/2] (2.15ns)   --->   "%sum_load_8 = load i4 %sum_addr_7" [fcnn.cpp:55]   --->   Operation 336 'load' 'sum_load_8' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_20 : Operation 337 [1/1] (0.00ns)   --->   "%tmp_90 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_8, i32 15" [fcnn.cpp:55]   --->   Operation 337 'bitselect' 'tmp_90' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 338 [1/1] (2.14ns)   --->   "%sub_ln55_21 = sub i16 0, i16 %sum_load_8" [fcnn.cpp:55]   --->   Operation 338 'sub' 'sub_ln55_21' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 339 [2/2] (2.15ns)   --->   "%sum_load_9 = load i4 %sum_addr_8" [fcnn.cpp:55]   --->   Operation 339 'load' 'sum_load_9' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_20 : Operation 340 [2/2] (2.15ns)   --->   "%sum_load_10 = load i4 %sum_addr_9" [fcnn.cpp:55]   --->   Operation 340 'load' 'sum_load_10' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>

State 21 <SV = 10> <Delay = 7.22>
ST_21 : Operation 341 [1/1] (0.00ns)   --->   "%zext_ln55_40 = zext i63 %lshr_ln55_1" [fcnn.cpp:55]   --->   Operation 341 'zext' 'zext_ln55_40' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_21 : Operation 342 [1/1] (1.04ns)   --->   "%select_ln55_4 = select i1 %tmp_16, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 342 'select' 'select_ln55_4' <Predicate = (!icmp_ln55)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 343 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_30 = sub i8 8, i8 %trunc_ln55_2" [fcnn.cpp:55]   --->   Operation 343 'sub' 'sub_ln55_30' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 344 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_4 = add i8 %sub_ln55_30, i8 %select_ln55_4" [fcnn.cpp:55]   --->   Operation 344 'add' 'add_ln55_4' <Predicate = (!icmp_ln55)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 345 [1/1] (0.00ns)   --->   "%tmp_7 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_6, i8 %add_ln55_4" [fcnn.cpp:55]   --->   Operation 345 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_21 : Operation 346 [1/1] (0.00ns)   --->   "%pi_assign = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_40, i9 %tmp_7, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 346 'partset' 'pi_assign' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_21 : Operation 347 [1/1] (0.00ns)   --->   "%LD = trunc i64 %pi_assign" [fcnn.cpp:55]   --->   Operation 347 'trunc' 'LD' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_21 : Operation 348 [1/1] (0.00ns)   --->   "%bitcast_ln766 = bitcast i32 %LD" [fcnn.cpp:55]   --->   Operation 348 'bitcast' 'bitcast_ln766' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_21 : Operation 349 [1/1] (0.79ns)   --->   "%select_ln55_7 = select i1 %icmp_ln55, i32 0, i32 %bitcast_ln766" [fcnn.cpp:55]   --->   Operation 349 'select' 'select_ln55_7' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 350 [1/1] (0.00ns)   --->   "%zext_ln55_41 = zext i63 %lshr_ln55_3" [fcnn.cpp:55]   --->   Operation 350 'zext' 'zext_ln55_41' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_21 : Operation 351 [1/1] (1.04ns)   --->   "%select_ln55_13 = select i1 %tmp_31, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 351 'select' 'select_ln55_13' <Predicate = (!icmp_ln55_4)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 352 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_31 = sub i8 8, i8 %trunc_ln55_5" [fcnn.cpp:55]   --->   Operation 352 'sub' 'sub_ln55_31' <Predicate = (!icmp_ln55_4)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 353 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_9 = add i8 %sub_ln55_31, i8 %select_ln55_13" [fcnn.cpp:55]   --->   Operation 353 'add' 'add_ln55_9' <Predicate = (!icmp_ln55_4)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 354 [1/1] (0.00ns)   --->   "%tmp_24 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_19, i8 %add_ln55_9" [fcnn.cpp:55]   --->   Operation 354 'bitconcatenate' 'tmp_24' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_21 : Operation 355 [1/1] (0.00ns)   --->   "%pi_assign_1 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_41, i9 %tmp_24, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 355 'partset' 'pi_assign_1' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_21 : Operation 356 [1/1] (0.00ns)   --->   "%LD_1 = trunc i64 %pi_assign_1" [fcnn.cpp:55]   --->   Operation 356 'trunc' 'LD_1' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_21 : Operation 357 [1/1] (0.00ns)   --->   "%bitcast_ln766_1 = bitcast i32 %LD_1" [fcnn.cpp:55]   --->   Operation 357 'bitcast' 'bitcast_ln766_1' <Predicate = (!icmp_ln55_4)> <Delay = 0.00>
ST_21 : Operation 358 [1/1] (0.79ns)   --->   "%select_ln55_16 = select i1 %icmp_ln55_4, i32 0, i32 %bitcast_ln766_1" [fcnn.cpp:55]   --->   Operation 358 'select' 'select_ln55_16' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_13)   --->   "%select_ln55_19 = select i1 %icmp_ln55_11, i64 %lshr_ln55_4, i64 %shl_ln55_2" [fcnn.cpp:55]   --->   Operation 359 'select' 'select_ln55_19' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_13)   --->   "%zext_ln55_11 = zext i2 %or_ln55_2" [fcnn.cpp:55]   --->   Operation 360 'zext' 'zext_ln55_11' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_21 : Operation 361 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_13 = add i64 %select_ln55_19, i64 %zext_ln55_11" [fcnn.cpp:55]   --->   Operation 361 'add' 'add_ln55_13' <Predicate = (!icmp_ln55_8)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 362 [1/1] (0.00ns)   --->   "%lshr_ln55_5 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_13, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 362 'partselect' 'lshr_ln55_5' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_21 : Operation 363 [1/1] (0.00ns)   --->   "%tmp_51 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_13, i32 25" [fcnn.cpp:55]   --->   Operation 363 'bitselect' 'tmp_51' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_21 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_18)   --->   "%select_ln55_28 = select i1 %icmp_ln55_15, i64 %lshr_ln55_6, i64 %shl_ln55_3" [fcnn.cpp:55]   --->   Operation 364 'select' 'select_ln55_28' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_18)   --->   "%zext_ln55_15 = zext i2 %or_ln55_3" [fcnn.cpp:55]   --->   Operation 365 'zext' 'zext_ln55_15' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_21 : Operation 366 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_18 = add i64 %select_ln55_28, i64 %zext_ln55_15" [fcnn.cpp:55]   --->   Operation 366 'add' 'add_ln55_18' <Predicate = (!icmp_ln55_12)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 367 [1/1] (0.00ns)   --->   "%lshr_ln55_7 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_18, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 367 'partselect' 'lshr_ln55_7' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_21 : Operation 368 [1/1] (0.00ns)   --->   "%tmp_77 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_18, i32 25" [fcnn.cpp:55]   --->   Operation 368 'bitselect' 'tmp_77' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_21 : Operation 369 [1/1] (2.70ns)   --->   "%add_ln55_20 = add i32 %sub_ln55_13, i32 4294967272" [fcnn.cpp:55]   --->   Operation 369 'add' 'add_ln55_20' <Predicate = (!icmp_ln55_16)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 370 [1/1] (0.00ns)   --->   "%tmp_79 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_20, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 370 'partselect' 'tmp_79' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_21 : Operation 371 [1/1] (2.66ns)   --->   "%icmp_ln55_17 = icmp_sgt  i31 %tmp_79, i31 0" [fcnn.cpp:55]   --->   Operation 371 'icmp' 'icmp_ln55_17' <Predicate = (!icmp_ln55_16)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 372 [1/1] (1.77ns)   --->   "%sub_ln55_44 = sub i4 9, i4 %trunc_ln55_13" [fcnn.cpp:55]   --->   Operation 372 'sub' 'sub_ln55_44' <Predicate = (!icmp_ln55_16)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 373 [1/1] (0.00ns)   --->   "%zext_ln55_54 = zext i4 %sub_ln55_44" [fcnn.cpp:55]   --->   Operation 373 'zext' 'zext_ln55_54' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_21 : Operation 374 [1/1] (2.32ns)   --->   "%lshr_ln55_23 = lshr i16 65535, i16 %zext_ln55_54" [fcnn.cpp:55]   --->   Operation 374 'lshr' 'lshr_ln55_23' <Predicate = (!icmp_ln55_16)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_18)   --->   "%and_ln55_24 = and i16 %select_ln55_12, i16 %lshr_ln55_23" [fcnn.cpp:55]   --->   Operation 375 'and' 'and_ln55_24' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 376 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_18 = icmp_ne  i16 %and_ln55_24, i16 0" [fcnn.cpp:55]   --->   Operation 376 'icmp' 'icmp_ln55_18' <Predicate = (!icmp_ln55_16)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_4)   --->   "%and_ln55_8 = and i1 %icmp_ln55_17, i1 %icmp_ln55_18" [fcnn.cpp:55]   --->   Operation 377 'and' 'and_ln55_8' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_4)   --->   "%tmp_80 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_20, i32 31" [fcnn.cpp:55]   --->   Operation 378 'bitselect' 'tmp_80' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_21 : Operation 379 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_4)   --->   "%xor_ln55_4 = xor i1 %tmp_80, i1 1" [fcnn.cpp:55]   --->   Operation 379 'xor' 'xor_ln55_4' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_4)   --->   "%and_ln55_9 = and i1 %bit_select30_i_4, i1 %xor_ln55_4" [fcnn.cpp:55]   --->   Operation 380 'and' 'and_ln55_9' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_4)   --->   "%or_ln55_13 = or i1 %and_ln55_9, i1 %and_ln55_8" [fcnn.cpp:55]   --->   Operation 381 'or' 'or_ln55_13' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 382 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_4 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_13" [fcnn.cpp:55]   --->   Operation 382 'bitconcatenate' 'or_ln55_4' <Predicate = (!icmp_ln55_16)> <Delay = 0.97>
ST_21 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln55_16 = zext i16 %select_ln55_12" [fcnn.cpp:55]   --->   Operation 383 'zext' 'zext_ln55_16' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_21 : Operation 384 [1/1] (2.70ns)   --->   "%icmp_ln55_19 = icmp_sgt  i32 %add_ln55_20, i32 0" [fcnn.cpp:55]   --->   Operation 384 'icmp' 'icmp_ln55_19' <Predicate = (!icmp_ln55_16)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 385 [1/1] (2.70ns)   --->   "%add_ln55_22 = add i32 %sub_ln55_13, i32 4294967271" [fcnn.cpp:55]   --->   Operation 385 'add' 'add_ln55_22' <Predicate = (!icmp_ln55_16)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 386 [1/1] (0.00ns)   --->   "%zext_ln55_17 = zext i32 %add_ln55_22" [fcnn.cpp:55]   --->   Operation 386 'zext' 'zext_ln55_17' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_21 : Operation 387 [1/1] (4.08ns)   --->   "%lshr_ln55_8 = lshr i64 %zext_ln55_16, i64 %zext_ln55_17" [fcnn.cpp:55]   --->   Operation 387 'lshr' 'lshr_ln55_8' <Predicate = (!icmp_ln55_16)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 388 [1/1] (2.70ns)   --->   "%sub_ln55_14 = sub i32 25, i32 %sub_ln55_13" [fcnn.cpp:55]   --->   Operation 388 'sub' 'sub_ln55_14' <Predicate = (!icmp_ln55_16)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 389 [1/1] (0.00ns)   --->   "%zext_ln55_18 = zext i32 %sub_ln55_14" [fcnn.cpp:55]   --->   Operation 389 'zext' 'zext_ln55_18' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_21 : Operation 390 [1/1] (4.08ns)   --->   "%shl_ln55_4 = shl i64 %zext_ln55_16, i64 %zext_ln55_18" [fcnn.cpp:55]   --->   Operation 390 'shl' 'shl_ln55_4' <Predicate = (!icmp_ln55_16)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 391 [1/1] (2.70ns)   --->   "%add_ln55_25 = add i32 %sub_ln55_16, i32 4294967272" [fcnn.cpp:55]   --->   Operation 391 'add' 'add_ln55_25' <Predicate = (!icmp_ln55_20)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 392 [1/1] (0.00ns)   --->   "%tmp_83 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_25, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 392 'partselect' 'tmp_83' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_21 : Operation 393 [1/1] (2.66ns)   --->   "%icmp_ln55_21 = icmp_sgt  i31 %tmp_83, i31 0" [fcnn.cpp:55]   --->   Operation 393 'icmp' 'icmp_ln55_21' <Predicate = (!icmp_ln55_20)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 394 [1/1] (1.77ns)   --->   "%sub_ln55_45 = sub i4 9, i4 %trunc_ln55_16" [fcnn.cpp:55]   --->   Operation 394 'sub' 'sub_ln55_45' <Predicate = (!icmp_ln55_20)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 395 [1/1] (0.00ns)   --->   "%zext_ln55_55 = zext i4 %sub_ln55_45" [fcnn.cpp:55]   --->   Operation 395 'zext' 'zext_ln55_55' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_21 : Operation 396 [1/1] (2.32ns)   --->   "%lshr_ln55_24 = lshr i16 65535, i16 %zext_ln55_55" [fcnn.cpp:55]   --->   Operation 396 'lshr' 'lshr_ln55_24' <Predicate = (!icmp_ln55_20)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_22)   --->   "%and_ln55_25 = and i16 %select_ln55_15, i16 %lshr_ln55_24" [fcnn.cpp:55]   --->   Operation 397 'and' 'and_ln55_25' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 398 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_22 = icmp_ne  i16 %and_ln55_25, i16 0" [fcnn.cpp:55]   --->   Operation 398 'icmp' 'icmp_ln55_22' <Predicate = (!icmp_ln55_20)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_5)   --->   "%and_ln55_10 = and i1 %icmp_ln55_21, i1 %icmp_ln55_22" [fcnn.cpp:55]   --->   Operation 399 'and' 'and_ln55_10' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_5)   --->   "%tmp_84 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_25, i32 31" [fcnn.cpp:55]   --->   Operation 400 'bitselect' 'tmp_84' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_21 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_5)   --->   "%xor_ln55_5 = xor i1 %tmp_84, i1 1" [fcnn.cpp:55]   --->   Operation 401 'xor' 'xor_ln55_5' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_5)   --->   "%and_ln55_11 = and i1 %bit_select30_i_5, i1 %xor_ln55_5" [fcnn.cpp:55]   --->   Operation 402 'and' 'and_ln55_11' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_5)   --->   "%or_ln55_14 = or i1 %and_ln55_11, i1 %and_ln55_10" [fcnn.cpp:55]   --->   Operation 403 'or' 'or_ln55_14' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 404 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_5 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_14" [fcnn.cpp:55]   --->   Operation 404 'bitconcatenate' 'or_ln55_5' <Predicate = (!icmp_ln55_20)> <Delay = 0.97>
ST_21 : Operation 405 [1/1] (0.00ns)   --->   "%zext_ln55_20 = zext i16 %select_ln55_15" [fcnn.cpp:55]   --->   Operation 405 'zext' 'zext_ln55_20' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_21 : Operation 406 [1/1] (2.70ns)   --->   "%icmp_ln55_23 = icmp_sgt  i32 %add_ln55_25, i32 0" [fcnn.cpp:55]   --->   Operation 406 'icmp' 'icmp_ln55_23' <Predicate = (!icmp_ln55_20)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 407 [1/1] (2.70ns)   --->   "%add_ln55_27 = add i32 %sub_ln55_16, i32 4294967271" [fcnn.cpp:55]   --->   Operation 407 'add' 'add_ln55_27' <Predicate = (!icmp_ln55_20)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 408 [1/1] (0.00ns)   --->   "%zext_ln55_21 = zext i32 %add_ln55_27" [fcnn.cpp:55]   --->   Operation 408 'zext' 'zext_ln55_21' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_21 : Operation 409 [1/1] (4.08ns)   --->   "%lshr_ln55_10 = lshr i64 %zext_ln55_20, i64 %zext_ln55_21" [fcnn.cpp:55]   --->   Operation 409 'lshr' 'lshr_ln55_10' <Predicate = (!icmp_ln55_20)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 410 [1/1] (2.70ns)   --->   "%sub_ln55_17 = sub i32 25, i32 %sub_ln55_16" [fcnn.cpp:55]   --->   Operation 410 'sub' 'sub_ln55_17' <Predicate = (!icmp_ln55_20)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 411 [1/1] (0.00ns)   --->   "%zext_ln55_22 = zext i32 %sub_ln55_17" [fcnn.cpp:55]   --->   Operation 411 'zext' 'zext_ln55_22' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_21 : Operation 412 [1/1] (4.08ns)   --->   "%shl_ln55_5 = shl i64 %zext_ln55_20, i64 %zext_ln55_22" [fcnn.cpp:55]   --->   Operation 412 'shl' 'shl_ln55_5' <Predicate = (!icmp_ln55_20)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 413 [1/1] (2.14ns)   --->   "%icmp_ln55_24 = icmp_eq  i16 %sum_load_7, i16 0" [fcnn.cpp:55]   --->   Operation 413 'icmp' 'icmp_ln55_24' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 414 [1/1] (1.29ns)   --->   "%select_ln55_18 = select i1 %tmp_86, i16 %sub_ln55_18, i16 %sum_load_7" [fcnn.cpp:55]   --->   Operation 414 'select' 'select_ln55_18' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 415 [1/1] (0.00ns)   --->   "%tmp_32 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_18, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 415 'partselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 416 [1/1] (0.00ns)   --->   "%tmp_33 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_32" [fcnn.cpp:55]   --->   Operation 416 'bitconcatenate' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 417 [1/1] (0.00ns)   --->   "%sext_ln55_6 = sext i17 %tmp_33" [fcnn.cpp:55]   --->   Operation 417 'sext' 'sext_ln55_6' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 418 [1/1] (0.00ns)   --->   "%tmp_35 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_6, i1 1" [fcnn.cpp:55]   --->   Operation 418 'cttz' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 419 [1/1] (2.70ns)   --->   "%sub_ln55_19 = sub i32 16, i32 %tmp_35" [fcnn.cpp:55]   --->   Operation 419 'sub' 'sub_ln55_19' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 420 [1/1] (0.00ns)   --->   "%trunc_ln55_18 = trunc i32 %sub_ln55_19" [fcnn.cpp:55]   --->   Operation 420 'trunc' 'trunc_ln55_18' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 421 [1/1] (0.00ns)   --->   "%trunc_ln55_19 = trunc i32 %sub_ln55_19" [fcnn.cpp:55]   --->   Operation 421 'trunc' 'trunc_ln55_19' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 422 [1/1] (2.14ns)   --->   "%add_ln55_31 = add i16 %trunc_ln55_18, i16 65512" [fcnn.cpp:55]   --->   Operation 422 'add' 'add_ln55_31' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 423 [1/1] (0.00ns)   --->   "%bit_select30_i_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_18, i16 %add_ln55_31" [fcnn.cpp:55]   --->   Operation 423 'bitselect' 'bit_select30_i_6' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 424 [1/1] (0.00ns)   --->   "%trunc_ln55_20 = trunc i32 %tmp_35" [fcnn.cpp:55]   --->   Operation 424 'trunc' 'trunc_ln55_20' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 425 [1/1] (2.14ns)   --->   "%icmp_ln55_28 = icmp_eq  i16 %sum_load_8, i16 0" [fcnn.cpp:55]   --->   Operation 425 'icmp' 'icmp_ln55_28' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 426 [1/1] (1.29ns)   --->   "%select_ln55_21 = select i1 %tmp_90, i16 %sub_ln55_21, i16 %sum_load_8" [fcnn.cpp:55]   --->   Operation 426 'select' 'select_ln55_21' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 427 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_21, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 427 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 428 [1/1] (0.00ns)   --->   "%tmp_38 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_37" [fcnn.cpp:55]   --->   Operation 428 'bitconcatenate' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 429 [1/1] (0.00ns)   --->   "%sext_ln55_7 = sext i17 %tmp_38" [fcnn.cpp:55]   --->   Operation 429 'sext' 'sext_ln55_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 430 [1/1] (0.00ns)   --->   "%tmp_40 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_7, i1 1" [fcnn.cpp:55]   --->   Operation 430 'cttz' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 431 [1/1] (2.70ns)   --->   "%sub_ln55_22 = sub i32 16, i32 %tmp_40" [fcnn.cpp:55]   --->   Operation 431 'sub' 'sub_ln55_22' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 432 [1/1] (0.00ns)   --->   "%trunc_ln55_21 = trunc i32 %sub_ln55_22" [fcnn.cpp:55]   --->   Operation 432 'trunc' 'trunc_ln55_21' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 433 [1/1] (0.00ns)   --->   "%trunc_ln55_22 = trunc i32 %sub_ln55_22" [fcnn.cpp:55]   --->   Operation 433 'trunc' 'trunc_ln55_22' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 434 [1/1] (2.14ns)   --->   "%add_ln55_36 = add i16 %trunc_ln55_21, i16 65512" [fcnn.cpp:55]   --->   Operation 434 'add' 'add_ln55_36' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 435 [1/1] (0.00ns)   --->   "%bit_select30_i_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_21, i16 %add_ln55_36" [fcnn.cpp:55]   --->   Operation 435 'bitselect' 'bit_select30_i_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 436 [1/1] (0.00ns)   --->   "%trunc_ln55_23 = trunc i32 %tmp_40" [fcnn.cpp:55]   --->   Operation 436 'trunc' 'trunc_ln55_23' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 437 [1/2] (2.15ns)   --->   "%sum_load_9 = load i4 %sum_addr_8" [fcnn.cpp:55]   --->   Operation 437 'load' 'sum_load_9' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_21 : Operation 438 [1/1] (0.00ns)   --->   "%tmp_94 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_9, i32 15" [fcnn.cpp:55]   --->   Operation 438 'bitselect' 'tmp_94' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 439 [1/1] (2.14ns)   --->   "%sub_ln55_24 = sub i16 0, i16 %sum_load_9" [fcnn.cpp:55]   --->   Operation 439 'sub' 'sub_ln55_24' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 440 [1/2] (2.15ns)   --->   "%sum_load_10 = load i4 %sum_addr_9" [fcnn.cpp:55]   --->   Operation 440 'load' 'sum_load_10' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10> <RAM>
ST_21 : Operation 441 [1/1] (0.00ns)   --->   "%tmp_98 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %sum_load_10, i32 15" [fcnn.cpp:55]   --->   Operation 441 'bitselect' 'tmp_98' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 442 [1/1] (2.14ns)   --->   "%sub_ln55_27 = sub i16 0, i16 %sum_load_10" [fcnn.cpp:55]   --->   Operation 442 'sub' 'sub_ln55_27' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 11> <Delay = 7.22>
ST_22 : [1/1] (1.86ns)   --->   Input mux for Operation 443 '%tmp_14 = fcmp_ogt  i32 %select_ln55_7, i32 0'
ST_22 : Operation 443 [2/2] (3.22ns)   --->   "%tmp_14 = fcmp_ogt  i32 %select_ln55_7, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 443 'fcmp' 'tmp_14' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : [1/1] (1.86ns)   --->   Input mux for Operation 444 '%tmp_34 = fcmp_ogt  i32 %select_ln55_16, i32 0'
ST_22 : Operation 444 [2/2] (3.22ns)   --->   "%tmp_34 = fcmp_ogt  i32 %select_ln55_16, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 444 'fcmp' 'tmp_34' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 445 [1/1] (0.00ns)   --->   "%zext_ln55_42 = zext i63 %lshr_ln55_5" [fcnn.cpp:55]   --->   Operation 445 'zext' 'zext_ln55_42' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_22 : Operation 446 [1/1] (1.04ns)   --->   "%select_ln55_22 = select i1 %tmp_51, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 446 'select' 'select_ln55_22' <Predicate = (!icmp_ln55_8)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 447 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_32 = sub i8 8, i8 %trunc_ln55_8" [fcnn.cpp:55]   --->   Operation 447 'sub' 'sub_ln55_32' <Predicate = (!icmp_ln55_8)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 448 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_14 = add i8 %sub_ln55_32, i8 %select_ln55_22" [fcnn.cpp:55]   --->   Operation 448 'add' 'add_ln55_14' <Predicate = (!icmp_ln55_8)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 449 [1/1] (0.00ns)   --->   "%tmp_39 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_36, i8 %add_ln55_14" [fcnn.cpp:55]   --->   Operation 449 'bitconcatenate' 'tmp_39' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_22 : Operation 450 [1/1] (0.00ns)   --->   "%pi_assign_2 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_42, i9 %tmp_39, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 450 'partset' 'pi_assign_2' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_22 : Operation 451 [1/1] (0.00ns)   --->   "%LD_2 = trunc i64 %pi_assign_2" [fcnn.cpp:55]   --->   Operation 451 'trunc' 'LD_2' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_22 : Operation 452 [1/1] (0.00ns)   --->   "%bitcast_ln766_2 = bitcast i32 %LD_2" [fcnn.cpp:55]   --->   Operation 452 'bitcast' 'bitcast_ln766_2' <Predicate = (!icmp_ln55_8)> <Delay = 0.00>
ST_22 : Operation 453 [1/1] (0.79ns)   --->   "%select_ln55_25 = select i1 %icmp_ln55_8, i32 0, i32 %bitcast_ln766_2" [fcnn.cpp:55]   --->   Operation 453 'select' 'select_ln55_25' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 454 [1/1] (0.00ns)   --->   "%zext_ln55_43 = zext i63 %lshr_ln55_7" [fcnn.cpp:55]   --->   Operation 454 'zext' 'zext_ln55_43' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_22 : Operation 455 [1/1] (1.04ns)   --->   "%select_ln55_30 = select i1 %tmp_77, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 455 'select' 'select_ln55_30' <Predicate = (!icmp_ln55_12)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 456 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_33 = sub i8 8, i8 %trunc_ln55_11" [fcnn.cpp:55]   --->   Operation 456 'sub' 'sub_ln55_33' <Predicate = (!icmp_ln55_12)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 457 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_19 = add i8 %sub_ln55_33, i8 %select_ln55_30" [fcnn.cpp:55]   --->   Operation 457 'add' 'add_ln55_19' <Predicate = (!icmp_ln55_12)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 458 [1/1] (0.00ns)   --->   "%tmp_52 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_73, i8 %add_ln55_19" [fcnn.cpp:55]   --->   Operation 458 'bitconcatenate' 'tmp_52' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_22 : Operation 459 [1/1] (0.00ns)   --->   "%pi_assign_3 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_43, i9 %tmp_52, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 459 'partset' 'pi_assign_3' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_22 : Operation 460 [1/1] (0.00ns)   --->   "%LD_3 = trunc i64 %pi_assign_3" [fcnn.cpp:55]   --->   Operation 460 'trunc' 'LD_3' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_22 : Operation 461 [1/1] (0.00ns)   --->   "%bitcast_ln766_3 = bitcast i32 %LD_3" [fcnn.cpp:55]   --->   Operation 461 'bitcast' 'bitcast_ln766_3' <Predicate = (!icmp_ln55_12)> <Delay = 0.00>
ST_22 : Operation 462 [1/1] (0.79ns)   --->   "%select_ln55_31 = select i1 %icmp_ln55_12, i32 0, i32 %bitcast_ln766_3" [fcnn.cpp:55]   --->   Operation 462 'select' 'select_ln55_31' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 463 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_23)   --->   "%select_ln55_32 = select i1 %icmp_ln55_19, i64 %lshr_ln55_8, i64 %shl_ln55_4" [fcnn.cpp:55]   --->   Operation 463 'select' 'select_ln55_32' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 464 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_23)   --->   "%zext_ln55_19 = zext i2 %or_ln55_4" [fcnn.cpp:55]   --->   Operation 464 'zext' 'zext_ln55_19' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_22 : Operation 465 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_23 = add i64 %select_ln55_32, i64 %zext_ln55_19" [fcnn.cpp:55]   --->   Operation 465 'add' 'add_ln55_23' <Predicate = (!icmp_ln55_16)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 466 [1/1] (0.00ns)   --->   "%lshr_ln55_9 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_23, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 466 'partselect' 'lshr_ln55_9' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_22 : Operation 467 [1/1] (0.00ns)   --->   "%tmp_81 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_23, i32 25" [fcnn.cpp:55]   --->   Operation 467 'bitselect' 'tmp_81' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_22 : Operation 468 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_28)   --->   "%select_ln55_35 = select i1 %icmp_ln55_23, i64 %lshr_ln55_10, i64 %shl_ln55_5" [fcnn.cpp:55]   --->   Operation 468 'select' 'select_ln55_35' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 469 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_28)   --->   "%zext_ln55_23 = zext i2 %or_ln55_5" [fcnn.cpp:55]   --->   Operation 469 'zext' 'zext_ln55_23' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_22 : Operation 470 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_28 = add i64 %select_ln55_35, i64 %zext_ln55_23" [fcnn.cpp:55]   --->   Operation 470 'add' 'add_ln55_28' <Predicate = (!icmp_ln55_20)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 471 [1/1] (0.00ns)   --->   "%lshr_ln55_s = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_28, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 471 'partselect' 'lshr_ln55_s' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_22 : Operation 472 [1/1] (0.00ns)   --->   "%tmp_85 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_28, i32 25" [fcnn.cpp:55]   --->   Operation 472 'bitselect' 'tmp_85' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_22 : Operation 473 [1/1] (2.70ns)   --->   "%add_ln55_30 = add i32 %sub_ln55_19, i32 4294967272" [fcnn.cpp:55]   --->   Operation 473 'add' 'add_ln55_30' <Predicate = (!icmp_ln55_24)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 474 [1/1] (0.00ns)   --->   "%tmp_87 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_30, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 474 'partselect' 'tmp_87' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_22 : Operation 475 [1/1] (2.66ns)   --->   "%icmp_ln55_25 = icmp_sgt  i31 %tmp_87, i31 0" [fcnn.cpp:55]   --->   Operation 475 'icmp' 'icmp_ln55_25' <Predicate = (!icmp_ln55_24)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 476 [1/1] (1.77ns)   --->   "%sub_ln55_46 = sub i4 9, i4 %trunc_ln55_19" [fcnn.cpp:55]   --->   Operation 476 'sub' 'sub_ln55_46' <Predicate = (!icmp_ln55_24)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 477 [1/1] (0.00ns)   --->   "%zext_ln55_56 = zext i4 %sub_ln55_46" [fcnn.cpp:55]   --->   Operation 477 'zext' 'zext_ln55_56' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_22 : Operation 478 [1/1] (2.32ns)   --->   "%lshr_ln55_25 = lshr i16 65535, i16 %zext_ln55_56" [fcnn.cpp:55]   --->   Operation 478 'lshr' 'lshr_ln55_25' <Predicate = (!icmp_ln55_24)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_26)   --->   "%and_ln55_26 = and i16 %select_ln55_18, i16 %lshr_ln55_25" [fcnn.cpp:55]   --->   Operation 479 'and' 'and_ln55_26' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 480 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_26 = icmp_ne  i16 %and_ln55_26, i16 0" [fcnn.cpp:55]   --->   Operation 480 'icmp' 'icmp_ln55_26' <Predicate = (!icmp_ln55_24)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 481 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_6)   --->   "%and_ln55_12 = and i1 %icmp_ln55_25, i1 %icmp_ln55_26" [fcnn.cpp:55]   --->   Operation 481 'and' 'and_ln55_12' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 482 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_6)   --->   "%tmp_88 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_30, i32 31" [fcnn.cpp:55]   --->   Operation 482 'bitselect' 'tmp_88' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_22 : Operation 483 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_6)   --->   "%xor_ln55_6 = xor i1 %tmp_88, i1 1" [fcnn.cpp:55]   --->   Operation 483 'xor' 'xor_ln55_6' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 484 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_6)   --->   "%and_ln55_13 = and i1 %bit_select30_i_6, i1 %xor_ln55_6" [fcnn.cpp:55]   --->   Operation 484 'and' 'and_ln55_13' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 485 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_6)   --->   "%or_ln55_15 = or i1 %and_ln55_13, i1 %and_ln55_12" [fcnn.cpp:55]   --->   Operation 485 'or' 'or_ln55_15' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 486 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_6 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_15" [fcnn.cpp:55]   --->   Operation 486 'bitconcatenate' 'or_ln55_6' <Predicate = (!icmp_ln55_24)> <Delay = 0.97>
ST_22 : Operation 487 [1/1] (0.00ns)   --->   "%zext_ln55_24 = zext i16 %select_ln55_18" [fcnn.cpp:55]   --->   Operation 487 'zext' 'zext_ln55_24' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_22 : Operation 488 [1/1] (2.70ns)   --->   "%icmp_ln55_27 = icmp_sgt  i32 %add_ln55_30, i32 0" [fcnn.cpp:55]   --->   Operation 488 'icmp' 'icmp_ln55_27' <Predicate = (!icmp_ln55_24)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 489 [1/1] (2.70ns)   --->   "%add_ln55_32 = add i32 %sub_ln55_19, i32 4294967271" [fcnn.cpp:55]   --->   Operation 489 'add' 'add_ln55_32' <Predicate = (!icmp_ln55_24)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 490 [1/1] (0.00ns)   --->   "%zext_ln55_25 = zext i32 %add_ln55_32" [fcnn.cpp:55]   --->   Operation 490 'zext' 'zext_ln55_25' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_22 : Operation 491 [1/1] (4.08ns)   --->   "%lshr_ln55_11 = lshr i64 %zext_ln55_24, i64 %zext_ln55_25" [fcnn.cpp:55]   --->   Operation 491 'lshr' 'lshr_ln55_11' <Predicate = (!icmp_ln55_24)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 492 [1/1] (2.70ns)   --->   "%sub_ln55_20 = sub i32 25, i32 %sub_ln55_19" [fcnn.cpp:55]   --->   Operation 492 'sub' 'sub_ln55_20' <Predicate = (!icmp_ln55_24)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 493 [1/1] (0.00ns)   --->   "%zext_ln55_26 = zext i32 %sub_ln55_20" [fcnn.cpp:55]   --->   Operation 493 'zext' 'zext_ln55_26' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_22 : Operation 494 [1/1] (4.08ns)   --->   "%shl_ln55_6 = shl i64 %zext_ln55_24, i64 %zext_ln55_26" [fcnn.cpp:55]   --->   Operation 494 'shl' 'shl_ln55_6' <Predicate = (!icmp_ln55_24)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 495 [1/1] (2.70ns)   --->   "%add_ln55_35 = add i32 %sub_ln55_22, i32 4294967272" [fcnn.cpp:55]   --->   Operation 495 'add' 'add_ln55_35' <Predicate = (!icmp_ln55_28)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 496 [1/1] (0.00ns)   --->   "%tmp_91 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_35, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 496 'partselect' 'tmp_91' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_22 : Operation 497 [1/1] (2.66ns)   --->   "%icmp_ln55_29 = icmp_sgt  i31 %tmp_91, i31 0" [fcnn.cpp:55]   --->   Operation 497 'icmp' 'icmp_ln55_29' <Predicate = (!icmp_ln55_28)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 498 [1/1] (1.77ns)   --->   "%sub_ln55_47 = sub i4 9, i4 %trunc_ln55_22" [fcnn.cpp:55]   --->   Operation 498 'sub' 'sub_ln55_47' <Predicate = (!icmp_ln55_28)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 499 [1/1] (0.00ns)   --->   "%zext_ln55_57 = zext i4 %sub_ln55_47" [fcnn.cpp:55]   --->   Operation 499 'zext' 'zext_ln55_57' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_22 : Operation 500 [1/1] (2.32ns)   --->   "%lshr_ln55_26 = lshr i16 65535, i16 %zext_ln55_57" [fcnn.cpp:55]   --->   Operation 500 'lshr' 'lshr_ln55_26' <Predicate = (!icmp_ln55_28)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 501 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_30)   --->   "%and_ln55_27 = and i16 %select_ln55_21, i16 %lshr_ln55_26" [fcnn.cpp:55]   --->   Operation 501 'and' 'and_ln55_27' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 502 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_30 = icmp_ne  i16 %and_ln55_27, i16 0" [fcnn.cpp:55]   --->   Operation 502 'icmp' 'icmp_ln55_30' <Predicate = (!icmp_ln55_28)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_7)   --->   "%and_ln55_14 = and i1 %icmp_ln55_29, i1 %icmp_ln55_30" [fcnn.cpp:55]   --->   Operation 503 'and' 'and_ln55_14' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_7)   --->   "%tmp_92 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_35, i32 31" [fcnn.cpp:55]   --->   Operation 504 'bitselect' 'tmp_92' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_22 : Operation 505 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_7)   --->   "%xor_ln55_7 = xor i1 %tmp_92, i1 1" [fcnn.cpp:55]   --->   Operation 505 'xor' 'xor_ln55_7' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 506 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_7)   --->   "%and_ln55_15 = and i1 %bit_select30_i_7, i1 %xor_ln55_7" [fcnn.cpp:55]   --->   Operation 506 'and' 'and_ln55_15' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 507 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_7)   --->   "%or_ln55_16 = or i1 %and_ln55_15, i1 %and_ln55_14" [fcnn.cpp:55]   --->   Operation 507 'or' 'or_ln55_16' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 508 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_7 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_16" [fcnn.cpp:55]   --->   Operation 508 'bitconcatenate' 'or_ln55_7' <Predicate = (!icmp_ln55_28)> <Delay = 0.97>
ST_22 : Operation 509 [1/1] (0.00ns)   --->   "%zext_ln55_28 = zext i16 %select_ln55_21" [fcnn.cpp:55]   --->   Operation 509 'zext' 'zext_ln55_28' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_22 : Operation 510 [1/1] (2.70ns)   --->   "%icmp_ln55_31 = icmp_sgt  i32 %add_ln55_35, i32 0" [fcnn.cpp:55]   --->   Operation 510 'icmp' 'icmp_ln55_31' <Predicate = (!icmp_ln55_28)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 511 [1/1] (2.70ns)   --->   "%add_ln55_37 = add i32 %sub_ln55_22, i32 4294967271" [fcnn.cpp:55]   --->   Operation 511 'add' 'add_ln55_37' <Predicate = (!icmp_ln55_28)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 512 [1/1] (0.00ns)   --->   "%zext_ln55_29 = zext i32 %add_ln55_37" [fcnn.cpp:55]   --->   Operation 512 'zext' 'zext_ln55_29' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_22 : Operation 513 [1/1] (4.08ns)   --->   "%lshr_ln55_13 = lshr i64 %zext_ln55_28, i64 %zext_ln55_29" [fcnn.cpp:55]   --->   Operation 513 'lshr' 'lshr_ln55_13' <Predicate = (!icmp_ln55_28)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 514 [1/1] (2.70ns)   --->   "%sub_ln55_23 = sub i32 25, i32 %sub_ln55_22" [fcnn.cpp:55]   --->   Operation 514 'sub' 'sub_ln55_23' <Predicate = (!icmp_ln55_28)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 515 [1/1] (0.00ns)   --->   "%zext_ln55_30 = zext i32 %sub_ln55_23" [fcnn.cpp:55]   --->   Operation 515 'zext' 'zext_ln55_30' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_22 : Operation 516 [1/1] (4.08ns)   --->   "%shl_ln55_7 = shl i64 %zext_ln55_28, i64 %zext_ln55_30" [fcnn.cpp:55]   --->   Operation 516 'shl' 'shl_ln55_7' <Predicate = (!icmp_ln55_28)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 517 [1/1] (2.14ns)   --->   "%icmp_ln55_32 = icmp_eq  i16 %sum_load_9, i16 0" [fcnn.cpp:55]   --->   Operation 517 'icmp' 'icmp_ln55_32' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 518 [1/1] (1.29ns)   --->   "%select_ln55_24 = select i1 %tmp_94, i16 %sub_ln55_24, i16 %sum_load_9" [fcnn.cpp:55]   --->   Operation 518 'select' 'select_ln55_24' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 519 [1/1] (0.00ns)   --->   "%tmp_42 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_24, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 519 'partselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 520 [1/1] (0.00ns)   --->   "%tmp_43 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_42" [fcnn.cpp:55]   --->   Operation 520 'bitconcatenate' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 521 [1/1] (0.00ns)   --->   "%sext_ln55_8 = sext i17 %tmp_43" [fcnn.cpp:55]   --->   Operation 521 'sext' 'sext_ln55_8' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 522 [1/1] (0.00ns)   --->   "%tmp_45 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_8, i1 1" [fcnn.cpp:55]   --->   Operation 522 'cttz' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 523 [1/1] (2.70ns)   --->   "%sub_ln55_25 = sub i32 16, i32 %tmp_45" [fcnn.cpp:55]   --->   Operation 523 'sub' 'sub_ln55_25' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 524 [1/1] (0.00ns)   --->   "%trunc_ln55_24 = trunc i32 %sub_ln55_25" [fcnn.cpp:55]   --->   Operation 524 'trunc' 'trunc_ln55_24' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 525 [1/1] (0.00ns)   --->   "%trunc_ln55_25 = trunc i32 %sub_ln55_25" [fcnn.cpp:55]   --->   Operation 525 'trunc' 'trunc_ln55_25' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 526 [1/1] (2.14ns)   --->   "%add_ln55_41 = add i16 %trunc_ln55_24, i16 65512" [fcnn.cpp:55]   --->   Operation 526 'add' 'add_ln55_41' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 527 [1/1] (0.00ns)   --->   "%bit_select30_i_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_24, i16 %add_ln55_41" [fcnn.cpp:55]   --->   Operation 527 'bitselect' 'bit_select30_i_8' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 528 [1/1] (0.00ns)   --->   "%trunc_ln55_26 = trunc i32 %tmp_45" [fcnn.cpp:55]   --->   Operation 528 'trunc' 'trunc_ln55_26' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 529 [1/1] (2.14ns)   --->   "%icmp_ln55_36 = icmp_eq  i16 %sum_load_10, i16 0" [fcnn.cpp:55]   --->   Operation 529 'icmp' 'icmp_ln55_36' <Predicate = true> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 530 [1/1] (1.29ns)   --->   "%select_ln55_27 = select i1 %tmp_98, i16 %sub_ln55_27, i16 %sum_load_10" [fcnn.cpp:55]   --->   Operation 530 'select' 'select_ln55_27' <Predicate = true> <Delay = 1.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 531 [1/1] (0.00ns)   --->   "%tmp_47 = partselect i16 @llvm.part.select.i16, i16 %select_ln55_27, i32 15, i32 0" [fcnn.cpp:55]   --->   Operation 531 'partselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 532 [1/1] (0.00ns)   --->   "%tmp_48 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp_47" [fcnn.cpp:55]   --->   Operation 532 'bitconcatenate' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 533 [1/1] (0.00ns)   --->   "%sext_ln55_9 = sext i17 %tmp_48" [fcnn.cpp:55]   --->   Operation 533 'sext' 'sext_ln55_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 534 [1/1] (0.00ns)   --->   "%tmp_50 = cttz i32 @llvm.cttz.i32, i32 %sext_ln55_9, i1 1" [fcnn.cpp:55]   --->   Operation 534 'cttz' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 535 [1/1] (2.70ns)   --->   "%sub_ln55_28 = sub i32 16, i32 %tmp_50" [fcnn.cpp:55]   --->   Operation 535 'sub' 'sub_ln55_28' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 536 [1/1] (0.00ns)   --->   "%trunc_ln55_27 = trunc i32 %sub_ln55_28" [fcnn.cpp:55]   --->   Operation 536 'trunc' 'trunc_ln55_27' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 537 [1/1] (0.00ns)   --->   "%trunc_ln55_28 = trunc i32 %sub_ln55_28" [fcnn.cpp:55]   --->   Operation 537 'trunc' 'trunc_ln55_28' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 538 [1/1] (2.14ns)   --->   "%add_ln55_46 = add i16 %trunc_ln55_27, i16 65512" [fcnn.cpp:55]   --->   Operation 538 'add' 'add_ln55_46' <Predicate = true> <Delay = 2.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 539 [1/1] (0.00ns)   --->   "%bit_select30_i_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln55_27, i16 %add_ln55_46" [fcnn.cpp:55]   --->   Operation 539 'bitselect' 'bit_select30_i_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 540 [1/1] (0.00ns)   --->   "%trunc_ln55_29 = trunc i32 %tmp_50" [fcnn.cpp:55]   --->   Operation 540 'trunc' 'trunc_ln55_29' <Predicate = true> <Delay = 0.00>

State 23 <SV = 12> <Delay = 7.22>
ST_23 : Operation 541 [1/1] (0.00ns)   --->   "%bitcast_ln255 = bitcast i32 %select_ln55_7" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 541 'bitcast' 'bitcast_ln255' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 542 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 542 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 543 [1/1] (0.00ns)   --->   "%trunc_ln255 = trunc i32 %bitcast_ln255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 543 'trunc' 'trunc_ln255' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 544 [1/1] (2.11ns)   --->   "%icmp_ln255 = icmp_ne  i8 %tmp_4, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 544 'icmp' 'icmp_ln255' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 545 [1/1] (2.38ns)   --->   "%icmp_ln255_1 = icmp_eq  i23 %trunc_ln255, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 545 'icmp' 'icmp_ln255_1' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 546 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_2)   --->   "%or_ln255 = or i1 %icmp_ln255_1, i1 %icmp_ln255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 546 'or' 'or_ln255' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 547 [1/2] (5.09ns)   --->   "%tmp_14 = fcmp_ogt  i32 %select_ln55_7, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 547 'fcmp' 'tmp_14' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 548 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_2)   --->   "%and_ln255 = and i1 %or_ln255, i1 %tmp_14" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 548 'and' 'and_ln255' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 549 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_2 = select i1 %and_ln255, i32 %bitcast_ln255, i32 0" [fcnn.cpp:55]   --->   Operation 549 'select' 'select_ln55_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 550 [1/1] (0.00ns)   --->   "%bitcast_ln255_1 = bitcast i32 %select_ln55_16" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 550 'bitcast' 'bitcast_ln255_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 551 [1/1] (0.00ns)   --->   "%tmp_29 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_1, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 551 'partselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 552 [1/1] (0.00ns)   --->   "%trunc_ln255_1 = trunc i32 %bitcast_ln255_1" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 552 'trunc' 'trunc_ln255_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 553 [1/1] (2.11ns)   --->   "%icmp_ln255_2 = icmp_ne  i8 %tmp_29, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 553 'icmp' 'icmp_ln255_2' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 554 [1/1] (2.38ns)   --->   "%icmp_ln255_3 = icmp_eq  i23 %trunc_ln255_1, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 554 'icmp' 'icmp_ln255_3' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 555 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_5)   --->   "%or_ln255_1 = or i1 %icmp_ln255_3, i1 %icmp_ln255_2" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 555 'or' 'or_ln255_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 556 [1/2] (5.09ns)   --->   "%tmp_34 = fcmp_ogt  i32 %select_ln55_16, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 556 'fcmp' 'tmp_34' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 557 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_5)   --->   "%and_ln255_1 = and i1 %or_ln255_1, i1 %tmp_34" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 557 'and' 'and_ln255_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 558 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_5 = select i1 %and_ln255_1, i32 %bitcast_ln255_1, i32 0" [fcnn.cpp:55]   --->   Operation 558 'select' 'select_ln55_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : [1/1] (1.86ns)   --->   Input mux for Operation 559 '%tmp_49 = fcmp_ogt  i32 %select_ln55_25, i32 0'
ST_23 : Operation 559 [2/2] (3.22ns)   --->   "%tmp_49 = fcmp_ogt  i32 %select_ln55_25, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 559 'fcmp' 'tmp_49' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : [1/1] (1.86ns)   --->   Input mux for Operation 560 '%tmp_55 = fcmp_ogt  i32 %select_ln55_31, i32 0'
ST_23 : Operation 560 [2/2] (3.22ns)   --->   "%tmp_55 = fcmp_ogt  i32 %select_ln55_31, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 560 'fcmp' 'tmp_55' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 561 [1/1] (0.00ns)   --->   "%zext_ln55_44 = zext i63 %lshr_ln55_9" [fcnn.cpp:55]   --->   Operation 561 'zext' 'zext_ln55_44' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_23 : Operation 562 [1/1] (1.04ns)   --->   "%select_ln55_33 = select i1 %tmp_81, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 562 'select' 'select_ln55_33' <Predicate = (!icmp_ln55_16)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 563 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_34 = sub i8 8, i8 %trunc_ln55_14" [fcnn.cpp:55]   --->   Operation 563 'sub' 'sub_ln55_34' <Predicate = (!icmp_ln55_16)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 564 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_24 = add i8 %sub_ln55_34, i8 %select_ln55_33" [fcnn.cpp:55]   --->   Operation 564 'add' 'add_ln55_24' <Predicate = (!icmp_ln55_16)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 565 [1/1] (0.00ns)   --->   "%tmp_54 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_78, i8 %add_ln55_24" [fcnn.cpp:55]   --->   Operation 565 'bitconcatenate' 'tmp_54' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_23 : Operation 566 [1/1] (0.00ns)   --->   "%pi_assign_4 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_44, i9 %tmp_54, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 566 'partset' 'pi_assign_4' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_23 : Operation 567 [1/1] (0.00ns)   --->   "%LD_4 = trunc i64 %pi_assign_4" [fcnn.cpp:55]   --->   Operation 567 'trunc' 'LD_4' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_23 : Operation 568 [1/1] (0.00ns)   --->   "%bitcast_ln766_4 = bitcast i32 %LD_4" [fcnn.cpp:55]   --->   Operation 568 'bitcast' 'bitcast_ln766_4' <Predicate = (!icmp_ln55_16)> <Delay = 0.00>
ST_23 : Operation 569 [1/1] (0.79ns)   --->   "%select_ln55_34 = select i1 %icmp_ln55_16, i32 0, i32 %bitcast_ln766_4" [fcnn.cpp:55]   --->   Operation 569 'select' 'select_ln55_34' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 570 [1/1] (0.00ns)   --->   "%zext_ln55_45 = zext i63 %lshr_ln55_s" [fcnn.cpp:55]   --->   Operation 570 'zext' 'zext_ln55_45' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_23 : Operation 571 [1/1] (1.04ns)   --->   "%select_ln55_36 = select i1 %tmp_85, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 571 'select' 'select_ln55_36' <Predicate = (!icmp_ln55_20)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 572 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_35 = sub i8 8, i8 %trunc_ln55_17" [fcnn.cpp:55]   --->   Operation 572 'sub' 'sub_ln55_35' <Predicate = (!icmp_ln55_20)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 573 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_29 = add i8 %sub_ln55_35, i8 %select_ln55_36" [fcnn.cpp:55]   --->   Operation 573 'add' 'add_ln55_29' <Predicate = (!icmp_ln55_20)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 574 [1/1] (0.00ns)   --->   "%tmp_56 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_82, i8 %add_ln55_29" [fcnn.cpp:55]   --->   Operation 574 'bitconcatenate' 'tmp_56' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_23 : Operation 575 [1/1] (0.00ns)   --->   "%pi_assign_5 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_45, i9 %tmp_56, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 575 'partset' 'pi_assign_5' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_23 : Operation 576 [1/1] (0.00ns)   --->   "%LD_5 = trunc i64 %pi_assign_5" [fcnn.cpp:55]   --->   Operation 576 'trunc' 'LD_5' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_23 : Operation 577 [1/1] (0.00ns)   --->   "%bitcast_ln766_5 = bitcast i32 %LD_5" [fcnn.cpp:55]   --->   Operation 577 'bitcast' 'bitcast_ln766_5' <Predicate = (!icmp_ln55_20)> <Delay = 0.00>
ST_23 : Operation 578 [1/1] (0.79ns)   --->   "%select_ln55_37 = select i1 %icmp_ln55_20, i32 0, i32 %bitcast_ln766_5" [fcnn.cpp:55]   --->   Operation 578 'select' 'select_ln55_37' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 579 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_33)   --->   "%select_ln55_38 = select i1 %icmp_ln55_27, i64 %lshr_ln55_11, i64 %shl_ln55_6" [fcnn.cpp:55]   --->   Operation 579 'select' 'select_ln55_38' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 580 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_33)   --->   "%zext_ln55_27 = zext i2 %or_ln55_6" [fcnn.cpp:55]   --->   Operation 580 'zext' 'zext_ln55_27' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_23 : Operation 581 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_33 = add i64 %select_ln55_38, i64 %zext_ln55_27" [fcnn.cpp:55]   --->   Operation 581 'add' 'add_ln55_33' <Predicate = (!icmp_ln55_24)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 582 [1/1] (0.00ns)   --->   "%lshr_ln55_12 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_33, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 582 'partselect' 'lshr_ln55_12' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_23 : Operation 583 [1/1] (0.00ns)   --->   "%tmp_89 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_33, i32 25" [fcnn.cpp:55]   --->   Operation 583 'bitselect' 'tmp_89' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_23 : Operation 584 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_38)   --->   "%select_ln55_41 = select i1 %icmp_ln55_31, i64 %lshr_ln55_13, i64 %shl_ln55_7" [fcnn.cpp:55]   --->   Operation 584 'select' 'select_ln55_41' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 585 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_38)   --->   "%zext_ln55_31 = zext i2 %or_ln55_7" [fcnn.cpp:55]   --->   Operation 585 'zext' 'zext_ln55_31' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_23 : Operation 586 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_38 = add i64 %select_ln55_41, i64 %zext_ln55_31" [fcnn.cpp:55]   --->   Operation 586 'add' 'add_ln55_38' <Predicate = (!icmp_ln55_28)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 587 [1/1] (0.00ns)   --->   "%lshr_ln55_14 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_38, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 587 'partselect' 'lshr_ln55_14' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_23 : Operation 588 [1/1] (0.00ns)   --->   "%tmp_93 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_38, i32 25" [fcnn.cpp:55]   --->   Operation 588 'bitselect' 'tmp_93' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_23 : Operation 589 [1/1] (2.70ns)   --->   "%add_ln55_40 = add i32 %sub_ln55_25, i32 4294967272" [fcnn.cpp:55]   --->   Operation 589 'add' 'add_ln55_40' <Predicate = (!icmp_ln55_32)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 590 [1/1] (0.00ns)   --->   "%tmp_95 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_40, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 590 'partselect' 'tmp_95' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_23 : Operation 591 [1/1] (2.66ns)   --->   "%icmp_ln55_33 = icmp_sgt  i31 %tmp_95, i31 0" [fcnn.cpp:55]   --->   Operation 591 'icmp' 'icmp_ln55_33' <Predicate = (!icmp_ln55_32)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 592 [1/1] (1.77ns)   --->   "%sub_ln55_48 = sub i4 9, i4 %trunc_ln55_25" [fcnn.cpp:55]   --->   Operation 592 'sub' 'sub_ln55_48' <Predicate = (!icmp_ln55_32)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 593 [1/1] (0.00ns)   --->   "%zext_ln55_58 = zext i4 %sub_ln55_48" [fcnn.cpp:55]   --->   Operation 593 'zext' 'zext_ln55_58' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_23 : Operation 594 [1/1] (2.32ns)   --->   "%lshr_ln55_27 = lshr i16 65535, i16 %zext_ln55_58" [fcnn.cpp:55]   --->   Operation 594 'lshr' 'lshr_ln55_27' <Predicate = (!icmp_ln55_32)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 595 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_34)   --->   "%and_ln55_28 = and i16 %select_ln55_24, i16 %lshr_ln55_27" [fcnn.cpp:55]   --->   Operation 595 'and' 'and_ln55_28' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 596 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_34 = icmp_ne  i16 %and_ln55_28, i16 0" [fcnn.cpp:55]   --->   Operation 596 'icmp' 'icmp_ln55_34' <Predicate = (!icmp_ln55_32)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 597 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_8)   --->   "%and_ln55_16 = and i1 %icmp_ln55_33, i1 %icmp_ln55_34" [fcnn.cpp:55]   --->   Operation 597 'and' 'and_ln55_16' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_8)   --->   "%tmp_96 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_40, i32 31" [fcnn.cpp:55]   --->   Operation 598 'bitselect' 'tmp_96' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_23 : Operation 599 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_8)   --->   "%xor_ln55_8 = xor i1 %tmp_96, i1 1" [fcnn.cpp:55]   --->   Operation 599 'xor' 'xor_ln55_8' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 600 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_8)   --->   "%and_ln55_17 = and i1 %bit_select30_i_8, i1 %xor_ln55_8" [fcnn.cpp:55]   --->   Operation 600 'and' 'and_ln55_17' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 601 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_8)   --->   "%or_ln55_17 = or i1 %and_ln55_17, i1 %and_ln55_16" [fcnn.cpp:55]   --->   Operation 601 'or' 'or_ln55_17' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 602 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_8 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_17" [fcnn.cpp:55]   --->   Operation 602 'bitconcatenate' 'or_ln55_8' <Predicate = (!icmp_ln55_32)> <Delay = 0.97>
ST_23 : Operation 603 [1/1] (0.00ns)   --->   "%zext_ln55_32 = zext i16 %select_ln55_24" [fcnn.cpp:55]   --->   Operation 603 'zext' 'zext_ln55_32' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_23 : Operation 604 [1/1] (2.70ns)   --->   "%icmp_ln55_35 = icmp_sgt  i32 %add_ln55_40, i32 0" [fcnn.cpp:55]   --->   Operation 604 'icmp' 'icmp_ln55_35' <Predicate = (!icmp_ln55_32)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 605 [1/1] (2.70ns)   --->   "%add_ln55_42 = add i32 %sub_ln55_25, i32 4294967271" [fcnn.cpp:55]   --->   Operation 605 'add' 'add_ln55_42' <Predicate = (!icmp_ln55_32)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 606 [1/1] (0.00ns)   --->   "%zext_ln55_33 = zext i32 %add_ln55_42" [fcnn.cpp:55]   --->   Operation 606 'zext' 'zext_ln55_33' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_23 : Operation 607 [1/1] (4.08ns)   --->   "%lshr_ln55_15 = lshr i64 %zext_ln55_32, i64 %zext_ln55_33" [fcnn.cpp:55]   --->   Operation 607 'lshr' 'lshr_ln55_15' <Predicate = (!icmp_ln55_32)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 608 [1/1] (2.70ns)   --->   "%sub_ln55_26 = sub i32 25, i32 %sub_ln55_25" [fcnn.cpp:55]   --->   Operation 608 'sub' 'sub_ln55_26' <Predicate = (!icmp_ln55_32)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 609 [1/1] (0.00ns)   --->   "%zext_ln55_34 = zext i32 %sub_ln55_26" [fcnn.cpp:55]   --->   Operation 609 'zext' 'zext_ln55_34' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_23 : Operation 610 [1/1] (4.08ns)   --->   "%shl_ln55_8 = shl i64 %zext_ln55_32, i64 %zext_ln55_34" [fcnn.cpp:55]   --->   Operation 610 'shl' 'shl_ln55_8' <Predicate = (!icmp_ln55_32)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 611 [1/1] (2.70ns)   --->   "%add_ln55_45 = add i32 %sub_ln55_28, i32 4294967272" [fcnn.cpp:55]   --->   Operation 611 'add' 'add_ln55_45' <Predicate = (!icmp_ln55_36)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 612 [1/1] (0.00ns)   --->   "%tmp_99 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln55_45, i32 1, i32 31" [fcnn.cpp:55]   --->   Operation 612 'partselect' 'tmp_99' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_23 : Operation 613 [1/1] (2.66ns)   --->   "%icmp_ln55_37 = icmp_sgt  i31 %tmp_99, i31 0" [fcnn.cpp:55]   --->   Operation 613 'icmp' 'icmp_ln55_37' <Predicate = (!icmp_ln55_36)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 614 [1/1] (1.77ns)   --->   "%sub_ln55_49 = sub i4 9, i4 %trunc_ln55_28" [fcnn.cpp:55]   --->   Operation 614 'sub' 'sub_ln55_49' <Predicate = (!icmp_ln55_36)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 615 [1/1] (0.00ns)   --->   "%zext_ln55_59 = zext i4 %sub_ln55_49" [fcnn.cpp:55]   --->   Operation 615 'zext' 'zext_ln55_59' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_23 : Operation 616 [1/1] (2.32ns)   --->   "%lshr_ln55_28 = lshr i16 65535, i16 %zext_ln55_59" [fcnn.cpp:55]   --->   Operation 616 'lshr' 'lshr_ln55_28' <Predicate = (!icmp_ln55_36)> <Delay = 2.32> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.32> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 617 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln55_38)   --->   "%and_ln55_29 = and i16 %select_ln55_27, i16 %lshr_ln55_28" [fcnn.cpp:55]   --->   Operation 617 'and' 'and_ln55_29' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 618 [1/1] (2.14ns) (out node of the LUT)   --->   "%icmp_ln55_38 = icmp_ne  i16 %and_ln55_29, i16 0" [fcnn.cpp:55]   --->   Operation 618 'icmp' 'icmp_ln55_38' <Predicate = (!icmp_ln55_36)> <Delay = 2.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 619 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_9)   --->   "%and_ln55_18 = and i1 %icmp_ln55_37, i1 %icmp_ln55_38" [fcnn.cpp:55]   --->   Operation 619 'and' 'and_ln55_18' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 620 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_9)   --->   "%tmp_100 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln55_45, i32 31" [fcnn.cpp:55]   --->   Operation 620 'bitselect' 'tmp_100' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_23 : Operation 621 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_9)   --->   "%xor_ln55_9 = xor i1 %tmp_100, i1 1" [fcnn.cpp:55]   --->   Operation 621 'xor' 'xor_ln55_9' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 622 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_9)   --->   "%and_ln55_19 = and i1 %bit_select30_i_9, i1 %xor_ln55_9" [fcnn.cpp:55]   --->   Operation 622 'and' 'and_ln55_19' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 623 [1/1] (0.00ns) (grouped into LUT with out node or_ln55_9)   --->   "%or_ln55_18 = or i1 %and_ln55_19, i1 %and_ln55_18" [fcnn.cpp:55]   --->   Operation 623 'or' 'or_ln55_18' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 624 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln55_9 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln55_18" [fcnn.cpp:55]   --->   Operation 624 'bitconcatenate' 'or_ln55_9' <Predicate = (!icmp_ln55_36)> <Delay = 0.97>
ST_23 : Operation 625 [1/1] (0.00ns)   --->   "%zext_ln55_36 = zext i16 %select_ln55_27" [fcnn.cpp:55]   --->   Operation 625 'zext' 'zext_ln55_36' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_23 : Operation 626 [1/1] (2.70ns)   --->   "%icmp_ln55_39 = icmp_sgt  i32 %add_ln55_45, i32 0" [fcnn.cpp:55]   --->   Operation 626 'icmp' 'icmp_ln55_39' <Predicate = (!icmp_ln55_36)> <Delay = 2.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 627 [1/1] (2.70ns)   --->   "%add_ln55_47 = add i32 %sub_ln55_28, i32 4294967271" [fcnn.cpp:55]   --->   Operation 627 'add' 'add_ln55_47' <Predicate = (!icmp_ln55_36)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 628 [1/1] (0.00ns)   --->   "%zext_ln55_37 = zext i32 %add_ln55_47" [fcnn.cpp:55]   --->   Operation 628 'zext' 'zext_ln55_37' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_23 : Operation 629 [1/1] (4.08ns)   --->   "%lshr_ln55_17 = lshr i64 %zext_ln55_36, i64 %zext_ln55_37" [fcnn.cpp:55]   --->   Operation 629 'lshr' 'lshr_ln55_17' <Predicate = (!icmp_ln55_36)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 630 [1/1] (2.70ns)   --->   "%sub_ln55_29 = sub i32 25, i32 %sub_ln55_28" [fcnn.cpp:55]   --->   Operation 630 'sub' 'sub_ln55_29' <Predicate = (!icmp_ln55_36)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 631 [1/1] (0.00ns)   --->   "%zext_ln55_38 = zext i32 %sub_ln55_29" [fcnn.cpp:55]   --->   Operation 631 'zext' 'zext_ln55_38' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_23 : Operation 632 [1/1] (4.08ns)   --->   "%shl_ln55_9 = shl i64 %zext_ln55_36, i64 %zext_ln55_38" [fcnn.cpp:55]   --->   Operation 632 'shl' 'shl_ln55_9' <Predicate = (!icmp_ln55_36)> <Delay = 4.08> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 13> <Delay = 6.07>
ST_24 : Operation 633 [1/1] (0.00ns)   --->   "%output_r_addr = getelementptr i32 %output_r, i64 0, i64 0" [fcnn.cpp:55]   --->   Operation 633 'getelementptr' 'output_r_addr' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 634 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_2, i4 %output_r_addr" [fcnn.cpp:55]   --->   Operation 634 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_24 : Operation 635 [1/1] (0.00ns)   --->   "%output_r_addr_1 = getelementptr i32 %output_r, i64 0, i64 1" [fcnn.cpp:55]   --->   Operation 635 'getelementptr' 'output_r_addr_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 636 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_5, i4 %output_r_addr_1" [fcnn.cpp:55]   --->   Operation 636 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_24 : Operation 637 [1/1] (0.00ns)   --->   "%bitcast_ln255_2 = bitcast i32 %select_ln55_25" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 637 'bitcast' 'bitcast_ln255_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 638 [1/1] (0.00ns)   --->   "%tmp_44 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_2, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 638 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 639 [1/1] (0.00ns)   --->   "%trunc_ln255_2 = trunc i32 %bitcast_ln255_2" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 639 'trunc' 'trunc_ln255_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 640 [1/1] (2.11ns)   --->   "%icmp_ln255_4 = icmp_ne  i8 %tmp_44, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 640 'icmp' 'icmp_ln255_4' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 641 [1/1] (2.38ns)   --->   "%icmp_ln255_5 = icmp_eq  i23 %trunc_ln255_2, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 641 'icmp' 'icmp_ln255_5' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 642 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_8)   --->   "%or_ln255_2 = or i1 %icmp_ln255_5, i1 %icmp_ln255_4" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 642 'or' 'or_ln255_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 643 [1/2] (5.09ns)   --->   "%tmp_49 = fcmp_ogt  i32 %select_ln55_25, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 643 'fcmp' 'tmp_49' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 644 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_8)   --->   "%and_ln255_2 = and i1 %or_ln255_2, i1 %tmp_49" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 644 'and' 'and_ln255_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 645 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_8 = select i1 %and_ln255_2, i32 %bitcast_ln255_2, i32 0" [fcnn.cpp:55]   --->   Operation 645 'select' 'select_ln55_8' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 646 [1/1] (0.00ns)   --->   "%bitcast_ln255_3 = bitcast i32 %select_ln55_31" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 646 'bitcast' 'bitcast_ln255_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 647 [1/1] (0.00ns)   --->   "%tmp_53 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_3, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 647 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 648 [1/1] (0.00ns)   --->   "%trunc_ln255_3 = trunc i32 %bitcast_ln255_3" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 648 'trunc' 'trunc_ln255_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 649 [1/1] (2.11ns)   --->   "%icmp_ln255_6 = icmp_ne  i8 %tmp_53, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 649 'icmp' 'icmp_ln255_6' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 650 [1/1] (2.38ns)   --->   "%icmp_ln255_7 = icmp_eq  i23 %trunc_ln255_3, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 650 'icmp' 'icmp_ln255_7' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 651 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_11)   --->   "%or_ln255_3 = or i1 %icmp_ln255_7, i1 %icmp_ln255_6" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 651 'or' 'or_ln255_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 652 [1/2] (5.09ns)   --->   "%tmp_55 = fcmp_ogt  i32 %select_ln55_31, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 652 'fcmp' 'tmp_55' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_11)   --->   "%and_ln255_3 = and i1 %or_ln255_3, i1 %tmp_55" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 653 'and' 'and_ln255_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 654 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_11 = select i1 %and_ln255_3, i32 %bitcast_ln255_3, i32 0" [fcnn.cpp:55]   --->   Operation 654 'select' 'select_ln55_11' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : [1/1] (1.86ns)   --->   Input mux for Operation 655 '%tmp_59 = fcmp_ogt  i32 %select_ln55_34, i32 0'
ST_24 : Operation 655 [2/2] (3.22ns)   --->   "%tmp_59 = fcmp_ogt  i32 %select_ln55_34, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 655 'fcmp' 'tmp_59' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : [1/1] (1.86ns)   --->   Input mux for Operation 656 '%tmp_63 = fcmp_ogt  i32 %select_ln55_37, i32 0'
ST_24 : Operation 656 [2/2] (3.22ns)   --->   "%tmp_63 = fcmp_ogt  i32 %select_ln55_37, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 656 'fcmp' 'tmp_63' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 657 [1/1] (0.00ns)   --->   "%zext_ln55_46 = zext i63 %lshr_ln55_12" [fcnn.cpp:55]   --->   Operation 657 'zext' 'zext_ln55_46' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_24 : Operation 658 [1/1] (1.04ns)   --->   "%select_ln55_39 = select i1 %tmp_89, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 658 'select' 'select_ln55_39' <Predicate = (!icmp_ln55_24)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 659 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_36 = sub i8 8, i8 %trunc_ln55_20" [fcnn.cpp:55]   --->   Operation 659 'sub' 'sub_ln55_36' <Predicate = (!icmp_ln55_24)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 660 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_34 = add i8 %sub_ln55_36, i8 %select_ln55_39" [fcnn.cpp:55]   --->   Operation 660 'add' 'add_ln55_34' <Predicate = (!icmp_ln55_24)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 661 [1/1] (0.00ns)   --->   "%tmp_58 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_86, i8 %add_ln55_34" [fcnn.cpp:55]   --->   Operation 661 'bitconcatenate' 'tmp_58' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_24 : Operation 662 [1/1] (0.00ns)   --->   "%pi_assign_6 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_46, i9 %tmp_58, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 662 'partset' 'pi_assign_6' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_24 : Operation 663 [1/1] (0.00ns)   --->   "%LD_6 = trunc i64 %pi_assign_6" [fcnn.cpp:55]   --->   Operation 663 'trunc' 'LD_6' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_24 : Operation 664 [1/1] (0.00ns)   --->   "%bitcast_ln766_6 = bitcast i32 %LD_6" [fcnn.cpp:55]   --->   Operation 664 'bitcast' 'bitcast_ln766_6' <Predicate = (!icmp_ln55_24)> <Delay = 0.00>
ST_24 : Operation 665 [1/1] (0.79ns)   --->   "%select_ln55_40 = select i1 %icmp_ln55_24, i32 0, i32 %bitcast_ln766_6" [fcnn.cpp:55]   --->   Operation 665 'select' 'select_ln55_40' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 666 [1/1] (0.00ns)   --->   "%zext_ln55_47 = zext i63 %lshr_ln55_14" [fcnn.cpp:55]   --->   Operation 666 'zext' 'zext_ln55_47' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_24 : Operation 667 [1/1] (1.04ns)   --->   "%select_ln55_42 = select i1 %tmp_93, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 667 'select' 'select_ln55_42' <Predicate = (!icmp_ln55_28)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 668 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_37 = sub i8 8, i8 %trunc_ln55_23" [fcnn.cpp:55]   --->   Operation 668 'sub' 'sub_ln55_37' <Predicate = (!icmp_ln55_28)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 669 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_39 = add i8 %sub_ln55_37, i8 %select_ln55_42" [fcnn.cpp:55]   --->   Operation 669 'add' 'add_ln55_39' <Predicate = (!icmp_ln55_28)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 670 [1/1] (0.00ns)   --->   "%tmp_60 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_90, i8 %add_ln55_39" [fcnn.cpp:55]   --->   Operation 670 'bitconcatenate' 'tmp_60' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_24 : Operation 671 [1/1] (0.00ns)   --->   "%pi_assign_7 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_47, i9 %tmp_60, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 671 'partset' 'pi_assign_7' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_24 : Operation 672 [1/1] (0.00ns)   --->   "%LD_7 = trunc i64 %pi_assign_7" [fcnn.cpp:55]   --->   Operation 672 'trunc' 'LD_7' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_24 : Operation 673 [1/1] (0.00ns)   --->   "%bitcast_ln766_7 = bitcast i32 %LD_7" [fcnn.cpp:55]   --->   Operation 673 'bitcast' 'bitcast_ln766_7' <Predicate = (!icmp_ln55_28)> <Delay = 0.00>
ST_24 : Operation 674 [1/1] (0.79ns)   --->   "%select_ln55_43 = select i1 %icmp_ln55_28, i32 0, i32 %bitcast_ln766_7" [fcnn.cpp:55]   --->   Operation 674 'select' 'select_ln55_43' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 675 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_43)   --->   "%select_ln55_44 = select i1 %icmp_ln55_35, i64 %lshr_ln55_15, i64 %shl_ln55_8" [fcnn.cpp:55]   --->   Operation 675 'select' 'select_ln55_44' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 676 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_43)   --->   "%zext_ln55_35 = zext i2 %or_ln55_8" [fcnn.cpp:55]   --->   Operation 676 'zext' 'zext_ln55_35' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_24 : Operation 677 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_43 = add i64 %select_ln55_44, i64 %zext_ln55_35" [fcnn.cpp:55]   --->   Operation 677 'add' 'add_ln55_43' <Predicate = (!icmp_ln55_32)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 678 [1/1] (0.00ns)   --->   "%lshr_ln55_16 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_43, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 678 'partselect' 'lshr_ln55_16' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_24 : Operation 679 [1/1] (0.00ns)   --->   "%tmp_97 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_43, i32 25" [fcnn.cpp:55]   --->   Operation 679 'bitselect' 'tmp_97' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_24 : Operation 680 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_48)   --->   "%select_ln55_47 = select i1 %icmp_ln55_39, i64 %lshr_ln55_17, i64 %shl_ln55_9" [fcnn.cpp:55]   --->   Operation 680 'select' 'select_ln55_47' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 681 [1/1] (0.00ns) (grouped into LUT with out node add_ln55_48)   --->   "%zext_ln55_39 = zext i2 %or_ln55_9" [fcnn.cpp:55]   --->   Operation 681 'zext' 'zext_ln55_39' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_24 : Operation 682 [1/1] (3.56ns) (out node of the LUT)   --->   "%add_ln55_48 = add i64 %select_ln55_47, i64 %zext_ln55_39" [fcnn.cpp:55]   --->   Operation 682 'add' 'add_ln55_48' <Predicate = (!icmp_ln55_36)> <Delay = 3.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 683 [1/1] (0.00ns)   --->   "%lshr_ln55_18 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln55_48, i32 1, i32 63" [fcnn.cpp:55]   --->   Operation 683 'partselect' 'lshr_ln55_18' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_24 : Operation 684 [1/1] (0.00ns)   --->   "%tmp_101 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln55_48, i32 25" [fcnn.cpp:55]   --->   Operation 684 'bitselect' 'tmp_101' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>

State 25 <SV = 14> <Delay = 6.07>
ST_25 : Operation 685 [1/1] (0.00ns)   --->   "%output_r_addr_2 = getelementptr i32 %output_r, i64 0, i64 2" [fcnn.cpp:55]   --->   Operation 685 'getelementptr' 'output_r_addr_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 686 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_8, i4 %output_r_addr_2" [fcnn.cpp:55]   --->   Operation 686 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_25 : Operation 687 [1/1] (0.00ns)   --->   "%output_r_addr_3 = getelementptr i32 %output_r, i64 0, i64 3" [fcnn.cpp:55]   --->   Operation 687 'getelementptr' 'output_r_addr_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 688 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_11, i4 %output_r_addr_3" [fcnn.cpp:55]   --->   Operation 688 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_25 : Operation 689 [1/1] (0.00ns)   --->   "%bitcast_ln255_4 = bitcast i32 %select_ln55_34" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 689 'bitcast' 'bitcast_ln255_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 690 [1/1] (0.00ns)   --->   "%tmp_57 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_4, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 690 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 691 [1/1] (0.00ns)   --->   "%trunc_ln255_4 = trunc i32 %bitcast_ln255_4" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 691 'trunc' 'trunc_ln255_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 692 [1/1] (2.11ns)   --->   "%icmp_ln255_8 = icmp_ne  i8 %tmp_57, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 692 'icmp' 'icmp_ln255_8' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 693 [1/1] (2.38ns)   --->   "%icmp_ln255_9 = icmp_eq  i23 %trunc_ln255_4, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 693 'icmp' 'icmp_ln255_9' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 694 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_14)   --->   "%or_ln255_4 = or i1 %icmp_ln255_9, i1 %icmp_ln255_8" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 694 'or' 'or_ln255_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 695 [1/2] (5.09ns)   --->   "%tmp_59 = fcmp_ogt  i32 %select_ln55_34, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 695 'fcmp' 'tmp_59' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 696 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_14)   --->   "%and_ln255_4 = and i1 %or_ln255_4, i1 %tmp_59" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 696 'and' 'and_ln255_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 697 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_14 = select i1 %and_ln255_4, i32 %bitcast_ln255_4, i32 0" [fcnn.cpp:55]   --->   Operation 697 'select' 'select_ln55_14' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 698 [1/1] (0.00ns)   --->   "%bitcast_ln255_5 = bitcast i32 %select_ln55_37" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 698 'bitcast' 'bitcast_ln255_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 699 [1/1] (0.00ns)   --->   "%tmp_61 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_5, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 699 'partselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 700 [1/1] (0.00ns)   --->   "%trunc_ln255_5 = trunc i32 %bitcast_ln255_5" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 700 'trunc' 'trunc_ln255_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 701 [1/1] (2.11ns)   --->   "%icmp_ln255_10 = icmp_ne  i8 %tmp_61, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 701 'icmp' 'icmp_ln255_10' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 702 [1/1] (2.38ns)   --->   "%icmp_ln255_11 = icmp_eq  i23 %trunc_ln255_5, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 702 'icmp' 'icmp_ln255_11' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_17)   --->   "%or_ln255_5 = or i1 %icmp_ln255_11, i1 %icmp_ln255_10" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 703 'or' 'or_ln255_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 704 [1/2] (5.09ns)   --->   "%tmp_63 = fcmp_ogt  i32 %select_ln55_37, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 704 'fcmp' 'tmp_63' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 705 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_17)   --->   "%and_ln255_5 = and i1 %or_ln255_5, i1 %tmp_63" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 705 'and' 'and_ln255_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 706 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_17 = select i1 %and_ln255_5, i32 %bitcast_ln255_5, i32 0" [fcnn.cpp:55]   --->   Operation 706 'select' 'select_ln55_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : [1/1] (1.86ns)   --->   Input mux for Operation 707 '%tmp_66 = fcmp_ogt  i32 %select_ln55_40, i32 0'
ST_25 : Operation 707 [2/2] (3.22ns)   --->   "%tmp_66 = fcmp_ogt  i32 %select_ln55_40, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 707 'fcmp' 'tmp_66' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : [1/1] (1.86ns)   --->   Input mux for Operation 708 '%tmp_68 = fcmp_ogt  i32 %select_ln55_43, i32 0'
ST_25 : Operation 708 [2/2] (3.22ns)   --->   "%tmp_68 = fcmp_ogt  i32 %select_ln55_43, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 708 'fcmp' 'tmp_68' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 709 [1/1] (0.00ns)   --->   "%zext_ln55_48 = zext i63 %lshr_ln55_16" [fcnn.cpp:55]   --->   Operation 709 'zext' 'zext_ln55_48' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_25 : Operation 710 [1/1] (1.04ns)   --->   "%select_ln55_45 = select i1 %tmp_97, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 710 'select' 'select_ln55_45' <Predicate = (!icmp_ln55_32)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 711 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_38 = sub i8 8, i8 %trunc_ln55_26" [fcnn.cpp:55]   --->   Operation 711 'sub' 'sub_ln55_38' <Predicate = (!icmp_ln55_32)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 712 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_44 = add i8 %sub_ln55_38, i8 %select_ln55_45" [fcnn.cpp:55]   --->   Operation 712 'add' 'add_ln55_44' <Predicate = (!icmp_ln55_32)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 713 [1/1] (0.00ns)   --->   "%tmp_62 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_94, i8 %add_ln55_44" [fcnn.cpp:55]   --->   Operation 713 'bitconcatenate' 'tmp_62' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_25 : Operation 714 [1/1] (0.00ns)   --->   "%pi_assign_8 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_48, i9 %tmp_62, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 714 'partset' 'pi_assign_8' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_25 : Operation 715 [1/1] (0.00ns)   --->   "%LD_8 = trunc i64 %pi_assign_8" [fcnn.cpp:55]   --->   Operation 715 'trunc' 'LD_8' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_25 : Operation 716 [1/1] (0.00ns)   --->   "%bitcast_ln766_8 = bitcast i32 %LD_8" [fcnn.cpp:55]   --->   Operation 716 'bitcast' 'bitcast_ln766_8' <Predicate = (!icmp_ln55_32)> <Delay = 0.00>
ST_25 : Operation 717 [1/1] (0.79ns)   --->   "%select_ln55_46 = select i1 %icmp_ln55_32, i32 0, i32 %bitcast_ln766_8" [fcnn.cpp:55]   --->   Operation 717 'select' 'select_ln55_46' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 718 [1/1] (0.00ns)   --->   "%zext_ln55_49 = zext i63 %lshr_ln55_18" [fcnn.cpp:55]   --->   Operation 718 'zext' 'zext_ln55_49' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_25 : Operation 719 [1/1] (1.04ns)   --->   "%select_ln55_48 = select i1 %tmp_101, i8 127, i8 126" [fcnn.cpp:55]   --->   Operation 719 'select' 'select_ln55_48' <Predicate = (!icmp_ln55_36)> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 720 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln55_39 = sub i8 8, i8 %trunc_ln55_29" [fcnn.cpp:55]   --->   Operation 720 'sub' 'sub_ln55_39' <Predicate = (!icmp_ln55_36)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 721 [1/1] (3.67ns) (root node of TernaryAdder)   --->   "%add_ln55_49 = add i8 %sub_ln55_39, i8 %select_ln55_48" [fcnn.cpp:55]   --->   Operation 721 'add' 'add_ln55_49' <Predicate = (!icmp_ln55_36)> <Delay = 3.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 722 [1/1] (0.00ns)   --->   "%tmp_64 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_98, i8 %add_ln55_49" [fcnn.cpp:55]   --->   Operation 722 'bitconcatenate' 'tmp_64' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_25 : Operation 723 [1/1] (0.00ns)   --->   "%pi_assign_9 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln55_49, i9 %tmp_64, i32 23, i32 31" [fcnn.cpp:55]   --->   Operation 723 'partset' 'pi_assign_9' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_25 : Operation 724 [1/1] (0.00ns)   --->   "%LD_9 = trunc i64 %pi_assign_9" [fcnn.cpp:55]   --->   Operation 724 'trunc' 'LD_9' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_25 : Operation 725 [1/1] (0.00ns)   --->   "%bitcast_ln766_9 = bitcast i32 %LD_9" [fcnn.cpp:55]   --->   Operation 725 'bitcast' 'bitcast_ln766_9' <Predicate = (!icmp_ln55_36)> <Delay = 0.00>
ST_25 : Operation 726 [1/1] (0.79ns)   --->   "%select_ln55_49 = select i1 %icmp_ln55_36, i32 0, i32 %bitcast_ln766_9" [fcnn.cpp:55]   --->   Operation 726 'select' 'select_ln55_49' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 26 <SV = 15> <Delay = 6.07>
ST_26 : Operation 727 [1/1] (0.00ns)   --->   "%output_r_addr_4 = getelementptr i32 %output_r, i64 0, i64 4" [fcnn.cpp:55]   --->   Operation 727 'getelementptr' 'output_r_addr_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 728 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_14, i4 %output_r_addr_4" [fcnn.cpp:55]   --->   Operation 728 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_26 : Operation 729 [1/1] (0.00ns)   --->   "%output_r_addr_5 = getelementptr i32 %output_r, i64 0, i64 5" [fcnn.cpp:55]   --->   Operation 729 'getelementptr' 'output_r_addr_5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 730 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_17, i4 %output_r_addr_5" [fcnn.cpp:55]   --->   Operation 730 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_26 : Operation 731 [1/1] (0.00ns)   --->   "%bitcast_ln255_6 = bitcast i32 %select_ln55_40" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 731 'bitcast' 'bitcast_ln255_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 732 [1/1] (0.00ns)   --->   "%tmp_65 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_6, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 732 'partselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 733 [1/1] (0.00ns)   --->   "%trunc_ln255_6 = trunc i32 %bitcast_ln255_6" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 733 'trunc' 'trunc_ln255_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 734 [1/1] (2.11ns)   --->   "%icmp_ln255_12 = icmp_ne  i8 %tmp_65, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 734 'icmp' 'icmp_ln255_12' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 735 [1/1] (2.38ns)   --->   "%icmp_ln255_13 = icmp_eq  i23 %trunc_ln255_6, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 735 'icmp' 'icmp_ln255_13' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 736 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_20)   --->   "%or_ln255_6 = or i1 %icmp_ln255_13, i1 %icmp_ln255_12" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 736 'or' 'or_ln255_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 737 [1/2] (5.09ns)   --->   "%tmp_66 = fcmp_ogt  i32 %select_ln55_40, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 737 'fcmp' 'tmp_66' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 738 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_20)   --->   "%and_ln255_6 = and i1 %or_ln255_6, i1 %tmp_66" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 738 'and' 'and_ln255_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 739 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_20 = select i1 %and_ln255_6, i32 %bitcast_ln255_6, i32 0" [fcnn.cpp:55]   --->   Operation 739 'select' 'select_ln55_20' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 740 [1/1] (0.00ns)   --->   "%bitcast_ln255_7 = bitcast i32 %select_ln55_43" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 740 'bitcast' 'bitcast_ln255_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 741 [1/1] (0.00ns)   --->   "%tmp_67 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_7, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 741 'partselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 742 [1/1] (0.00ns)   --->   "%trunc_ln255_7 = trunc i32 %bitcast_ln255_7" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 742 'trunc' 'trunc_ln255_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 743 [1/1] (2.11ns)   --->   "%icmp_ln255_14 = icmp_ne  i8 %tmp_67, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 743 'icmp' 'icmp_ln255_14' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 744 [1/1] (2.38ns)   --->   "%icmp_ln255_15 = icmp_eq  i23 %trunc_ln255_7, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 744 'icmp' 'icmp_ln255_15' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 745 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_23)   --->   "%or_ln255_7 = or i1 %icmp_ln255_15, i1 %icmp_ln255_14" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 745 'or' 'or_ln255_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 746 [1/2] (5.09ns)   --->   "%tmp_68 = fcmp_ogt  i32 %select_ln55_43, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 746 'fcmp' 'tmp_68' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 747 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_23)   --->   "%and_ln255_7 = and i1 %or_ln255_7, i1 %tmp_68" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 747 'and' 'and_ln255_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 748 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_23 = select i1 %and_ln255_7, i32 %bitcast_ln255_7, i32 0" [fcnn.cpp:55]   --->   Operation 748 'select' 'select_ln55_23' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : [1/1] (1.86ns)   --->   Input mux for Operation 749 '%tmp_70 = fcmp_ogt  i32 %select_ln55_46, i32 0'
ST_26 : Operation 749 [2/2] (3.22ns)   --->   "%tmp_70 = fcmp_ogt  i32 %select_ln55_46, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 749 'fcmp' 'tmp_70' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : [1/1] (1.86ns)   --->   Input mux for Operation 750 '%tmp_72 = fcmp_ogt  i32 %select_ln55_49, i32 0'
ST_26 : Operation 750 [2/2] (3.22ns)   --->   "%tmp_72 = fcmp_ogt  i32 %select_ln55_49, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 750 'fcmp' 'tmp_72' <Predicate = true> <Delay = 3.22> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 16> <Delay = 6.07>
ST_27 : Operation 751 [1/1] (0.00ns)   --->   "%output_r_addr_6 = getelementptr i32 %output_r, i64 0, i64 6" [fcnn.cpp:55]   --->   Operation 751 'getelementptr' 'output_r_addr_6' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 752 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_20, i4 %output_r_addr_6" [fcnn.cpp:55]   --->   Operation 752 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_27 : Operation 753 [1/1] (0.00ns)   --->   "%output_r_addr_7 = getelementptr i32 %output_r, i64 0, i64 7" [fcnn.cpp:55]   --->   Operation 753 'getelementptr' 'output_r_addr_7' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 754 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_23, i4 %output_r_addr_7" [fcnn.cpp:55]   --->   Operation 754 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_27 : Operation 755 [1/1] (0.00ns)   --->   "%bitcast_ln255_8 = bitcast i32 %select_ln55_46" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 755 'bitcast' 'bitcast_ln255_8' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 756 [1/1] (0.00ns)   --->   "%tmp_69 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_8, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 756 'partselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 757 [1/1] (0.00ns)   --->   "%trunc_ln255_8 = trunc i32 %bitcast_ln255_8" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 757 'trunc' 'trunc_ln255_8' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 758 [1/1] (2.11ns)   --->   "%icmp_ln255_16 = icmp_ne  i8 %tmp_69, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 758 'icmp' 'icmp_ln255_16' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 759 [1/1] (2.38ns)   --->   "%icmp_ln255_17 = icmp_eq  i23 %trunc_ln255_8, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 759 'icmp' 'icmp_ln255_17' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 760 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_26)   --->   "%or_ln255_8 = or i1 %icmp_ln255_17, i1 %icmp_ln255_16" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 760 'or' 'or_ln255_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 761 [1/2] (5.09ns)   --->   "%tmp_70 = fcmp_ogt  i32 %select_ln55_46, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 761 'fcmp' 'tmp_70' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 762 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_26)   --->   "%and_ln255_8 = and i1 %or_ln255_8, i1 %tmp_70" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 762 'and' 'and_ln255_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 763 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_26 = select i1 %and_ln255_8, i32 %bitcast_ln255_8, i32 0" [fcnn.cpp:55]   --->   Operation 763 'select' 'select_ln55_26' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 764 [1/1] (0.00ns)   --->   "%bitcast_ln255_9 = bitcast i32 %select_ln55_49" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 764 'bitcast' 'bitcast_ln255_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 765 [1/1] (0.00ns)   --->   "%tmp_71 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln255_9, i32 23, i32 30" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 765 'partselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 766 [1/1] (0.00ns)   --->   "%trunc_ln255_9 = trunc i32 %bitcast_ln255_9" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 766 'trunc' 'trunc_ln255_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 767 [1/1] (2.11ns)   --->   "%icmp_ln255_18 = icmp_ne  i8 %tmp_71, i8 255" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 767 'icmp' 'icmp_ln255_18' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 768 [1/1] (2.38ns)   --->   "%icmp_ln255_19 = icmp_eq  i23 %trunc_ln255_9, i23 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 768 'icmp' 'icmp_ln255_19' <Predicate = true> <Delay = 2.38> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 769 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_29)   --->   "%or_ln255_9 = or i1 %icmp_ln255_19, i1 %icmp_ln255_18" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 769 'or' 'or_ln255_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 770 [1/2] (5.09ns)   --->   "%tmp_72 = fcmp_ogt  i32 %select_ln55_49, i32 0" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 770 'fcmp' 'tmp_72' <Predicate = true> <Delay = 5.09> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.09> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_29)   --->   "%and_ln255_9 = and i1 %or_ln255_9, i1 %tmp_72" [/eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55]   --->   Operation 771 'and' 'and_ln255_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 772 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55_29 = select i1 %and_ln255_9, i32 %bitcast_ln255_9, i32 0" [fcnn.cpp:55]   --->   Operation 772 'select' 'select_ln55_29' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 28 <SV = 17> <Delay = 2.15>
ST_28 : Operation 773 [1/1] (0.00ns)   --->   "%output_r_addr_8 = getelementptr i32 %output_r, i64 0, i64 8" [fcnn.cpp:55]   --->   Operation 773 'getelementptr' 'output_r_addr_8' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 774 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_26, i4 %output_r_addr_8" [fcnn.cpp:55]   --->   Operation 774 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_28 : Operation 775 [1/1] (0.00ns)   --->   "%output_r_addr_9 = getelementptr i32 %output_r, i64 0, i64 9" [fcnn.cpp:55]   --->   Operation 775 'getelementptr' 'output_r_addr_9' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 776 [1/1] (2.15ns)   --->   "%store_ln55 = store i32 %select_ln55_29, i4 %output_r_addr_9" [fcnn.cpp:55]   --->   Operation 776 'store' 'store_ln55' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_28 : Operation 777 [1/1] (0.00ns)   --->   "%ret_ln57 = ret" [fcnn.cpp:57]   --->   Operation 777 'ret' 'ret_ln57' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.152ns
The critical path consists of the following:
	'alloca' operation ('sum', fcnn.cpp:18) [14]  (0.000 ns)
	'getelementptr' operation ('sum_addr', fcnn.cpp:23) [15]  (0.000 ns)
	'store' operation ('store_ln23', fcnn.cpp:23) of constant 65187 on array 'sum', fcnn.cpp:18 [16]  (2.152 ns)

 <State 2>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('sum_addr_2', fcnn.cpp:23) [19]  (0.000 ns)
	'store' operation ('store_ln23', fcnn.cpp:23) of constant 65452 on array 'sum', fcnn.cpp:18 [20]  (2.152 ns)

 <State 3>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('sum_addr_4', fcnn.cpp:23) [23]  (0.000 ns)
	'store' operation ('store_ln23', fcnn.cpp:23) of constant 88 on array 'sum', fcnn.cpp:18 [24]  (2.152 ns)

 <State 4>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('sum_addr_6', fcnn.cpp:23) [27]  (0.000 ns)
	'store' operation ('store_ln23', fcnn.cpp:23) of constant 210 on array 'sum', fcnn.cpp:18 [28]  (2.152 ns)

 <State 5>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('sum_addr_8', fcnn.cpp:23) [31]  (0.000 ns)
	'store' operation ('store_ln23', fcnn.cpp:23) of constant 65094 on array 'sum', fcnn.cpp:18 [32]  (2.152 ns)

 <State 6>: 5.380ns
The critical path consists of the following:
	'load' operation ('indvars_iv26_load', fcnn.cpp:27) on local variable 'indvars_iv26' [41]  (0.000 ns)
	'add' operation ('add_ln27_3', fcnn.cpp:27) [48]  (2.127 ns)
	'icmp' operation ('icmp_ln27_1', fcnn.cpp:27) [49]  (2.127 ns)
	'select' operation ('select_ln27', fcnn.cpp:27) [51]  (1.127 ns)

 <State 7>: 2.134ns
The critical path consists of the following:
	'add' operation ('add_ln35_1', fcnn.cpp:35) [62]  (2.134 ns)

 <State 8>: 6.753ns
The critical path consists of the following:
	'call' operation ('call_ln27', fcnn.cpp:27) to 'mnist_inference_Pipeline_VITIS_LOOP_35_4_VITIS_LOOP_36_5' [63]  (6.753 ns)

 <State 9>: 3.254ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln27_2', fcnn.cpp:27) [52]  (2.127 ns)
	'select' operation ('select_ln27_1', fcnn.cpp:27) [54]  (1.127 ns)

 <State 10>: 3.737ns
The critical path consists of the following:
	'add' operation ('add_ln27_2', fcnn.cpp:27) [106]  (2.127 ns)
	'store' operation ('store_ln27', fcnn.cpp:27) of variable 'add_ln27_2', fcnn.cpp:27 on local variable 'indvars_iv26' [108]  (1.610 ns)

 <State 11>: 2.152ns
The critical path consists of the following:
	'load' operation ('sum_load_1', fcnn.cpp:47) on array 'sum', fcnn.cpp:18 [77]  (2.152 ns)

 <State 12>: 5.380ns
The critical path consists of the following:
	'phi' operation ('j', fcnn.cpp:45) with incoming values : ('add_ln45', fcnn.cpp:45) [80]  (0.000 ns)
	'add' operation ('add_ln47_1', fcnn.cpp:47) [83]  (2.123 ns)
	'getelementptr' operation ('weight_tile_addr', fcnn.cpp:47) [85]  (0.000 ns)
	'load' operation ('weight_tile_load', fcnn.cpp:47) on array 'weight_tile', fcnn.cpp:17 [87]  (3.257 ns)

 <State 13>: 4.707ns
The critical path consists of the following:
	'load' operation ('weight_tile_load', fcnn.cpp:47) on array 'weight_tile', fcnn.cpp:17 [87]  (3.257 ns)
	'mul' operation of DSP[94] ('mul_ln47', fcnn.cpp:47) [92]  (1.450 ns)

 <State 14>: 1.450ns
The critical path consists of the following:
	'mul' operation of DSP[94] ('mul_ln47', fcnn.cpp:47) [92]  (1.450 ns)

 <State 15>: 2.100ns
The critical path consists of the following:
	'phi' operation ('conv_i_i9171', fcnn.cpp:47) with incoming values : ('sum_load_1', fcnn.cpp:47) ('trunc_ln4', fcnn.cpp:47) [81]  (0.000 ns)
	'add' operation of DSP[94] ('add_ln47', fcnn.cpp:47) [94]  (2.100 ns)

 <State 16>: 4.252ns
The critical path consists of the following:
	'add' operation of DSP[94] ('add_ln47', fcnn.cpp:47) [94]  (2.100 ns)
	'store' operation ('store_ln47', fcnn.cpp:47) of variable 'trunc_ln4', fcnn.cpp:47 on array 'sum', fcnn.cpp:18 [101]  (2.152 ns)

 <State 17>: 4.298ns
The critical path consists of the following:
	'load' operation ('sum_load', fcnn.cpp:55) on array 'sum', fcnn.cpp:18 [112]  (2.152 ns)
	'sub' operation ('sub_ln55', fcnn.cpp:55) [115]  (2.146 ns)

 <State 18>: 6.141ns
The critical path consists of the following:
	'select' operation ('select_ln55', fcnn.cpp:55) [116]  (1.293 ns)
	'cttz' operation ('tmp_2', fcnn.cpp:55) [120]  (0.000 ns)
	'sub' operation ('sub_ln55_1', fcnn.cpp:55) [121]  (2.702 ns)
	'add' operation ('add_ln55_1', fcnn.cpp:55) [135]  (2.146 ns)

 <State 19>: 7.225ns
The critical path consists of the following:
	'sub' operation ('sub_ln55_40', fcnn.cpp:55) [127]  (1.777 ns)
	'lshr' operation ('lshr_ln55_19', fcnn.cpp:55) [129]  (2.325 ns)
	'and' operation ('and_ln55_20', fcnn.cpp:55) [130]  (0.000 ns)
	'icmp' operation ('icmp_ln55_2', fcnn.cpp:55) [131]  (2.146 ns)
	'and' operation ('and_ln55', fcnn.cpp:55) [132]  (0.000 ns)
	'or' operation ('or_ln55_10', fcnn.cpp:55) [138]  (0.000 ns)
	blocking operation 0.978 ns on control path)

 <State 20>: 7.225ns
The critical path consists of the following:
	'sub' operation ('sub_ln55_42', fcnn.cpp:55) [251]  (1.777 ns)
	'lshr' operation ('lshr_ln55_21', fcnn.cpp:55) [253]  (2.325 ns)
	'and' operation ('and_ln55_22', fcnn.cpp:55) [254]  (0.000 ns)
	'icmp' operation ('icmp_ln55_10', fcnn.cpp:55) [255]  (2.146 ns)
	'and' operation ('and_ln55_4', fcnn.cpp:55) [256]  (0.000 ns)
	'or' operation ('or_ln55_11', fcnn.cpp:55) [262]  (0.000 ns)
	blocking operation 0.978 ns on control path)

 <State 21>: 7.225ns
The critical path consists of the following:
	'sub' operation ('sub_ln55_44', fcnn.cpp:55) [375]  (1.777 ns)
	'lshr' operation ('lshr_ln55_23', fcnn.cpp:55) [377]  (2.325 ns)
	'and' operation ('and_ln55_24', fcnn.cpp:55) [378]  (0.000 ns)
	'icmp' operation ('icmp_ln55_18', fcnn.cpp:55) [379]  (2.146 ns)
	'and' operation ('and_ln55_8', fcnn.cpp:55) [380]  (0.000 ns)
	'or' operation ('or_ln55_13', fcnn.cpp:55) [386]  (0.000 ns)
	blocking operation 0.978 ns on control path)

 <State 22>: 7.225ns
The critical path consists of the following:
	'sub' operation ('sub_ln55_46', fcnn.cpp:55) [499]  (1.777 ns)
	'lshr' operation ('lshr_ln55_25', fcnn.cpp:55) [501]  (2.325 ns)
	'and' operation ('and_ln55_26', fcnn.cpp:55) [502]  (0.000 ns)
	'icmp' operation ('icmp_ln55_26', fcnn.cpp:55) [503]  (2.146 ns)
	'and' operation ('and_ln55_12', fcnn.cpp:55) [504]  (0.000 ns)
	'or' operation ('or_ln55_15', fcnn.cpp:55) [510]  (0.000 ns)
	blocking operation 0.978 ns on control path)

 <State 23>: 7.225ns
The critical path consists of the following:
	'sub' operation ('sub_ln55_48', fcnn.cpp:55) [623]  (1.777 ns)
	'lshr' operation ('lshr_ln55_27', fcnn.cpp:55) [625]  (2.325 ns)
	'and' operation ('and_ln55_28', fcnn.cpp:55) [626]  (0.000 ns)
	'icmp' operation ('icmp_ln55_34', fcnn.cpp:55) [627]  (2.146 ns)
	'and' operation ('and_ln55_16', fcnn.cpp:55) [628]  (0.000 ns)
	'or' operation ('or_ln55_17', fcnn.cpp:55) [634]  (0.000 ns)
	blocking operation 0.978 ns on control path)

 <State 24>: 6.073ns
The critical path consists of the following:
	'fcmp' operation ('tmp_49', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [293]  (5.095 ns)
	'and' operation ('and_ln255_2', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [294]  (0.000 ns)
	'select' operation ('select_ln55_8', fcnn.cpp:55) [295]  (0.978 ns)

 <State 25>: 6.073ns
The critical path consists of the following:
	'fcmp' operation ('tmp_59', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [417]  (5.095 ns)
	'and' operation ('and_ln255_4', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [418]  (0.000 ns)
	'select' operation ('select_ln55_14', fcnn.cpp:55) [419]  (0.978 ns)

 <State 26>: 6.073ns
The critical path consists of the following:
	'fcmp' operation ('tmp_66', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [541]  (5.095 ns)
	'and' operation ('and_ln255_6', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [542]  (0.000 ns)
	'select' operation ('select_ln55_20', fcnn.cpp:55) [543]  (0.978 ns)

 <State 27>: 6.073ns
The critical path consists of the following:
	'fcmp' operation ('tmp_70', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [665]  (5.095 ns)
	'and' operation ('and_ln255_8', /eda/xilinx/Vitis_HLS/2023.1/common/technology/autopilot/hls_math.h:255->fcnn.cpp:55) [666]  (0.000 ns)
	'select' operation ('select_ln55_26', fcnn.cpp:55) [667]  (0.978 ns)

 <State 28>: 2.152ns
The critical path consists of the following:
	'getelementptr' operation ('output_r_addr_8', fcnn.cpp:55) [668]  (0.000 ns)
	'store' operation ('store_ln55', fcnn.cpp:55) of variable 'select_ln55_26', fcnn.cpp:55 on array 'output_r' [669]  (2.152 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
