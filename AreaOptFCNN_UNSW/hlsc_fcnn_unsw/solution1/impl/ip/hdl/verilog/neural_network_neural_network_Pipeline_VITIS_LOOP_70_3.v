// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_70_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln75,
        layer1_output_1_cast,
        sext_ln75_1,
        sext_ln75_2,
        sext_ln75_3,
        layer1_output_5_cast,
        sext_ln75_4,
        sext_ln75_5,
        sext_ln75_6,
        sext_ln75_7,
        sext_ln75_8,
        sext_ln75_9,
        sext_ln75_10,
        sext_ln75_11,
        sext_ln75_12,
        sext_ln75_13,
        sext_ln75_14,
        sext_ln75_15,
        layer1_output_18_cast,
        sext_ln75_16,
        sext_ln75_17,
        sext_ln75_18,
        layer1_output_22_cast,
        layer1_output_23_cast,
        sext_ln75_19,
        sext_ln75_20,
        layer1_output_26_cast,
        sext_ln75_21,
        sext_ln75_22,
        sext_ln75_23,
        sext_ln75_24,
        sext_ln75_25,
        sext_ln75_26,
        layer1_output_33_cast,
        sext_ln75_27,
        sext_ln75_28,
        sext_ln75_29,
        sext_ln75_30,
        sext_ln75_31,
        sext_ln75_32,
        sext_ln75_33,
        sext_ln75_34,
        sext_ln75_35,
        layer1_output_43_cast,
        layer1_output_44_cast,
        sext_ln75_36,
        sext_ln75_37,
        sext_ln75_38,
        layer1_output_48_cast,
        layer1_output_49_cast,
        sext_ln75_39,
        sext_ln75_40,
        sext_ln75_41,
        layer1_output_53_cast,
        sext_ln75_42,
        layer1_output_55_cast,
        sext_ln75_43,
        layer2_output_9_out,
        layer2_output_9_out_ap_vld,
        layer2_output_8_out,
        layer2_output_8_out_ap_vld,
        layer2_output_7_out,
        layer2_output_7_out_ap_vld,
        layer2_output_6_out,
        layer2_output_6_out_ap_vld,
        layer2_output_5_out,
        layer2_output_5_out_ap_vld,
        layer2_output_4_out,
        layer2_output_4_out_ap_vld,
        layer2_output_3_out,
        layer2_output_3_out_ap_vld,
        layer2_output_2_out,
        layer2_output_2_out_ap_vld,
        layer2_output_1_out,
        layer2_output_1_out_ap_vld,
        layer2_output_out,
        layer2_output_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sext_ln75;
input  [15:0] layer1_output_1_cast;
input  [15:0] sext_ln75_1;
input  [15:0] sext_ln75_2;
input  [15:0] sext_ln75_3;
input  [15:0] layer1_output_5_cast;
input  [15:0] sext_ln75_4;
input  [15:0] sext_ln75_5;
input  [15:0] sext_ln75_6;
input  [15:0] sext_ln75_7;
input  [15:0] sext_ln75_8;
input  [15:0] sext_ln75_9;
input  [15:0] sext_ln75_10;
input  [15:0] sext_ln75_11;
input  [15:0] sext_ln75_12;
input  [15:0] sext_ln75_13;
input  [15:0] sext_ln75_14;
input  [15:0] sext_ln75_15;
input  [15:0] layer1_output_18_cast;
input  [15:0] sext_ln75_16;
input  [15:0] sext_ln75_17;
input  [15:0] sext_ln75_18;
input  [15:0] layer1_output_22_cast;
input  [15:0] layer1_output_23_cast;
input  [15:0] sext_ln75_19;
input  [15:0] sext_ln75_20;
input  [15:0] layer1_output_26_cast;
input  [15:0] sext_ln75_21;
input  [15:0] sext_ln75_22;
input  [15:0] sext_ln75_23;
input  [15:0] sext_ln75_24;
input  [15:0] sext_ln75_25;
input  [15:0] sext_ln75_26;
input  [15:0] layer1_output_33_cast;
input  [15:0] sext_ln75_27;
input  [15:0] sext_ln75_28;
input  [15:0] sext_ln75_29;
input  [15:0] sext_ln75_30;
input  [15:0] sext_ln75_31;
input  [15:0] sext_ln75_32;
input  [15:0] sext_ln75_33;
input  [15:0] sext_ln75_34;
input  [15:0] sext_ln75_35;
input  [15:0] layer1_output_43_cast;
input  [15:0] layer1_output_44_cast;
input  [15:0] sext_ln75_36;
input  [15:0] sext_ln75_37;
input  [15:0] sext_ln75_38;
input  [15:0] layer1_output_48_cast;
input  [15:0] layer1_output_49_cast;
input  [15:0] sext_ln75_39;
input  [15:0] sext_ln75_40;
input  [15:0] sext_ln75_41;
input  [15:0] layer1_output_53_cast;
input  [15:0] sext_ln75_42;
input  [15:0] layer1_output_55_cast;
input  [15:0] sext_ln75_43;
output  [15:0] layer2_output_9_out;
output   layer2_output_9_out_ap_vld;
output  [15:0] layer2_output_8_out;
output   layer2_output_8_out_ap_vld;
output  [15:0] layer2_output_7_out;
output   layer2_output_7_out_ap_vld;
output  [15:0] layer2_output_6_out;
output   layer2_output_6_out_ap_vld;
output  [15:0] layer2_output_5_out;
output   layer2_output_5_out_ap_vld;
output  [15:0] layer2_output_4_out;
output   layer2_output_4_out_ap_vld;
output  [15:0] layer2_output_3_out;
output   layer2_output_3_out_ap_vld;
output  [15:0] layer2_output_2_out;
output   layer2_output_2_out_ap_vld;
output  [15:0] layer2_output_1_out;
output   layer2_output_1_out_ap_vld;
output  [15:0] layer2_output_out;
output   layer2_output_out_ap_vld;

reg ap_idle;
reg layer2_output_9_out_ap_vld;
reg layer2_output_8_out_ap_vld;
reg layer2_output_7_out_ap_vld;
reg layer2_output_6_out_ap_vld;
reg layer2_output_5_out_ap_vld;
reg layer2_output_4_out_ap_vld;
reg layer2_output_3_out_ap_vld;
reg layer2_output_2_out_ap_vld;
reg layer2_output_1_out_ap_vld;
reg layer2_output_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln70_fu_1748_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] layer2_weights_0_address0;
reg    layer2_weights_0_ce0;
wire   [10:0] layer2_weights_0_q0;
wire   [3:0] layer2_weights_1_address0;
reg    layer2_weights_1_ce0;
wire  signed [6:0] layer2_weights_1_q0;
wire   [3:0] layer2_weights_2_address0;
reg    layer2_weights_2_ce0;
wire  signed [9:0] layer2_weights_2_q0;
wire   [3:0] layer2_weights_3_address0;
reg    layer2_weights_3_ce0;
wire  signed [10:0] layer2_weights_3_q0;
wire   [3:0] layer2_weights_4_address0;
reg    layer2_weights_4_ce0;
wire  signed [9:0] layer2_weights_4_q0;
wire   [3:0] layer2_weights_5_address0;
reg    layer2_weights_5_ce0;
wire  signed [7:0] layer2_weights_5_q0;
wire   [3:0] layer2_weights_6_address0;
reg    layer2_weights_6_ce0;
wire  signed [8:0] layer2_weights_6_q0;
wire   [3:0] layer2_weights_7_address0;
reg    layer2_weights_7_ce0;
wire  signed [10:0] layer2_weights_7_q0;
wire   [3:0] layer2_weights_8_address0;
reg    layer2_weights_8_ce0;
wire   [10:0] layer2_weights_8_q0;
wire   [3:0] layer2_weights_9_address0;
reg    layer2_weights_9_ce0;
wire  signed [10:0] layer2_weights_9_q0;
wire   [3:0] layer2_weights_12_address0;
reg    layer2_weights_12_ce0;
wire  signed [11:0] layer2_weights_12_q0;
wire   [3:0] layer2_weights_13_address0;
reg    layer2_weights_13_ce0;
wire  signed [9:0] layer2_weights_13_q0;
wire   [3:0] layer2_weights_14_address0;
reg    layer2_weights_14_ce0;
wire  signed [10:0] layer2_weights_14_q0;
wire   [3:0] layer2_weights_15_address0;
reg    layer2_weights_15_ce0;
wire  signed [10:0] layer2_weights_15_q0;
wire   [3:0] layer2_weights_16_address0;
reg    layer2_weights_16_ce0;
wire  signed [10:0] layer2_weights_16_q0;
wire   [3:0] layer2_weights_18_address0;
reg    layer2_weights_18_ce0;
wire  signed [11:0] layer2_weights_18_q0;
wire   [3:0] layer2_weights_20_address0;
reg    layer2_weights_20_ce0;
wire  signed [9:0] layer2_weights_20_q0;
wire   [3:0] layer2_weights_21_address0;
reg    layer2_weights_21_ce0;
wire   [9:0] layer2_weights_21_q0;
wire   [3:0] layer2_weights_22_address0;
reg    layer2_weights_22_ce0;
wire  signed [5:0] layer2_weights_22_q0;
wire   [3:0] layer2_weights_23_address0;
reg    layer2_weights_23_ce0;
wire   [10:0] layer2_weights_23_q0;
wire   [3:0] layer2_weights_25_address0;
reg    layer2_weights_25_ce0;
wire  signed [10:0] layer2_weights_25_q0;
wire   [3:0] layer2_weights_26_address0;
reg    layer2_weights_26_ce0;
wire  signed [10:0] layer2_weights_26_q0;
wire   [3:0] layer2_weights_27_address0;
reg    layer2_weights_27_ce0;
wire  signed [7:0] layer2_weights_27_q0;
wire   [3:0] layer2_weights_28_address0;
reg    layer2_weights_28_ce0;
wire  signed [6:0] layer2_weights_28_q0;
wire   [3:0] layer2_weights_29_address0;
reg    layer2_weights_29_ce0;
wire  signed [10:0] layer2_weights_29_q0;
wire   [3:0] layer2_weights_30_address0;
reg    layer2_weights_30_ce0;
wire  signed [11:0] layer2_weights_30_q0;
wire   [3:0] layer2_weights_31_address0;
reg    layer2_weights_31_ce0;
wire  signed [7:0] layer2_weights_31_q0;
wire   [3:0] layer2_weights_32_address0;
reg    layer2_weights_32_ce0;
wire  signed [10:0] layer2_weights_32_q0;
wire   [3:0] layer2_weights_33_address0;
reg    layer2_weights_33_ce0;
wire  signed [11:0] layer2_weights_33_q0;
wire   [3:0] layer2_weights_34_address0;
reg    layer2_weights_34_ce0;
wire  signed [9:0] layer2_weights_34_q0;
wire   [3:0] layer2_weights_35_address0;
reg    layer2_weights_35_ce0;
wire   [8:0] layer2_weights_35_q0;
wire   [3:0] layer2_weights_36_address0;
reg    layer2_weights_36_ce0;
wire  signed [11:0] layer2_weights_36_q0;
wire   [3:0] layer2_weights_37_address0;
reg    layer2_weights_37_ce0;
wire  signed [12:0] layer2_weights_37_q0;
wire   [3:0] layer2_weights_38_address0;
reg    layer2_weights_38_ce0;
wire  signed [4:0] layer2_weights_38_q0;
wire   [3:0] layer2_weights_39_address0;
reg    layer2_weights_39_ce0;
wire  signed [10:0] layer2_weights_39_q0;
wire   [3:0] layer2_weights_40_address0;
reg    layer2_weights_40_ce0;
wire  signed [10:0] layer2_weights_40_q0;
wire   [3:0] layer2_weights_41_address0;
reg    layer2_weights_41_ce0;
wire  signed [10:0] layer2_weights_41_q0;
wire   [3:0] layer2_weights_42_address0;
reg    layer2_weights_42_ce0;
wire  signed [10:0] layer2_weights_42_q0;
wire   [3:0] layer2_weights_43_address0;
reg    layer2_weights_43_ce0;
wire  signed [11:0] layer2_weights_43_q0;
wire   [3:0] layer2_weights_44_address0;
reg    layer2_weights_44_ce0;
wire  signed [10:0] layer2_weights_44_q0;
wire   [3:0] layer2_weights_45_address0;
reg    layer2_weights_45_ce0;
wire  signed [11:0] layer2_weights_45_q0;
wire   [3:0] layer2_weights_46_address0;
reg    layer2_weights_46_ce0;
wire   [7:0] layer2_weights_46_q0;
wire   [3:0] layer2_weights_48_address0;
reg    layer2_weights_48_ce0;
wire   [7:0] layer2_weights_48_q0;
wire   [3:0] layer2_weights_49_address0;
reg    layer2_weights_49_ce0;
wire  signed [7:0] layer2_weights_49_q0;
wire   [3:0] layer2_weights_50_address0;
reg    layer2_weights_50_ce0;
wire   [6:0] layer2_weights_50_q0;
wire   [3:0] layer2_weights_51_address0;
reg    layer2_weights_51_ce0;
wire  signed [10:0] layer2_weights_51_q0;
wire   [3:0] layer2_weights_52_address0;
reg    layer2_weights_52_ce0;
wire  signed [9:0] layer2_weights_52_q0;
wire   [3:0] layer2_weights_53_address0;
reg    layer2_weights_53_ce0;
wire  signed [10:0] layer2_weights_53_q0;
wire   [3:0] layer2_weights_54_address0;
reg    layer2_weights_54_ce0;
wire  signed [7:0] layer2_weights_54_q0;
wire   [3:0] layer2_weights_55_address0;
reg    layer2_weights_55_ce0;
wire   [6:0] layer2_weights_55_q0;
wire   [3:0] layer2_weights_56_address0;
reg    layer2_weights_56_ce0;
wire  signed [10:0] layer2_weights_56_q0;
wire   [3:0] layer2_weights_57_address0;
reg    layer2_weights_57_ce0;
wire  signed [11:0] layer2_weights_57_q0;
wire   [3:0] layer2_weights_58_address0;
reg    layer2_weights_58_ce0;
wire   [10:0] layer2_weights_58_q0;
wire   [3:0] layer2_weights_59_address0;
reg    layer2_weights_59_ce0;
wire   [3:0] layer2_weights_59_q0;
wire   [3:0] layer2_weights_61_address0;
reg    layer2_weights_61_ce0;
wire   [10:0] layer2_weights_61_q0;
wire   [3:0] layer2_weights_62_address0;
reg    layer2_weights_62_ce0;
wire   [4:0] layer2_weights_62_q0;
wire   [3:0] layer2_weights_63_address0;
reg    layer2_weights_63_ce0;
wire   [9:0] layer2_weights_63_q0;
wire   [3:0] layer2_bias_address0;
reg    layer2_bias_ce0;
wire   [10:0] layer2_bias_q0;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln75_43_cast_fu_1512_p1;
reg  signed [23:0] sext_ln75_43_cast_reg_3589;
wire  signed [20:0] layer1_output_55_cast_cast_fu_1516_p1;
reg  signed [20:0] layer1_output_55_cast_cast_reg_3594;
wire  signed [23:0] sext_ln75_42_cast_fu_1520_p1;
reg  signed [23:0] sext_ln75_42_cast_reg_3599;
wire  signed [20:0] layer1_output_53_cast_cast_fu_1524_p1;
reg  signed [20:0] layer1_output_53_cast_cast_reg_3604;
wire  signed [23:0] sext_ln75_41_cast_fu_1528_p1;
reg  signed [23:0] sext_ln75_41_cast_reg_3609;
wire  signed [23:0] sext_ln75_40_cast_fu_1532_p1;
reg  signed [23:0] sext_ln75_40_cast_reg_3614;
wire  signed [23:0] sext_ln75_39_cast_fu_1536_p1;
reg  signed [23:0] sext_ln75_39_cast_reg_3619;
wire  signed [22:0] layer1_output_49_cast_cast_fu_1540_p1;
reg  signed [22:0] layer1_output_49_cast_cast_reg_3624;
wire  signed [23:0] layer1_output_48_cast_cast_fu_1544_p1;
reg  signed [23:0] layer1_output_48_cast_cast_reg_3629;
wire  signed [23:0] sext_ln75_38_cast_fu_1548_p1;
reg  signed [23:0] sext_ln75_38_cast_reg_3634;
wire  signed [23:0] sext_ln75_37_cast_fu_1552_p1;
reg  signed [23:0] sext_ln75_37_cast_reg_3639;
wire  signed [23:0] sext_ln75_36_cast_fu_1556_p1;
reg  signed [23:0] sext_ln75_36_cast_reg_3644;
wire  signed [22:0] layer1_output_44_cast_cast_fu_1560_p1;
reg  signed [22:0] layer1_output_44_cast_cast_reg_3649;
wire  signed [23:0] layer1_output_43_cast_cast_fu_1564_p1;
reg  signed [23:0] layer1_output_43_cast_cast_reg_3654;
wire  signed [23:0] sext_ln75_35_cast_fu_1568_p1;
reg  signed [23:0] sext_ln75_35_cast_reg_3659;
wire  signed [23:0] sext_ln75_34_cast_fu_1572_p1;
reg  signed [23:0] sext_ln75_34_cast_reg_3664;
wire  signed [23:0] sext_ln75_33_cast_fu_1576_p1;
reg  signed [23:0] sext_ln75_33_cast_reg_3669;
wire  signed [23:0] sext_ln75_32_cast_fu_1580_p1;
reg  signed [23:0] sext_ln75_32_cast_reg_3674;
wire  signed [23:0] sext_ln75_31_cast_fu_1584_p1;
reg  signed [23:0] sext_ln75_31_cast_reg_3679;
wire  signed [23:0] sext_ln75_30_cast_fu_1588_p1;
reg  signed [23:0] sext_ln75_30_cast_reg_3684;
wire  signed [23:0] sext_ln75_29_cast_fu_1592_p1;
reg  signed [23:0] sext_ln75_29_cast_reg_3689;
wire  signed [23:0] sext_ln75_28_cast_fu_1596_p1;
reg  signed [23:0] sext_ln75_28_cast_reg_3694;
wire  signed [23:0] sext_ln75_27_cast_fu_1600_p1;
reg  signed [23:0] sext_ln75_27_cast_reg_3699;
wire  signed [20:0] layer1_output_33_cast_cast_fu_1604_p1;
reg  signed [20:0] layer1_output_33_cast_cast_reg_3704;
wire  signed [23:0] sext_ln75_26_cast_fu_1608_p1;
reg  signed [23:0] sext_ln75_26_cast_reg_3709;
wire  signed [23:0] sext_ln75_25_cast_fu_1612_p1;
reg  signed [23:0] sext_ln75_25_cast_reg_3714;
wire  signed [23:0] sext_ln75_24_cast_fu_1616_p1;
reg  signed [23:0] sext_ln75_24_cast_reg_3719;
wire  signed [23:0] sext_ln75_23_cast_fu_1620_p1;
reg  signed [23:0] sext_ln75_23_cast_reg_3724;
wire  signed [23:0] sext_ln75_22_cast_fu_1624_p1;
reg  signed [23:0] sext_ln75_22_cast_reg_3729;
wire  signed [23:0] sext_ln75_21_cast_fu_1628_p1;
reg  signed [23:0] sext_ln75_21_cast_reg_3734;
wire  signed [23:0] layer1_output_26_cast_cast_fu_1632_p1;
reg  signed [23:0] layer1_output_26_cast_cast_reg_3739;
wire  signed [23:0] sext_ln75_20_cast_fu_1636_p1;
reg  signed [23:0] sext_ln75_20_cast_reg_3744;
wire  signed [23:0] sext_ln75_19_cast_fu_1640_p1;
reg  signed [23:0] sext_ln75_19_cast_reg_3749;
wire  signed [22:0] layer1_output_23_cast_cast_fu_1644_p1;
reg  signed [22:0] layer1_output_23_cast_cast_reg_3754;
wire  signed [23:0] layer1_output_22_cast_cast_fu_1648_p1;
reg  signed [23:0] layer1_output_22_cast_cast_reg_3759;
wire  signed [23:0] sext_ln75_18_cast_fu_1652_p1;
reg  signed [23:0] sext_ln75_18_cast_reg_3764;
wire  signed [23:0] sext_ln75_17_cast_fu_1656_p1;
reg  signed [23:0] sext_ln75_17_cast_reg_3769;
wire  signed [23:0] sext_ln75_16_cast_fu_1660_p1;
reg  signed [23:0] sext_ln75_16_cast_reg_3774;
wire  signed [21:0] layer1_output_18_cast_cast_fu_1664_p1;
reg  signed [21:0] layer1_output_18_cast_cast_reg_3779;
wire  signed [23:0] sext_ln75_15_cast_fu_1668_p1;
reg  signed [23:0] sext_ln75_15_cast_reg_3784;
wire  signed [23:0] sext_ln75_14_cast_fu_1672_p1;
reg  signed [23:0] sext_ln75_14_cast_reg_3789;
wire  signed [23:0] sext_ln75_13_cast_fu_1676_p1;
reg  signed [23:0] sext_ln75_13_cast_reg_3794;
wire  signed [23:0] sext_ln75_12_cast_fu_1680_p1;
reg  signed [23:0] sext_ln75_12_cast_reg_3799;
wire  signed [23:0] sext_ln75_11_cast_fu_1684_p1;
reg  signed [23:0] sext_ln75_11_cast_reg_3804;
wire  signed [23:0] sext_ln75_10_cast_fu_1688_p1;
reg  signed [23:0] sext_ln75_10_cast_reg_3809;
wire  signed [23:0] sext_ln75_9_cast_fu_1692_p1;
reg  signed [23:0] sext_ln75_9_cast_reg_3814;
wire  signed [23:0] sext_ln75_8_cast_fu_1696_p1;
reg  signed [23:0] sext_ln75_8_cast_reg_3819;
wire  signed [23:0] sext_ln75_7_cast_fu_1700_p1;
reg  signed [23:0] sext_ln75_7_cast_reg_3824;
wire  signed [23:0] sext_ln75_6_cast_fu_1704_p1;
reg  signed [23:0] sext_ln75_6_cast_reg_3829;
wire  signed [23:0] sext_ln75_5_cast_fu_1708_p1;
reg  signed [23:0] sext_ln75_5_cast_reg_3834;
wire  signed [23:0] sext_ln75_4_cast_fu_1712_p1;
reg  signed [23:0] sext_ln75_4_cast_reg_3839;
wire  signed [23:0] layer1_output_5_cast_cast_fu_1716_p1;
reg  signed [23:0] layer1_output_5_cast_cast_reg_3844;
wire  signed [23:0] sext_ln75_3_cast_fu_1720_p1;
reg  signed [23:0] sext_ln75_3_cast_reg_3849;
wire  signed [23:0] sext_ln75_2_cast_fu_1724_p1;
reg  signed [23:0] sext_ln75_2_cast_reg_3854;
wire  signed [23:0] sext_ln75_1_cast_fu_1728_p1;
reg  signed [23:0] sext_ln75_1_cast_reg_3859;
wire  signed [22:0] layer1_output_1_cast_cast_fu_1732_p1;
reg  signed [22:0] layer1_output_1_cast_cast_reg_3864;
wire  signed [23:0] sext_ln75_cast_fu_1736_p1;
reg  signed [23:0] sext_ln75_cast_reg_3869;
reg   [3:0] i_1_reg_3874;
reg   [3:0] i_1_reg_3874_pp0_iter1_reg;
reg   [3:0] i_1_reg_3874_pp0_iter2_reg;
reg   [3:0] i_1_reg_3874_pp0_iter3_reg;
reg   [3:0] i_1_reg_3874_pp0_iter4_reg;
reg   [3:0] i_1_reg_3874_pp0_iter5_reg;
reg   [3:0] i_1_reg_3874_pp0_iter6_reg;
reg   [3:0] i_1_reg_3874_pp0_iter7_reg;
reg   [3:0] i_1_reg_3874_pp0_iter8_reg;
reg   [3:0] i_1_reg_3874_pp0_iter9_reg;
reg   [3:0] i_1_reg_3874_pp0_iter10_reg;
reg   [3:0] i_1_reg_3874_pp0_iter11_reg;
reg   [3:0] i_1_reg_3874_pp0_iter12_reg;
reg   [3:0] i_1_reg_3874_pp0_iter13_reg;
reg   [3:0] i_1_reg_3874_pp0_iter14_reg;
reg   [3:0] i_1_reg_3874_pp0_iter15_reg;
reg   [3:0] i_1_reg_3874_pp0_iter16_reg;
reg   [3:0] i_1_reg_3874_pp0_iter17_reg;
reg   [3:0] i_1_reg_3874_pp0_iter18_reg;
reg   [3:0] i_1_reg_3874_pp0_iter19_reg;
reg   [3:0] i_1_reg_3874_pp0_iter20_reg;
reg   [3:0] i_1_reg_3874_pp0_iter21_reg;
reg   [3:0] i_1_reg_3874_pp0_iter22_reg;
reg   [3:0] i_1_reg_3874_pp0_iter23_reg;
reg   [3:0] i_1_reg_3874_pp0_iter24_reg;
reg   [3:0] i_1_reg_3874_pp0_iter25_reg;
reg   [3:0] i_1_reg_3874_pp0_iter26_reg;
reg   [3:0] i_1_reg_3874_pp0_iter27_reg;
reg   [3:0] i_1_reg_3874_pp0_iter28_reg;
reg   [3:0] i_1_reg_3874_pp0_iter29_reg;
reg   [3:0] i_1_reg_3874_pp0_iter30_reg;
reg   [3:0] i_1_reg_3874_pp0_iter31_reg;
reg   [3:0] i_1_reg_3874_pp0_iter32_reg;
reg   [3:0] i_1_reg_3874_pp0_iter33_reg;
reg   [3:0] i_1_reg_3874_pp0_iter34_reg;
reg   [3:0] i_1_reg_3874_pp0_iter35_reg;
reg   [3:0] i_1_reg_3874_pp0_iter36_reg;
reg   [3:0] i_1_reg_3874_pp0_iter37_reg;
reg   [3:0] i_1_reg_3874_pp0_iter38_reg;
reg   [3:0] i_1_reg_3874_pp0_iter39_reg;
reg   [3:0] i_1_reg_3874_pp0_iter40_reg;
reg   [3:0] i_1_reg_3874_pp0_iter41_reg;
reg   [3:0] i_1_reg_3874_pp0_iter42_reg;
reg   [3:0] i_1_reg_3874_pp0_iter43_reg;
reg   [3:0] i_1_reg_3874_pp0_iter44_reg;
reg   [3:0] i_1_reg_3874_pp0_iter45_reg;
reg   [3:0] i_1_reg_3874_pp0_iter46_reg;
reg   [3:0] i_1_reg_3874_pp0_iter47_reg;
reg   [3:0] i_1_reg_3874_pp0_iter48_reg;
reg   [3:0] i_1_reg_3874_pp0_iter49_reg;
reg   [3:0] i_1_reg_3874_pp0_iter50_reg;
reg   [3:0] i_1_reg_3874_pp0_iter51_reg;
reg   [3:0] i_1_reg_3874_pp0_iter52_reg;
reg   [3:0] i_1_reg_3874_pp0_iter53_reg;
reg   [3:0] i_1_reg_3874_pp0_iter54_reg;
reg   [3:0] i_1_reg_3874_pp0_iter55_reg;
reg   [3:0] i_1_reg_3874_pp0_iter56_reg;
reg   [3:0] i_1_reg_3874_pp0_iter57_reg;
reg   [3:0] i_1_reg_3874_pp0_iter58_reg;
reg   [0:0] icmp_ln70_reg_3878;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter1_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter2_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter3_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter4_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter5_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter6_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter7_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter8_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter9_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter10_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter11_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter12_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter13_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter14_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter15_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter16_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter17_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter18_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter19_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter20_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter21_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter22_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter23_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter24_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter25_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter26_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter27_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter28_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter29_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter30_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter31_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter32_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter33_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter34_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter35_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter36_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter37_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter38_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter39_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter40_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter41_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter42_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter43_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter44_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter45_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter46_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter47_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter48_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter49_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter50_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter51_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter52_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter53_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter54_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter55_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter56_reg;
reg   [0:0] icmp_ln70_reg_3878_pp0_iter57_reg;
wire   [63:0] zext_ln70_fu_1760_p1;
reg   [63:0] zext_ln70_reg_3882;
reg   [63:0] zext_ln70_reg_3882_pp0_iter1_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter2_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter3_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter4_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter5_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter6_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter7_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter8_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter9_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter10_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter11_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter12_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter13_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter14_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter15_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter16_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter17_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter18_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter19_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter20_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter21_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter22_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter23_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter24_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter25_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter26_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter27_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter28_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter29_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter30_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter31_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter32_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter33_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter34_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter35_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter36_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter37_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter38_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter39_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter40_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter41_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter42_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter43_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter44_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter45_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter46_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter47_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter48_reg;
reg   [63:0] zext_ln70_reg_3882_pp0_iter49_reg;
reg  signed [10:0] layer2_weights_0_load_reg_3952;
reg   [15:0] tmp_s_reg_3967;
reg  signed [10:0] layer2_weights_58_load_reg_4742;
reg   [3:0] layer2_weights_59_load_reg_4747;
reg   [3:0] layer2_weights_59_load_reg_4747_pp0_iter52_reg;
reg   [10:0] layer2_weights_61_load_reg_4752;
reg   [10:0] layer2_weights_61_load_reg_4752_pp0_iter52_reg;
reg  signed [10:0] layer2_weights_61_load_reg_4752_pp0_iter53_reg;
reg   [4:0] layer2_weights_62_load_reg_4757;
reg   [4:0] layer2_weights_62_load_reg_4757_pp0_iter52_reg;
reg   [4:0] layer2_weights_62_load_reg_4757_pp0_iter53_reg;
reg   [4:0] layer2_weights_62_load_reg_4757_pp0_iter54_reg;
reg   [9:0] layer2_weights_63_load_reg_4762;
reg   [9:0] layer2_weights_63_load_reg_4762_pp0_iter52_reg;
reg   [9:0] layer2_weights_63_load_reg_4762_pp0_iter53_reg;
reg   [9:0] layer2_weights_63_load_reg_4762_pp0_iter54_reg;
reg  signed [9:0] layer2_weights_63_load_reg_4762_pp0_iter55_reg;
reg   [10:0] layer2_bias_load_reg_4767;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter52_reg;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter53_reg;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter54_reg;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter55_reg;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter56_reg;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter57_reg;
reg   [10:0] layer2_bias_load_reg_4767_pp0_iter58_reg;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_302;
wire   [3:0] add_ln70_fu_1754_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [15:0] layer2_output_fu_306;
wire   [15:0] layer2_output_11_fu_2978_p2;
reg   [15:0] layer2_output_1_fu_310;
reg   [15:0] layer2_output_2_fu_314;
reg   [15:0] layer2_output_3_fu_318;
reg   [15:0] layer2_output_4_fu_322;
reg   [15:0] layer2_output_5_fu_326;
reg   [15:0] layer2_output_6_fu_330;
reg   [15:0] layer2_output_7_fu_334;
reg   [15:0] layer2_output_8_fu_338;
reg   [15:0] layer2_output_9_fu_342;
wire    ap_block_pp0_stage0_01001;
wire  signed [15:0] mul_ln75_fu_1778_p1;
wire   [23:0] mul_ln75_fu_1778_p2;
wire  signed [23:0] grp_fu_3074_p3;
wire   [15:0] tmp_1_fu_1808_p4;
wire  signed [23:0] tmp_2_fu_1829_p1;
wire   [23:0] grp_fu_3082_p3;
wire   [15:0] tmp_2_fu_1829_p4;
wire  signed [23:0] tmp_3_fu_1850_p1;
wire   [23:0] grp_fu_3090_p3;
wire   [15:0] tmp_3_fu_1850_p4;
wire  signed [23:0] tmp_4_fu_1871_p1;
wire   [23:0] grp_fu_3098_p3;
wire   [15:0] tmp_4_fu_1871_p4;
wire  signed [23:0] tmp_5_fu_1892_p1;
wire   [23:0] grp_fu_3106_p3;
wire   [15:0] tmp_5_fu_1892_p4;
wire  signed [23:0] tmp_6_fu_1913_p1;
wire   [23:0] grp_fu_3114_p3;
wire   [15:0] tmp_6_fu_1913_p4;
wire  signed [23:0] tmp_7_fu_1934_p1;
wire   [23:0] grp_fu_3122_p3;
wire   [15:0] tmp_7_fu_1934_p4;
wire  signed [23:0] tmp_8_fu_1955_p1;
wire   [23:0] grp_fu_3130_p3;
wire   [15:0] tmp_8_fu_1955_p4;
wire  signed [23:0] tmp_9_fu_1976_p1;
wire   [23:0] grp_fu_3138_p3;
wire   [15:0] tmp_9_fu_1976_p4;
wire  signed [23:0] tmp_10_fu_1997_p1;
wire   [23:0] grp_fu_3146_p3;
wire   [15:0] tmp_10_fu_1997_p4;
wire  signed [23:0] tmp_11_fu_2018_p1;
wire   [23:0] grp_fu_3154_p3;
wire   [15:0] tmp_11_fu_2018_p4;
wire  signed [23:0] tmp_12_fu_2039_p1;
wire   [23:0] grp_fu_3162_p3;
wire   [15:0] tmp_12_fu_2039_p4;
wire  signed [23:0] tmp_13_fu_2060_p1;
wire   [23:0] grp_fu_3170_p3;
wire   [15:0] tmp_13_fu_2060_p4;
wire  signed [23:0] tmp_14_fu_2081_p1;
wire   [23:0] grp_fu_3178_p3;
wire   [15:0] tmp_14_fu_2081_p4;
wire  signed [23:0] tmp_15_fu_2102_p1;
wire   [23:0] grp_fu_3186_p3;
wire   [15:0] tmp_15_fu_2102_p4;
wire  signed [23:0] tmp_16_fu_2123_p1;
wire   [23:0] grp_fu_3194_p3;
wire   [15:0] tmp_16_fu_2123_p4;
wire  signed [23:0] tmp_17_fu_2144_p1;
wire   [23:0] grp_fu_3202_p3;
wire   [15:0] tmp_17_fu_2144_p4;
wire  signed [23:0] grp_fu_3210_p3;
wire   [15:0] tmp_18_fu_2165_p4;
wire  signed [23:0] tmp_19_fu_2186_p1;
wire   [23:0] grp_fu_3218_p3;
wire   [15:0] tmp_19_fu_2186_p4;
wire  signed [23:0] tmp_20_fu_2207_p1;
wire   [23:0] grp_fu_3226_p3;
wire   [15:0] tmp_20_fu_2207_p4;
wire  signed [23:0] tmp_21_fu_2228_p1;
wire   [23:0] grp_fu_3234_p3;
wire   [15:0] tmp_21_fu_2228_p4;
wire  signed [23:0] tmp_22_fu_2249_p1;
wire   [23:0] grp_fu_3242_p3;
wire   [15:0] tmp_22_fu_2249_p4;
wire  signed [23:0] grp_fu_3250_p3;
wire   [15:0] tmp_23_fu_2270_p4;
wire  signed [23:0] tmp_24_fu_2291_p1;
wire   [23:0] grp_fu_3258_p3;
wire   [15:0] tmp_24_fu_2291_p4;
wire  signed [23:0] tmp_25_fu_2312_p1;
wire   [23:0] grp_fu_3266_p3;
wire   [15:0] tmp_25_fu_2312_p4;
wire  signed [23:0] tmp_26_fu_2333_p1;
wire   [23:0] grp_fu_3274_p3;
wire   [15:0] tmp_26_fu_2333_p4;
wire  signed [23:0] tmp_27_fu_2354_p1;
wire   [23:0] grp_fu_3282_p3;
wire   [15:0] tmp_27_fu_2354_p4;
wire  signed [9:0] sext_ln75_74_fu_2371_p1;
wire  signed [23:0] tmp_28_fu_2379_p1;
wire   [23:0] grp_fu_3290_p3;
wire   [15:0] tmp_28_fu_2379_p4;
wire  signed [23:0] tmp_29_fu_2400_p1;
wire   [23:0] grp_fu_3298_p3;
wire   [15:0] tmp_29_fu_2400_p4;
wire  signed [23:0] tmp_30_fu_2421_p1;
wire   [23:0] grp_fu_3306_p3;
wire   [15:0] tmp_30_fu_2421_p4;
wire  signed [23:0] tmp_31_fu_2442_p1;
wire   [23:0] grp_fu_3314_p3;
wire   [15:0] tmp_31_fu_2442_p4;
wire  signed [23:0] tmp_32_fu_2463_p1;
wire   [23:0] grp_fu_3322_p3;
wire   [15:0] tmp_32_fu_2463_p4;
wire  signed [23:0] grp_fu_3330_p3;
wire   [15:0] tmp_33_fu_2484_p4;
wire  signed [23:0] tmp_34_fu_2505_p1;
wire   [23:0] grp_fu_3338_p3;
wire   [15:0] tmp_34_fu_2505_p4;
wire  signed [23:0] tmp_35_fu_2526_p1;
wire   [23:0] grp_fu_3346_p3;
wire   [15:0] tmp_35_fu_2526_p4;
wire  signed [23:0] tmp_36_fu_2547_p1;
wire   [23:0] grp_fu_3354_p3;
wire   [15:0] tmp_36_fu_2547_p4;
wire  signed [23:0] tmp_37_fu_2568_p1;
wire   [23:0] grp_fu_3362_p3;
wire   [15:0] tmp_37_fu_2568_p4;
wire  signed [23:0] tmp_38_fu_2589_p1;
wire   [23:0] grp_fu_3370_p3;
wire   [15:0] tmp_38_fu_2589_p4;
wire  signed [8:0] sext_ln75_86_fu_2606_p1;
wire  signed [23:0] tmp_39_fu_2614_p1;
wire   [23:0] grp_fu_3378_p3;
wire   [15:0] tmp_39_fu_2614_p4;
wire  signed [8:0] sext_ln75_87_fu_2631_p1;
wire  signed [23:0] tmp_40_fu_2639_p1;
wire   [23:0] grp_fu_3386_p3;
wire   [15:0] tmp_40_fu_2639_p4;
wire  signed [23:0] tmp_41_fu_2660_p1;
wire   [23:0] grp_fu_3394_p3;
wire   [15:0] tmp_41_fu_2660_p4;
wire  signed [23:0] tmp_42_fu_2681_p1;
wire   [23:0] grp_fu_3402_p3;
wire   [15:0] tmp_42_fu_2681_p4;
wire  signed [23:0] tmp_43_fu_2702_p1;
wire   [23:0] grp_fu_3410_p3;
wire   [15:0] tmp_43_fu_2702_p4;
wire  signed [23:0] grp_fu_3418_p3;
wire   [15:0] tmp_44_fu_2723_p4;
wire  signed [23:0] tmp_45_fu_2744_p1;
wire   [23:0] grp_fu_3426_p3;
wire   [15:0] tmp_45_fu_2744_p4;
wire  signed [23:0] tmp_46_fu_2765_p1;
wire   [23:0] grp_fu_3434_p3;
wire   [15:0] tmp_46_fu_2765_p4;
wire  signed [23:0] tmp_47_fu_2786_p1;
wire   [23:0] grp_fu_3442_p3;
wire   [15:0] tmp_47_fu_2786_p4;
wire  signed [23:0] tmp_48_fu_2807_p1;
wire   [23:0] grp_fu_3450_p3;
wire   [15:0] tmp_48_fu_2807_p4;
wire  signed [23:0] grp_fu_3458_p3;
wire   [15:0] tmp_49_fu_2828_p4;
wire  signed [23:0] tmp_50_fu_2848_p1;
wire   [23:0] grp_fu_3466_p3;
wire   [15:0] tmp_50_fu_2848_p4;
wire  signed [4:0] sext_ln75_98_fu_2865_p1;
wire  signed [23:0] tmp_51_fu_2872_p1;
wire   [23:0] grp_fu_3474_p3;
wire   [15:0] tmp_51_fu_2872_p4;
wire  signed [23:0] tmp_52_fu_2892_p1;
wire   [23:0] grp_fu_3482_p3;
wire   [15:0] tmp_52_fu_2892_p4;
wire  signed [23:0] grp_fu_3490_p3;
wire   [15:0] tmp_53_fu_2912_p4;
wire  signed [23:0] tmp_54_fu_2932_p1;
wire   [23:0] grp_fu_3498_p3;
wire   [15:0] tmp_54_fu_2932_p4;
wire  signed [23:0] grp_fu_3506_p3;
wire   [15:0] tmp_55_fu_2949_p4;
wire  signed [23:0] sum_fu_2966_p1;
wire   [23:0] grp_fu_3514_p3;
wire  signed [15:0] sext_ln77_fu_2975_p1;
wire   [15:0] sum_fu_2966_p4;
wire  signed [15:0] grp_fu_3074_p1;
wire  signed [23:0] grp_fu_3074_p2;
wire  signed [15:0] grp_fu_3082_p1;
wire   [23:0] grp_fu_3082_p2;
wire  signed [15:0] grp_fu_3090_p1;
wire   [23:0] grp_fu_3090_p2;
wire  signed [15:0] grp_fu_3098_p1;
wire   [23:0] grp_fu_3098_p2;
wire  signed [15:0] grp_fu_3106_p1;
wire   [23:0] grp_fu_3106_p2;
wire  signed [15:0] grp_fu_3114_p1;
wire   [23:0] grp_fu_3114_p2;
wire  signed [15:0] grp_fu_3122_p1;
wire   [23:0] grp_fu_3122_p2;
wire   [10:0] grp_fu_3130_p0;
wire  signed [15:0] grp_fu_3130_p1;
wire   [23:0] grp_fu_3130_p2;
wire  signed [15:0] grp_fu_3138_p1;
wire   [23:0] grp_fu_3138_p2;
wire  signed [15:0] grp_fu_3146_p1;
wire   [23:0] grp_fu_3146_p2;
wire  signed [15:0] grp_fu_3154_p1;
wire   [23:0] grp_fu_3154_p2;
wire  signed [15:0] grp_fu_3162_p1;
wire   [23:0] grp_fu_3162_p2;
wire  signed [15:0] grp_fu_3170_p1;
wire   [23:0] grp_fu_3170_p2;
wire  signed [15:0] grp_fu_3178_p1;
wire   [23:0] grp_fu_3178_p2;
wire  signed [15:0] grp_fu_3186_p1;
wire   [23:0] grp_fu_3186_p2;
wire  signed [15:0] grp_fu_3194_p1;
wire   [23:0] grp_fu_3194_p2;
wire   [9:0] grp_fu_3202_p0;
wire  signed [15:0] grp_fu_3202_p1;
wire   [23:0] grp_fu_3202_p2;
wire  signed [15:0] grp_fu_3210_p1;
wire  signed [23:0] grp_fu_3210_p2;
wire   [10:0] grp_fu_3218_p0;
wire  signed [15:0] grp_fu_3218_p1;
wire   [23:0] grp_fu_3218_p2;
wire  signed [15:0] grp_fu_3226_p1;
wire   [23:0] grp_fu_3226_p2;
wire  signed [15:0] grp_fu_3234_p1;
wire   [23:0] grp_fu_3234_p2;
wire  signed [15:0] grp_fu_3242_p1;
wire   [23:0] grp_fu_3242_p2;
wire  signed [15:0] grp_fu_3250_p1;
wire  signed [23:0] grp_fu_3250_p2;
wire  signed [15:0] grp_fu_3258_p1;
wire   [23:0] grp_fu_3258_p2;
wire  signed [15:0] grp_fu_3266_p1;
wire   [23:0] grp_fu_3266_p2;
wire  signed [15:0] grp_fu_3274_p1;
wire   [23:0] grp_fu_3274_p2;
wire  signed [15:0] grp_fu_3282_p1;
wire   [23:0] grp_fu_3282_p2;
wire  signed [15:0] grp_fu_3290_p1;
wire   [23:0] grp_fu_3290_p2;
wire  signed [15:0] grp_fu_3298_p1;
wire   [23:0] grp_fu_3298_p2;
wire   [9:0] grp_fu_3306_p0;
wire  signed [15:0] grp_fu_3306_p1;
wire   [23:0] grp_fu_3306_p2;
wire  signed [15:0] grp_fu_3314_p1;
wire   [23:0] grp_fu_3314_p2;
wire  signed [15:0] grp_fu_3322_p1;
wire   [23:0] grp_fu_3322_p2;
wire  signed [15:0] grp_fu_3330_p1;
wire  signed [23:0] grp_fu_3330_p2;
wire  signed [15:0] grp_fu_3338_p1;
wire   [23:0] grp_fu_3338_p2;
wire  signed [15:0] grp_fu_3346_p1;
wire   [23:0] grp_fu_3346_p2;
wire  signed [15:0] grp_fu_3354_p1;
wire   [23:0] grp_fu_3354_p2;
wire  signed [15:0] grp_fu_3362_p1;
wire   [23:0] grp_fu_3362_p2;
wire  signed [15:0] grp_fu_3370_p1;
wire   [23:0] grp_fu_3370_p2;
wire  signed [15:0] grp_fu_3378_p1;
wire   [23:0] grp_fu_3378_p2;
wire  signed [15:0] grp_fu_3386_p1;
wire   [23:0] grp_fu_3386_p2;
wire   [8:0] grp_fu_3394_p0;
wire  signed [15:0] grp_fu_3394_p1;
wire   [23:0] grp_fu_3394_p2;
wire   [8:0] grp_fu_3402_p0;
wire  signed [15:0] grp_fu_3402_p1;
wire   [23:0] grp_fu_3402_p2;
wire  signed [15:0] grp_fu_3410_p1;
wire   [23:0] grp_fu_3410_p2;
wire   [6:0] grp_fu_3418_p0;
wire  signed [15:0] grp_fu_3418_p1;
wire  signed [23:0] grp_fu_3418_p2;
wire  signed [15:0] grp_fu_3426_p1;
wire   [23:0] grp_fu_3426_p2;
wire  signed [15:0] grp_fu_3434_p1;
wire   [23:0] grp_fu_3434_p2;
wire  signed [15:0] grp_fu_3442_p1;
wire   [23:0] grp_fu_3442_p2;
wire  signed [15:0] grp_fu_3450_p1;
wire   [23:0] grp_fu_3450_p2;
wire   [6:0] grp_fu_3458_p0;
wire  signed [15:0] grp_fu_3458_p1;
wire  signed [23:0] grp_fu_3458_p2;
wire  signed [15:0] grp_fu_3466_p1;
wire   [23:0] grp_fu_3466_p2;
wire  signed [15:0] grp_fu_3474_p1;
wire   [23:0] grp_fu_3474_p2;
wire  signed [15:0] grp_fu_3482_p1;
wire   [23:0] grp_fu_3482_p2;
wire   [4:0] grp_fu_3490_p0;
wire  signed [15:0] grp_fu_3490_p1;
wire  signed [23:0] grp_fu_3490_p2;
wire  signed [15:0] grp_fu_3498_p1;
wire   [23:0] grp_fu_3498_p2;
wire   [4:0] grp_fu_3506_p0;
wire  signed [15:0] grp_fu_3506_p1;
wire  signed [23:0] grp_fu_3506_p2;
wire  signed [15:0] grp_fu_3514_p1;
wire   [23:0] grp_fu_3514_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [23:0] grp_fu_3130_p00;
wire   [23:0] grp_fu_3202_p00;
wire   [23:0] grp_fu_3218_p00;
wire   [23:0] grp_fu_3306_p00;
wire   [23:0] grp_fu_3394_p00;
wire   [23:0] grp_fu_3402_p00;
wire   [22:0] grp_fu_3418_p00;
wire   [22:0] grp_fu_3458_p00;
wire   [20:0] grp_fu_3490_p00;
wire   [20:0] grp_fu_3506_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_0_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_0_address0),
    .ce0(layer2_weights_0_ce0),
    .q0(layer2_weights_0_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_1_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_1_address0),
    .ce0(layer2_weights_1_ce0),
    .q0(layer2_weights_1_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_2_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_2_address0),
    .ce0(layer2_weights_2_ce0),
    .q0(layer2_weights_2_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_3_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_3_address0),
    .ce0(layer2_weights_3_ce0),
    .q0(layer2_weights_3_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_4_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_4_address0),
    .ce0(layer2_weights_4_ce0),
    .q0(layer2_weights_4_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_5_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_5_address0),
    .ce0(layer2_weights_5_ce0),
    .q0(layer2_weights_5_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_6_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_6_address0),
    .ce0(layer2_weights_6_ce0),
    .q0(layer2_weights_6_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_7_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_7_address0),
    .ce0(layer2_weights_7_ce0),
    .q0(layer2_weights_7_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_8_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_8_address0),
    .ce0(layer2_weights_8_ce0),
    .q0(layer2_weights_8_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_9_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_9_address0),
    .ce0(layer2_weights_9_ce0),
    .q0(layer2_weights_9_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_12_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_12_address0),
    .ce0(layer2_weights_12_ce0),
    .q0(layer2_weights_12_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_13_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_13_address0),
    .ce0(layer2_weights_13_ce0),
    .q0(layer2_weights_13_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_14_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_14_address0),
    .ce0(layer2_weights_14_ce0),
    .q0(layer2_weights_14_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_15_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_15_address0),
    .ce0(layer2_weights_15_ce0),
    .q0(layer2_weights_15_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_16_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_16_address0),
    .ce0(layer2_weights_16_ce0),
    .q0(layer2_weights_16_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_18_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_18_address0),
    .ce0(layer2_weights_18_ce0),
    .q0(layer2_weights_18_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_20_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_20_address0),
    .ce0(layer2_weights_20_ce0),
    .q0(layer2_weights_20_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_21_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_21_address0),
    .ce0(layer2_weights_21_ce0),
    .q0(layer2_weights_21_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_22_ROM_AUTO_1R #(
    .DataWidth( 6 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_22_address0),
    .ce0(layer2_weights_22_ce0),
    .q0(layer2_weights_22_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_23_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_23_address0),
    .ce0(layer2_weights_23_ce0),
    .q0(layer2_weights_23_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_25_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_25_address0),
    .ce0(layer2_weights_25_ce0),
    .q0(layer2_weights_25_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_26_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_26_address0),
    .ce0(layer2_weights_26_ce0),
    .q0(layer2_weights_26_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_27_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_27_address0),
    .ce0(layer2_weights_27_ce0),
    .q0(layer2_weights_27_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_28_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_28_address0),
    .ce0(layer2_weights_28_ce0),
    .q0(layer2_weights_28_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_29_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_29_address0),
    .ce0(layer2_weights_29_ce0),
    .q0(layer2_weights_29_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_30_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_30_address0),
    .ce0(layer2_weights_30_ce0),
    .q0(layer2_weights_30_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_31_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_31_address0),
    .ce0(layer2_weights_31_ce0),
    .q0(layer2_weights_31_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_32_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_32_address0),
    .ce0(layer2_weights_32_ce0),
    .q0(layer2_weights_32_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_33_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_33_address0),
    .ce0(layer2_weights_33_ce0),
    .q0(layer2_weights_33_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_34_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_34_address0),
    .ce0(layer2_weights_34_ce0),
    .q0(layer2_weights_34_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_35_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_35_address0),
    .ce0(layer2_weights_35_ce0),
    .q0(layer2_weights_35_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_36_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_36_address0),
    .ce0(layer2_weights_36_ce0),
    .q0(layer2_weights_36_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_37_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_37_address0),
    .ce0(layer2_weights_37_ce0),
    .q0(layer2_weights_37_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_38_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_38_address0),
    .ce0(layer2_weights_38_ce0),
    .q0(layer2_weights_38_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_39_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_39_address0),
    .ce0(layer2_weights_39_ce0),
    .q0(layer2_weights_39_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_40_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_40_address0),
    .ce0(layer2_weights_40_ce0),
    .q0(layer2_weights_40_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_41_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_41_address0),
    .ce0(layer2_weights_41_ce0),
    .q0(layer2_weights_41_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_42_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_42_address0),
    .ce0(layer2_weights_42_ce0),
    .q0(layer2_weights_42_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_43_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_43_address0),
    .ce0(layer2_weights_43_ce0),
    .q0(layer2_weights_43_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_44_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_44_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_44_address0),
    .ce0(layer2_weights_44_ce0),
    .q0(layer2_weights_44_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_45_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_45_address0),
    .ce0(layer2_weights_45_ce0),
    .q0(layer2_weights_45_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_46_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_46_address0),
    .ce0(layer2_weights_46_ce0),
    .q0(layer2_weights_46_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_48_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_48_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_48_address0),
    .ce0(layer2_weights_48_ce0),
    .q0(layer2_weights_48_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_49_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_49_address0),
    .ce0(layer2_weights_49_ce0),
    .q0(layer2_weights_49_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_50_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_50_address0),
    .ce0(layer2_weights_50_ce0),
    .q0(layer2_weights_50_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_51_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_51_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_51_address0),
    .ce0(layer2_weights_51_ce0),
    .q0(layer2_weights_51_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_52_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_52_address0),
    .ce0(layer2_weights_52_ce0),
    .q0(layer2_weights_52_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_53_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_53_address0),
    .ce0(layer2_weights_53_ce0),
    .q0(layer2_weights_53_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_54_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_54_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_54_address0),
    .ce0(layer2_weights_54_ce0),
    .q0(layer2_weights_54_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_55_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_55_address0),
    .ce0(layer2_weights_55_ce0),
    .q0(layer2_weights_55_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_56_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_56_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_56_address0),
    .ce0(layer2_weights_56_ce0),
    .q0(layer2_weights_56_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_57_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_57_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_57_address0),
    .ce0(layer2_weights_57_ce0),
    .q0(layer2_weights_57_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_58_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_58_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_58_address0),
    .ce0(layer2_weights_58_ce0),
    .q0(layer2_weights_58_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_59_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_59_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_59_address0),
    .ce0(layer2_weights_59_ce0),
    .q0(layer2_weights_59_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_61_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_61_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_61_address0),
    .ce0(layer2_weights_61_ce0),
    .q0(layer2_weights_61_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_62_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_62_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_62_address0),
    .ce0(layer2_weights_62_ce0),
    .q0(layer2_weights_62_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_weights_63_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_weights_63_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_weights_63_address0),
    .ce0(layer2_weights_63_ce0),
    .q0(layer2_weights_63_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_70_3_layer2_bias_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
layer2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer2_bias_address0),
    .ce0(layer2_bias_ce0),
    .q0(layer2_bias_q0)
);

neural_network_mul_11s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_11s_16s_24_1_1_U195(
    .din0(layer2_weights_0_load_reg_3952),
    .din1(mul_ln75_fu_1778_p1),
    .dout(mul_ln75_fu_1778_p2)
);

neural_network_mac_muladd_7s_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7s_16s_24s_24_4_1_U196(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_1_q0),
    .din1(grp_fu_3074_p1),
    .din2(grp_fu_3074_p2),
    .ce(1'b1),
    .dout(grp_fu_3074_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U197(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_2_q0),
    .din1(grp_fu_3082_p1),
    .din2(grp_fu_3082_p2),
    .ce(1'b1),
    .dout(grp_fu_3082_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U198(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_3_q0),
    .din1(grp_fu_3090_p1),
    .din2(grp_fu_3090_p2),
    .ce(1'b1),
    .dout(grp_fu_3090_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U199(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_4_q0),
    .din1(grp_fu_3098_p1),
    .din2(grp_fu_3098_p2),
    .ce(1'b1),
    .dout(grp_fu_3098_p3)
);

neural_network_mac_muladd_8s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_16s_24ns_24_4_1_U200(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_5_q0),
    .din1(grp_fu_3106_p1),
    .din2(grp_fu_3106_p2),
    .ce(1'b1),
    .dout(grp_fu_3106_p3)
);

neural_network_mac_muladd_9s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9s_16s_24ns_24_4_1_U201(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_6_q0),
    .din1(grp_fu_3114_p1),
    .din2(grp_fu_3114_p2),
    .ce(1'b1),
    .dout(grp_fu_3114_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U202(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_7_q0),
    .din1(grp_fu_3122_p1),
    .din2(grp_fu_3122_p2),
    .ce(1'b1),
    .dout(grp_fu_3122_p3)
);

neural_network_mac_muladd_11ns_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11ns_16s_24ns_24_4_1_U203(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3130_p0),
    .din1(grp_fu_3130_p1),
    .din2(grp_fu_3130_p2),
    .ce(1'b1),
    .dout(grp_fu_3130_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U204(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_9_q0),
    .din1(grp_fu_3138_p1),
    .din2(grp_fu_3138_p2),
    .ce(1'b1),
    .dout(grp_fu_3138_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U205(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_12_q0),
    .din1(grp_fu_3146_p1),
    .din2(grp_fu_3146_p2),
    .ce(1'b1),
    .dout(grp_fu_3146_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U206(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_13_q0),
    .din1(grp_fu_3154_p1),
    .din2(grp_fu_3154_p2),
    .ce(1'b1),
    .dout(grp_fu_3154_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U207(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_14_q0),
    .din1(grp_fu_3162_p1),
    .din2(grp_fu_3162_p2),
    .ce(1'b1),
    .dout(grp_fu_3162_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U208(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_15_q0),
    .din1(grp_fu_3170_p1),
    .din2(grp_fu_3170_p2),
    .ce(1'b1),
    .dout(grp_fu_3170_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U209(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_16_q0),
    .din1(grp_fu_3178_p1),
    .din2(grp_fu_3178_p2),
    .ce(1'b1),
    .dout(grp_fu_3178_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U210(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_18_q0),
    .din1(grp_fu_3186_p1),
    .din2(grp_fu_3186_p2),
    .ce(1'b1),
    .dout(grp_fu_3186_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U211(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_20_q0),
    .din1(grp_fu_3194_p1),
    .din2(grp_fu_3194_p2),
    .ce(1'b1),
    .dout(grp_fu_3194_p3)
);

neural_network_mac_muladd_10ns_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10ns_16s_24ns_24_4_1_U212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3202_p0),
    .din1(grp_fu_3202_p1),
    .din2(grp_fu_3202_p2),
    .ce(1'b1),
    .dout(grp_fu_3202_p3)
);

neural_network_mac_muladd_6s_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_6s_16s_24s_24_4_1_U213(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_22_q0),
    .din1(grp_fu_3210_p1),
    .din2(grp_fu_3210_p2),
    .ce(1'b1),
    .dout(grp_fu_3210_p3)
);

neural_network_mac_muladd_11ns_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11ns_16s_24ns_24_4_1_U214(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3218_p0),
    .din1(grp_fu_3218_p1),
    .din2(grp_fu_3218_p2),
    .ce(1'b1),
    .dout(grp_fu_3218_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U215(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_25_q0),
    .din1(grp_fu_3226_p1),
    .din2(grp_fu_3226_p2),
    .ce(1'b1),
    .dout(grp_fu_3226_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U216(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_26_q0),
    .din1(grp_fu_3234_p1),
    .din2(grp_fu_3234_p2),
    .ce(1'b1),
    .dout(grp_fu_3234_p3)
);

neural_network_mac_muladd_8s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_16s_24ns_24_4_1_U217(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_27_q0),
    .din1(grp_fu_3242_p1),
    .din2(grp_fu_3242_p2),
    .ce(1'b1),
    .dout(grp_fu_3242_p3)
);

neural_network_mac_muladd_7s_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7s_16s_24s_24_4_1_U218(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_28_q0),
    .din1(grp_fu_3250_p1),
    .din2(grp_fu_3250_p2),
    .ce(1'b1),
    .dout(grp_fu_3250_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U219(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_29_q0),
    .din1(grp_fu_3258_p1),
    .din2(grp_fu_3258_p2),
    .ce(1'b1),
    .dout(grp_fu_3258_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U220(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_30_q0),
    .din1(grp_fu_3266_p1),
    .din2(grp_fu_3266_p2),
    .ce(1'b1),
    .dout(grp_fu_3266_p3)
);

neural_network_mac_muladd_8s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_16s_24ns_24_4_1_U221(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_31_q0),
    .din1(grp_fu_3274_p1),
    .din2(grp_fu_3274_p2),
    .ce(1'b1),
    .dout(grp_fu_3274_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U222(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_32_q0),
    .din1(grp_fu_3282_p1),
    .din2(grp_fu_3282_p2),
    .ce(1'b1),
    .dout(grp_fu_3282_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U223(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_33_q0),
    .din1(grp_fu_3290_p1),
    .din2(grp_fu_3290_p2),
    .ce(1'b1),
    .dout(grp_fu_3290_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U224(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_34_q0),
    .din1(grp_fu_3298_p1),
    .din2(grp_fu_3298_p2),
    .ce(1'b1),
    .dout(grp_fu_3298_p3)
);

neural_network_mac_muladd_10ns_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10ns_16s_24ns_24_4_1_U225(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3306_p0),
    .din1(grp_fu_3306_p1),
    .din2(grp_fu_3306_p2),
    .ce(1'b1),
    .dout(grp_fu_3306_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U226(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_36_q0),
    .din1(grp_fu_3314_p1),
    .din2(grp_fu_3314_p2),
    .ce(1'b1),
    .dout(grp_fu_3314_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U227(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_37_q0),
    .din1(grp_fu_3322_p1),
    .din2(grp_fu_3322_p2),
    .ce(1'b1),
    .dout(grp_fu_3322_p3)
);

neural_network_mac_muladd_5s_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_5s_16s_24s_24_4_1_U228(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_38_q0),
    .din1(grp_fu_3330_p1),
    .din2(grp_fu_3330_p2),
    .ce(1'b1),
    .dout(grp_fu_3330_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U229(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_39_q0),
    .din1(grp_fu_3338_p1),
    .din2(grp_fu_3338_p2),
    .ce(1'b1),
    .dout(grp_fu_3338_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U230(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_40_q0),
    .din1(grp_fu_3346_p1),
    .din2(grp_fu_3346_p2),
    .ce(1'b1),
    .dout(grp_fu_3346_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U231(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_41_q0),
    .din1(grp_fu_3354_p1),
    .din2(grp_fu_3354_p2),
    .ce(1'b1),
    .dout(grp_fu_3354_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U232(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_42_q0),
    .din1(grp_fu_3362_p1),
    .din2(grp_fu_3362_p2),
    .ce(1'b1),
    .dout(grp_fu_3362_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U233(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_43_q0),
    .din1(grp_fu_3370_p1),
    .din2(grp_fu_3370_p2),
    .ce(1'b1),
    .dout(grp_fu_3370_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U234(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_44_q0),
    .din1(grp_fu_3378_p1),
    .din2(grp_fu_3378_p2),
    .ce(1'b1),
    .dout(grp_fu_3378_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U235(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_45_q0),
    .din1(grp_fu_3386_p1),
    .din2(grp_fu_3386_p2),
    .ce(1'b1),
    .dout(grp_fu_3386_p3)
);

neural_network_mac_muladd_9ns_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9ns_16s_24ns_24_4_1_U236(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3394_p0),
    .din1(grp_fu_3394_p1),
    .din2(grp_fu_3394_p2),
    .ce(1'b1),
    .dout(grp_fu_3394_p3)
);

neural_network_mac_muladd_9ns_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_9ns_16s_24ns_24_4_1_U237(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3402_p0),
    .din1(grp_fu_3402_p1),
    .din2(grp_fu_3402_p2),
    .ce(1'b1),
    .dout(grp_fu_3402_p3)
);

neural_network_mac_muladd_8s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_16s_24ns_24_4_1_U238(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_49_q0),
    .din1(grp_fu_3410_p1),
    .din2(grp_fu_3410_p2),
    .ce(1'b1),
    .dout(grp_fu_3410_p3)
);

neural_network_mac_muladd_7ns_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7ns_16s_24s_24_4_1_U239(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3418_p0),
    .din1(grp_fu_3418_p1),
    .din2(grp_fu_3418_p2),
    .ce(1'b1),
    .dout(grp_fu_3418_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U240(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_51_q0),
    .din1(grp_fu_3426_p1),
    .din2(grp_fu_3426_p2),
    .ce(1'b1),
    .dout(grp_fu_3426_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_52_q0),
    .din1(grp_fu_3434_p1),
    .din2(grp_fu_3434_p2),
    .ce(1'b1),
    .dout(grp_fu_3434_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U242(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_53_q0),
    .din1(grp_fu_3442_p1),
    .din2(grp_fu_3442_p2),
    .ce(1'b1),
    .dout(grp_fu_3442_p3)
);

neural_network_mac_muladd_8s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_8s_16s_24ns_24_4_1_U243(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_54_q0),
    .din1(grp_fu_3450_p1),
    .din2(grp_fu_3450_p2),
    .ce(1'b1),
    .dout(grp_fu_3450_p3)
);

neural_network_mac_muladd_7ns_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_7ns_16s_24s_24_4_1_U244(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3458_p0),
    .din1(grp_fu_3458_p1),
    .din2(grp_fu_3458_p2),
    .ce(1'b1),
    .dout(grp_fu_3458_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U245(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_56_q0),
    .din1(grp_fu_3466_p1),
    .din2(grp_fu_3466_p2),
    .ce(1'b1),
    .dout(grp_fu_3466_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_57_q0),
    .din1(grp_fu_3474_p1),
    .din2(grp_fu_3474_p2),
    .ce(1'b1),
    .dout(grp_fu_3474_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U247(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_58_load_reg_4742),
    .din1(grp_fu_3482_p1),
    .din2(grp_fu_3482_p2),
    .ce(1'b1),
    .dout(grp_fu_3482_p3)
);

neural_network_mac_muladd_5ns_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_5ns_16s_24s_24_4_1_U248(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3490_p0),
    .din1(grp_fu_3490_p1),
    .din2(grp_fu_3490_p2),
    .ce(1'b1),
    .dout(grp_fu_3490_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U249(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_61_load_reg_4752_pp0_iter53_reg),
    .din1(grp_fu_3498_p1),
    .din2(grp_fu_3498_p2),
    .ce(1'b1),
    .dout(grp_fu_3498_p3)
);

neural_network_mac_muladd_5ns_16s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_5ns_16s_24s_24_4_1_U250(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3506_p0),
    .din1(grp_fu_3506_p1),
    .din2(grp_fu_3506_p2),
    .ce(1'b1),
    .dout(grp_fu_3506_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer2_weights_63_load_reg_4762_pp0_iter55_reg),
    .din1(grp_fu_3514_p1),
    .din2(grp_fu_3514_p2),
    .ce(1'b1),
    .dout(grp_fu_3514_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter58_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln70_fu_1748_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_302 <= add_ln70_fu_1754_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_302 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_1_reg_3874_pp0_iter10_reg <= i_1_reg_3874_pp0_iter9_reg;
        i_1_reg_3874_pp0_iter11_reg <= i_1_reg_3874_pp0_iter10_reg;
        i_1_reg_3874_pp0_iter12_reg <= i_1_reg_3874_pp0_iter11_reg;
        i_1_reg_3874_pp0_iter13_reg <= i_1_reg_3874_pp0_iter12_reg;
        i_1_reg_3874_pp0_iter14_reg <= i_1_reg_3874_pp0_iter13_reg;
        i_1_reg_3874_pp0_iter15_reg <= i_1_reg_3874_pp0_iter14_reg;
        i_1_reg_3874_pp0_iter16_reg <= i_1_reg_3874_pp0_iter15_reg;
        i_1_reg_3874_pp0_iter17_reg <= i_1_reg_3874_pp0_iter16_reg;
        i_1_reg_3874_pp0_iter18_reg <= i_1_reg_3874_pp0_iter17_reg;
        i_1_reg_3874_pp0_iter19_reg <= i_1_reg_3874_pp0_iter18_reg;
        i_1_reg_3874_pp0_iter20_reg <= i_1_reg_3874_pp0_iter19_reg;
        i_1_reg_3874_pp0_iter21_reg <= i_1_reg_3874_pp0_iter20_reg;
        i_1_reg_3874_pp0_iter22_reg <= i_1_reg_3874_pp0_iter21_reg;
        i_1_reg_3874_pp0_iter23_reg <= i_1_reg_3874_pp0_iter22_reg;
        i_1_reg_3874_pp0_iter24_reg <= i_1_reg_3874_pp0_iter23_reg;
        i_1_reg_3874_pp0_iter25_reg <= i_1_reg_3874_pp0_iter24_reg;
        i_1_reg_3874_pp0_iter26_reg <= i_1_reg_3874_pp0_iter25_reg;
        i_1_reg_3874_pp0_iter27_reg <= i_1_reg_3874_pp0_iter26_reg;
        i_1_reg_3874_pp0_iter28_reg <= i_1_reg_3874_pp0_iter27_reg;
        i_1_reg_3874_pp0_iter29_reg <= i_1_reg_3874_pp0_iter28_reg;
        i_1_reg_3874_pp0_iter2_reg <= i_1_reg_3874_pp0_iter1_reg;
        i_1_reg_3874_pp0_iter30_reg <= i_1_reg_3874_pp0_iter29_reg;
        i_1_reg_3874_pp0_iter31_reg <= i_1_reg_3874_pp0_iter30_reg;
        i_1_reg_3874_pp0_iter32_reg <= i_1_reg_3874_pp0_iter31_reg;
        i_1_reg_3874_pp0_iter33_reg <= i_1_reg_3874_pp0_iter32_reg;
        i_1_reg_3874_pp0_iter34_reg <= i_1_reg_3874_pp0_iter33_reg;
        i_1_reg_3874_pp0_iter35_reg <= i_1_reg_3874_pp0_iter34_reg;
        i_1_reg_3874_pp0_iter36_reg <= i_1_reg_3874_pp0_iter35_reg;
        i_1_reg_3874_pp0_iter37_reg <= i_1_reg_3874_pp0_iter36_reg;
        i_1_reg_3874_pp0_iter38_reg <= i_1_reg_3874_pp0_iter37_reg;
        i_1_reg_3874_pp0_iter39_reg <= i_1_reg_3874_pp0_iter38_reg;
        i_1_reg_3874_pp0_iter3_reg <= i_1_reg_3874_pp0_iter2_reg;
        i_1_reg_3874_pp0_iter40_reg <= i_1_reg_3874_pp0_iter39_reg;
        i_1_reg_3874_pp0_iter41_reg <= i_1_reg_3874_pp0_iter40_reg;
        i_1_reg_3874_pp0_iter42_reg <= i_1_reg_3874_pp0_iter41_reg;
        i_1_reg_3874_pp0_iter43_reg <= i_1_reg_3874_pp0_iter42_reg;
        i_1_reg_3874_pp0_iter44_reg <= i_1_reg_3874_pp0_iter43_reg;
        i_1_reg_3874_pp0_iter45_reg <= i_1_reg_3874_pp0_iter44_reg;
        i_1_reg_3874_pp0_iter46_reg <= i_1_reg_3874_pp0_iter45_reg;
        i_1_reg_3874_pp0_iter47_reg <= i_1_reg_3874_pp0_iter46_reg;
        i_1_reg_3874_pp0_iter48_reg <= i_1_reg_3874_pp0_iter47_reg;
        i_1_reg_3874_pp0_iter49_reg <= i_1_reg_3874_pp0_iter48_reg;
        i_1_reg_3874_pp0_iter4_reg <= i_1_reg_3874_pp0_iter3_reg;
        i_1_reg_3874_pp0_iter50_reg <= i_1_reg_3874_pp0_iter49_reg;
        i_1_reg_3874_pp0_iter51_reg <= i_1_reg_3874_pp0_iter50_reg;
        i_1_reg_3874_pp0_iter52_reg <= i_1_reg_3874_pp0_iter51_reg;
        i_1_reg_3874_pp0_iter53_reg <= i_1_reg_3874_pp0_iter52_reg;
        i_1_reg_3874_pp0_iter54_reg <= i_1_reg_3874_pp0_iter53_reg;
        i_1_reg_3874_pp0_iter55_reg <= i_1_reg_3874_pp0_iter54_reg;
        i_1_reg_3874_pp0_iter56_reg <= i_1_reg_3874_pp0_iter55_reg;
        i_1_reg_3874_pp0_iter57_reg <= i_1_reg_3874_pp0_iter56_reg;
        i_1_reg_3874_pp0_iter58_reg <= i_1_reg_3874_pp0_iter57_reg;
        i_1_reg_3874_pp0_iter5_reg <= i_1_reg_3874_pp0_iter4_reg;
        i_1_reg_3874_pp0_iter6_reg <= i_1_reg_3874_pp0_iter5_reg;
        i_1_reg_3874_pp0_iter7_reg <= i_1_reg_3874_pp0_iter6_reg;
        i_1_reg_3874_pp0_iter8_reg <= i_1_reg_3874_pp0_iter7_reg;
        i_1_reg_3874_pp0_iter9_reg <= i_1_reg_3874_pp0_iter8_reg;
        icmp_ln70_reg_3878_pp0_iter10_reg <= icmp_ln70_reg_3878_pp0_iter9_reg;
        icmp_ln70_reg_3878_pp0_iter11_reg <= icmp_ln70_reg_3878_pp0_iter10_reg;
        icmp_ln70_reg_3878_pp0_iter12_reg <= icmp_ln70_reg_3878_pp0_iter11_reg;
        icmp_ln70_reg_3878_pp0_iter13_reg <= icmp_ln70_reg_3878_pp0_iter12_reg;
        icmp_ln70_reg_3878_pp0_iter14_reg <= icmp_ln70_reg_3878_pp0_iter13_reg;
        icmp_ln70_reg_3878_pp0_iter15_reg <= icmp_ln70_reg_3878_pp0_iter14_reg;
        icmp_ln70_reg_3878_pp0_iter16_reg <= icmp_ln70_reg_3878_pp0_iter15_reg;
        icmp_ln70_reg_3878_pp0_iter17_reg <= icmp_ln70_reg_3878_pp0_iter16_reg;
        icmp_ln70_reg_3878_pp0_iter18_reg <= icmp_ln70_reg_3878_pp0_iter17_reg;
        icmp_ln70_reg_3878_pp0_iter19_reg <= icmp_ln70_reg_3878_pp0_iter18_reg;
        icmp_ln70_reg_3878_pp0_iter20_reg <= icmp_ln70_reg_3878_pp0_iter19_reg;
        icmp_ln70_reg_3878_pp0_iter21_reg <= icmp_ln70_reg_3878_pp0_iter20_reg;
        icmp_ln70_reg_3878_pp0_iter22_reg <= icmp_ln70_reg_3878_pp0_iter21_reg;
        icmp_ln70_reg_3878_pp0_iter23_reg <= icmp_ln70_reg_3878_pp0_iter22_reg;
        icmp_ln70_reg_3878_pp0_iter24_reg <= icmp_ln70_reg_3878_pp0_iter23_reg;
        icmp_ln70_reg_3878_pp0_iter25_reg <= icmp_ln70_reg_3878_pp0_iter24_reg;
        icmp_ln70_reg_3878_pp0_iter26_reg <= icmp_ln70_reg_3878_pp0_iter25_reg;
        icmp_ln70_reg_3878_pp0_iter27_reg <= icmp_ln70_reg_3878_pp0_iter26_reg;
        icmp_ln70_reg_3878_pp0_iter28_reg <= icmp_ln70_reg_3878_pp0_iter27_reg;
        icmp_ln70_reg_3878_pp0_iter29_reg <= icmp_ln70_reg_3878_pp0_iter28_reg;
        icmp_ln70_reg_3878_pp0_iter2_reg <= icmp_ln70_reg_3878_pp0_iter1_reg;
        icmp_ln70_reg_3878_pp0_iter30_reg <= icmp_ln70_reg_3878_pp0_iter29_reg;
        icmp_ln70_reg_3878_pp0_iter31_reg <= icmp_ln70_reg_3878_pp0_iter30_reg;
        icmp_ln70_reg_3878_pp0_iter32_reg <= icmp_ln70_reg_3878_pp0_iter31_reg;
        icmp_ln70_reg_3878_pp0_iter33_reg <= icmp_ln70_reg_3878_pp0_iter32_reg;
        icmp_ln70_reg_3878_pp0_iter34_reg <= icmp_ln70_reg_3878_pp0_iter33_reg;
        icmp_ln70_reg_3878_pp0_iter35_reg <= icmp_ln70_reg_3878_pp0_iter34_reg;
        icmp_ln70_reg_3878_pp0_iter36_reg <= icmp_ln70_reg_3878_pp0_iter35_reg;
        icmp_ln70_reg_3878_pp0_iter37_reg <= icmp_ln70_reg_3878_pp0_iter36_reg;
        icmp_ln70_reg_3878_pp0_iter38_reg <= icmp_ln70_reg_3878_pp0_iter37_reg;
        icmp_ln70_reg_3878_pp0_iter39_reg <= icmp_ln70_reg_3878_pp0_iter38_reg;
        icmp_ln70_reg_3878_pp0_iter3_reg <= icmp_ln70_reg_3878_pp0_iter2_reg;
        icmp_ln70_reg_3878_pp0_iter40_reg <= icmp_ln70_reg_3878_pp0_iter39_reg;
        icmp_ln70_reg_3878_pp0_iter41_reg <= icmp_ln70_reg_3878_pp0_iter40_reg;
        icmp_ln70_reg_3878_pp0_iter42_reg <= icmp_ln70_reg_3878_pp0_iter41_reg;
        icmp_ln70_reg_3878_pp0_iter43_reg <= icmp_ln70_reg_3878_pp0_iter42_reg;
        icmp_ln70_reg_3878_pp0_iter44_reg <= icmp_ln70_reg_3878_pp0_iter43_reg;
        icmp_ln70_reg_3878_pp0_iter45_reg <= icmp_ln70_reg_3878_pp0_iter44_reg;
        icmp_ln70_reg_3878_pp0_iter46_reg <= icmp_ln70_reg_3878_pp0_iter45_reg;
        icmp_ln70_reg_3878_pp0_iter47_reg <= icmp_ln70_reg_3878_pp0_iter46_reg;
        icmp_ln70_reg_3878_pp0_iter48_reg <= icmp_ln70_reg_3878_pp0_iter47_reg;
        icmp_ln70_reg_3878_pp0_iter49_reg <= icmp_ln70_reg_3878_pp0_iter48_reg;
        icmp_ln70_reg_3878_pp0_iter4_reg <= icmp_ln70_reg_3878_pp0_iter3_reg;
        icmp_ln70_reg_3878_pp0_iter50_reg <= icmp_ln70_reg_3878_pp0_iter49_reg;
        icmp_ln70_reg_3878_pp0_iter51_reg <= icmp_ln70_reg_3878_pp0_iter50_reg;
        icmp_ln70_reg_3878_pp0_iter52_reg <= icmp_ln70_reg_3878_pp0_iter51_reg;
        icmp_ln70_reg_3878_pp0_iter53_reg <= icmp_ln70_reg_3878_pp0_iter52_reg;
        icmp_ln70_reg_3878_pp0_iter54_reg <= icmp_ln70_reg_3878_pp0_iter53_reg;
        icmp_ln70_reg_3878_pp0_iter55_reg <= icmp_ln70_reg_3878_pp0_iter54_reg;
        icmp_ln70_reg_3878_pp0_iter56_reg <= icmp_ln70_reg_3878_pp0_iter55_reg;
        icmp_ln70_reg_3878_pp0_iter57_reg <= icmp_ln70_reg_3878_pp0_iter56_reg;
        icmp_ln70_reg_3878_pp0_iter5_reg <= icmp_ln70_reg_3878_pp0_iter4_reg;
        icmp_ln70_reg_3878_pp0_iter6_reg <= icmp_ln70_reg_3878_pp0_iter5_reg;
        icmp_ln70_reg_3878_pp0_iter7_reg <= icmp_ln70_reg_3878_pp0_iter6_reg;
        icmp_ln70_reg_3878_pp0_iter8_reg <= icmp_ln70_reg_3878_pp0_iter7_reg;
        icmp_ln70_reg_3878_pp0_iter9_reg <= icmp_ln70_reg_3878_pp0_iter8_reg;
        layer2_bias_load_reg_4767 <= layer2_bias_q0;
        layer2_bias_load_reg_4767_pp0_iter52_reg <= layer2_bias_load_reg_4767;
        layer2_bias_load_reg_4767_pp0_iter53_reg <= layer2_bias_load_reg_4767_pp0_iter52_reg;
        layer2_bias_load_reg_4767_pp0_iter54_reg <= layer2_bias_load_reg_4767_pp0_iter53_reg;
        layer2_bias_load_reg_4767_pp0_iter55_reg <= layer2_bias_load_reg_4767_pp0_iter54_reg;
        layer2_bias_load_reg_4767_pp0_iter56_reg <= layer2_bias_load_reg_4767_pp0_iter55_reg;
        layer2_bias_load_reg_4767_pp0_iter57_reg <= layer2_bias_load_reg_4767_pp0_iter56_reg;
        layer2_bias_load_reg_4767_pp0_iter58_reg <= layer2_bias_load_reg_4767_pp0_iter57_reg;
        layer2_weights_58_load_reg_4742 <= layer2_weights_58_q0;
        layer2_weights_59_load_reg_4747 <= layer2_weights_59_q0;
        layer2_weights_59_load_reg_4747_pp0_iter52_reg <= layer2_weights_59_load_reg_4747;
        layer2_weights_61_load_reg_4752 <= layer2_weights_61_q0;
        layer2_weights_61_load_reg_4752_pp0_iter52_reg <= layer2_weights_61_load_reg_4752;
        layer2_weights_61_load_reg_4752_pp0_iter53_reg <= layer2_weights_61_load_reg_4752_pp0_iter52_reg;
        layer2_weights_62_load_reg_4757 <= layer2_weights_62_q0;
        layer2_weights_62_load_reg_4757_pp0_iter52_reg <= layer2_weights_62_load_reg_4757;
        layer2_weights_62_load_reg_4757_pp0_iter53_reg <= layer2_weights_62_load_reg_4757_pp0_iter52_reg;
        layer2_weights_62_load_reg_4757_pp0_iter54_reg <= layer2_weights_62_load_reg_4757_pp0_iter53_reg;
        layer2_weights_63_load_reg_4762 <= layer2_weights_63_q0;
        layer2_weights_63_load_reg_4762_pp0_iter52_reg <= layer2_weights_63_load_reg_4762;
        layer2_weights_63_load_reg_4762_pp0_iter53_reg <= layer2_weights_63_load_reg_4762_pp0_iter52_reg;
        layer2_weights_63_load_reg_4762_pp0_iter54_reg <= layer2_weights_63_load_reg_4762_pp0_iter53_reg;
        layer2_weights_63_load_reg_4762_pp0_iter55_reg <= layer2_weights_63_load_reg_4762_pp0_iter54_reg;
        tmp_s_reg_3967 <= {{mul_ln75_fu_1778_p2[23:8]}};
        zext_ln70_reg_3882_pp0_iter10_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter9_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter11_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter10_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter12_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter11_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter13_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter12_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter14_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter13_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter15_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter14_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter16_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter15_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter17_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter16_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter18_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter17_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter19_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter18_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter20_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter19_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter21_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter20_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter22_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter21_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter23_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter22_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter24_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter23_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter25_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter24_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter26_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter25_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter27_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter26_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter28_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter27_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter29_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter28_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter2_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter1_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter30_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter29_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter31_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter30_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter32_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter31_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter33_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter32_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter34_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter33_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter35_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter34_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter36_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter35_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter37_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter36_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter38_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter37_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter39_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter38_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter3_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter2_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter40_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter39_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter41_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter40_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter42_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter41_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter43_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter42_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter44_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter43_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter45_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter44_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter46_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter45_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter47_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter46_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter48_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter47_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter49_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter48_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter4_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter3_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter5_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter4_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter6_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter5_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter7_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter6_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter8_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter7_reg[3 : 0];
        zext_ln70_reg_3882_pp0_iter9_reg[3 : 0] <= zext_ln70_reg_3882_pp0_iter8_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_3874 <= ap_sig_allocacmp_i_1;
        i_1_reg_3874_pp0_iter1_reg <= i_1_reg_3874;
        icmp_ln70_reg_3878 <= icmp_ln70_fu_1748_p2;
        icmp_ln70_reg_3878_pp0_iter1_reg <= icmp_ln70_reg_3878;
        layer1_output_18_cast_cast_reg_3779 <= layer1_output_18_cast_cast_fu_1664_p1;
        layer1_output_1_cast_cast_reg_3864 <= layer1_output_1_cast_cast_fu_1732_p1;
        layer1_output_22_cast_cast_reg_3759 <= layer1_output_22_cast_cast_fu_1648_p1;
        layer1_output_23_cast_cast_reg_3754 <= layer1_output_23_cast_cast_fu_1644_p1;
        layer1_output_26_cast_cast_reg_3739 <= layer1_output_26_cast_cast_fu_1632_p1;
        layer1_output_33_cast_cast_reg_3704 <= layer1_output_33_cast_cast_fu_1604_p1;
        layer1_output_43_cast_cast_reg_3654 <= layer1_output_43_cast_cast_fu_1564_p1;
        layer1_output_44_cast_cast_reg_3649 <= layer1_output_44_cast_cast_fu_1560_p1;
        layer1_output_48_cast_cast_reg_3629 <= layer1_output_48_cast_cast_fu_1544_p1;
        layer1_output_49_cast_cast_reg_3624 <= layer1_output_49_cast_cast_fu_1540_p1;
        layer1_output_53_cast_cast_reg_3604 <= layer1_output_53_cast_cast_fu_1524_p1;
        layer1_output_55_cast_cast_reg_3594 <= layer1_output_55_cast_cast_fu_1516_p1;
        layer1_output_5_cast_cast_reg_3844 <= layer1_output_5_cast_cast_fu_1716_p1;
        layer2_weights_0_load_reg_3952 <= layer2_weights_0_q0;
        sext_ln75_10_cast_reg_3809 <= sext_ln75_10_cast_fu_1688_p1;
        sext_ln75_11_cast_reg_3804 <= sext_ln75_11_cast_fu_1684_p1;
        sext_ln75_12_cast_reg_3799 <= sext_ln75_12_cast_fu_1680_p1;
        sext_ln75_13_cast_reg_3794 <= sext_ln75_13_cast_fu_1676_p1;
        sext_ln75_14_cast_reg_3789 <= sext_ln75_14_cast_fu_1672_p1;
        sext_ln75_15_cast_reg_3784 <= sext_ln75_15_cast_fu_1668_p1;
        sext_ln75_16_cast_reg_3774 <= sext_ln75_16_cast_fu_1660_p1;
        sext_ln75_17_cast_reg_3769 <= sext_ln75_17_cast_fu_1656_p1;
        sext_ln75_18_cast_reg_3764 <= sext_ln75_18_cast_fu_1652_p1;
        sext_ln75_19_cast_reg_3749 <= sext_ln75_19_cast_fu_1640_p1;
        sext_ln75_1_cast_reg_3859 <= sext_ln75_1_cast_fu_1728_p1;
        sext_ln75_20_cast_reg_3744 <= sext_ln75_20_cast_fu_1636_p1;
        sext_ln75_21_cast_reg_3734 <= sext_ln75_21_cast_fu_1628_p1;
        sext_ln75_22_cast_reg_3729 <= sext_ln75_22_cast_fu_1624_p1;
        sext_ln75_23_cast_reg_3724 <= sext_ln75_23_cast_fu_1620_p1;
        sext_ln75_24_cast_reg_3719 <= sext_ln75_24_cast_fu_1616_p1;
        sext_ln75_25_cast_reg_3714 <= sext_ln75_25_cast_fu_1612_p1;
        sext_ln75_26_cast_reg_3709 <= sext_ln75_26_cast_fu_1608_p1;
        sext_ln75_27_cast_reg_3699 <= sext_ln75_27_cast_fu_1600_p1;
        sext_ln75_28_cast_reg_3694 <= sext_ln75_28_cast_fu_1596_p1;
        sext_ln75_29_cast_reg_3689 <= sext_ln75_29_cast_fu_1592_p1;
        sext_ln75_2_cast_reg_3854 <= sext_ln75_2_cast_fu_1724_p1;
        sext_ln75_30_cast_reg_3684 <= sext_ln75_30_cast_fu_1588_p1;
        sext_ln75_31_cast_reg_3679 <= sext_ln75_31_cast_fu_1584_p1;
        sext_ln75_32_cast_reg_3674 <= sext_ln75_32_cast_fu_1580_p1;
        sext_ln75_33_cast_reg_3669 <= sext_ln75_33_cast_fu_1576_p1;
        sext_ln75_34_cast_reg_3664 <= sext_ln75_34_cast_fu_1572_p1;
        sext_ln75_35_cast_reg_3659 <= sext_ln75_35_cast_fu_1568_p1;
        sext_ln75_36_cast_reg_3644 <= sext_ln75_36_cast_fu_1556_p1;
        sext_ln75_37_cast_reg_3639 <= sext_ln75_37_cast_fu_1552_p1;
        sext_ln75_38_cast_reg_3634 <= sext_ln75_38_cast_fu_1548_p1;
        sext_ln75_39_cast_reg_3619 <= sext_ln75_39_cast_fu_1536_p1;
        sext_ln75_3_cast_reg_3849 <= sext_ln75_3_cast_fu_1720_p1;
        sext_ln75_40_cast_reg_3614 <= sext_ln75_40_cast_fu_1532_p1;
        sext_ln75_41_cast_reg_3609 <= sext_ln75_41_cast_fu_1528_p1;
        sext_ln75_42_cast_reg_3599 <= sext_ln75_42_cast_fu_1520_p1;
        sext_ln75_43_cast_reg_3589 <= sext_ln75_43_cast_fu_1512_p1;
        sext_ln75_4_cast_reg_3839 <= sext_ln75_4_cast_fu_1712_p1;
        sext_ln75_5_cast_reg_3834 <= sext_ln75_5_cast_fu_1708_p1;
        sext_ln75_6_cast_reg_3829 <= sext_ln75_6_cast_fu_1704_p1;
        sext_ln75_7_cast_reg_3824 <= sext_ln75_7_cast_fu_1700_p1;
        sext_ln75_8_cast_reg_3819 <= sext_ln75_8_cast_fu_1696_p1;
        sext_ln75_9_cast_reg_3814 <= sext_ln75_9_cast_fu_1692_p1;
        sext_ln75_cast_reg_3869 <= sext_ln75_cast_fu_1736_p1;
        zext_ln70_reg_3882_pp0_iter1_reg[3 : 0] <= zext_ln70_reg_3882[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_1_fu_310 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_2_fu_314 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_3_fu_318 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_4_fu_322 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_5_fu_326 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_6_fu_330 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_7_fu_334 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_8_fu_338 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1) & ((i_1_reg_3874_pp0_iter58_reg == 4'd9) | ((i_1_reg_3874_pp0_iter58_reg == 4'd10) | ((i_1_reg_3874_pp0_iter58_reg == 4'd11) | ((i_1_reg_3874_pp0_iter58_reg == 4'd12) | ((i_1_reg_3874_pp0_iter58_reg == 4'd13) | ((i_1_reg_3874_pp0_iter58_reg == 4'd14) | (i_1_reg_3874_pp0_iter58_reg == 4'd15))))))))) begin
        layer2_output_9_fu_342 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_1_reg_3874_pp0_iter58_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1))) begin
        layer2_output_fu_306 <= layer2_output_11_fu_2978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_fu_1748_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln70_reg_3882[3 : 0] <= zext_ln70_fu_1760_p1[3 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln70_fu_1748_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter58_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) 
    & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 
    == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_302;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_bias_ce0 = 1'b1;
    end else begin
        layer2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_1_out_ap_vld = 1'b1;
    end else begin
        layer2_output_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_2_out_ap_vld = 1'b1;
    end else begin
        layer2_output_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_3_out_ap_vld = 1'b1;
    end else begin
        layer2_output_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_4_out_ap_vld = 1'b1;
    end else begin
        layer2_output_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_5_out_ap_vld = 1'b1;
    end else begin
        layer2_output_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_6_out_ap_vld = 1'b1;
    end else begin
        layer2_output_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_7_out_ap_vld = 1'b1;
    end else begin
        layer2_output_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_8_out_ap_vld = 1'b1;
    end else begin
        layer2_output_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_9_out_ap_vld = 1'b1;
    end else begin
        layer2_output_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_3878_pp0_iter57_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_output_out_ap_vld = 1'b1;
    end else begin
        layer2_output_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weights_0_ce0 = 1'b1;
    end else begin
        layer2_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_12_ce0 = 1'b1;
    end else begin
        layer2_weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_13_ce0 = 1'b1;
    end else begin
        layer2_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_14_ce0 = 1'b1;
    end else begin
        layer2_weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_15_ce0 = 1'b1;
    end else begin
        layer2_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_16_ce0 = 1'b1;
    end else begin
        layer2_weights_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_18_ce0 = 1'b1;
    end else begin
        layer2_weights_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weights_1_ce0 = 1'b1;
    end else begin
        layer2_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_20_ce0 = 1'b1;
    end else begin
        layer2_weights_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_21_ce0 = 1'b1;
    end else begin
        layer2_weights_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_22_ce0 = 1'b1;
    end else begin
        layer2_weights_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_23_ce0 = 1'b1;
    end else begin
        layer2_weights_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_25_ce0 = 1'b1;
    end else begin
        layer2_weights_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_26_ce0 = 1'b1;
    end else begin
        layer2_weights_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_27_ce0 = 1'b1;
    end else begin
        layer2_weights_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_28_ce0 = 1'b1;
    end else begin
        layer2_weights_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_29_ce0 = 1'b1;
    end else begin
        layer2_weights_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_weights_2_ce0 = 1'b1;
    end else begin
        layer2_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_30_ce0 = 1'b1;
    end else begin
        layer2_weights_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_31_ce0 = 1'b1;
    end else begin
        layer2_weights_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_32_ce0 = 1'b1;
    end else begin
        layer2_weights_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        layer2_weights_33_ce0 = 1'b1;
    end else begin
        layer2_weights_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        layer2_weights_34_ce0 = 1'b1;
    end else begin
        layer2_weights_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        layer2_weights_35_ce0 = 1'b1;
    end else begin
        layer2_weights_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        layer2_weights_36_ce0 = 1'b1;
    end else begin
        layer2_weights_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        layer2_weights_37_ce0 = 1'b1;
    end else begin
        layer2_weights_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        layer2_weights_38_ce0 = 1'b1;
    end else begin
        layer2_weights_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        layer2_weights_39_ce0 = 1'b1;
    end else begin
        layer2_weights_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_weights_3_ce0 = 1'b1;
    end else begin
        layer2_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        layer2_weights_40_ce0 = 1'b1;
    end else begin
        layer2_weights_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        layer2_weights_41_ce0 = 1'b1;
    end else begin
        layer2_weights_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        layer2_weights_42_ce0 = 1'b1;
    end else begin
        layer2_weights_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer2_weights_43_ce0 = 1'b1;
    end else begin
        layer2_weights_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        layer2_weights_44_ce0 = 1'b1;
    end else begin
        layer2_weights_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        layer2_weights_45_ce0 = 1'b1;
    end else begin
        layer2_weights_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        layer2_weights_46_ce0 = 1'b1;
    end else begin
        layer2_weights_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        layer2_weights_48_ce0 = 1'b1;
    end else begin
        layer2_weights_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        layer2_weights_49_ce0 = 1'b1;
    end else begin
        layer2_weights_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_4_ce0 = 1'b1;
    end else begin
        layer2_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        layer2_weights_50_ce0 = 1'b1;
    end else begin
        layer2_weights_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter44 == 1'b1))) begin
        layer2_weights_51_ce0 = 1'b1;
    end else begin
        layer2_weights_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        layer2_weights_52_ce0 = 1'b1;
    end else begin
        layer2_weights_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer2_weights_53_ce0 = 1'b1;
    end else begin
        layer2_weights_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        layer2_weights_54_ce0 = 1'b1;
    end else begin
        layer2_weights_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter48 == 1'b1))) begin
        layer2_weights_55_ce0 = 1'b1;
    end else begin
        layer2_weights_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        layer2_weights_56_ce0 = 1'b1;
    end else begin
        layer2_weights_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_57_ce0 = 1'b1;
    end else begin
        layer2_weights_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_58_ce0 = 1'b1;
    end else begin
        layer2_weights_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_59_ce0 = 1'b1;
    end else begin
        layer2_weights_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_5_ce0 = 1'b1;
    end else begin
        layer2_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_61_ce0 = 1'b1;
    end else begin
        layer2_weights_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_62_ce0 = 1'b1;
    end else begin
        layer2_weights_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        layer2_weights_63_ce0 = 1'b1;
    end else begin
        layer2_weights_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_6_ce0 = 1'b1;
    end else begin
        layer2_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_7_ce0 = 1'b1;
    end else begin
        layer2_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_8_ce0 = 1'b1;
    end else begin
        layer2_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer2_weights_9_ce0 = 1'b1;
    end else begin
        layer2_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln70_fu_1754_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_3074_p1 = layer1_output_1_cast_cast_reg_3864;

assign grp_fu_3074_p2 = {{tmp_s_reg_3967}, {8'd0}};

assign grp_fu_3082_p1 = sext_ln75_1_cast_reg_3859;

assign grp_fu_3082_p2 = {{tmp_1_fu_1808_p4}, {8'd0}};

assign grp_fu_3090_p1 = sext_ln75_2_cast_reg_3854;

assign grp_fu_3090_p2 = {{tmp_2_fu_1829_p4}, {8'd0}};

assign grp_fu_3098_p1 = sext_ln75_3_cast_reg_3849;

assign grp_fu_3098_p2 = {{tmp_3_fu_1850_p4}, {8'd0}};

assign grp_fu_3106_p1 = layer1_output_5_cast_cast_reg_3844;

assign grp_fu_3106_p2 = {{tmp_4_fu_1871_p4}, {8'd0}};

assign grp_fu_3114_p1 = sext_ln75_4_cast_reg_3839;

assign grp_fu_3114_p2 = {{tmp_5_fu_1892_p4}, {8'd0}};

assign grp_fu_3122_p1 = sext_ln75_5_cast_reg_3834;

assign grp_fu_3122_p2 = {{tmp_6_fu_1913_p4}, {8'd0}};

assign grp_fu_3130_p0 = grp_fu_3130_p00;

assign grp_fu_3130_p00 = layer2_weights_8_q0;

assign grp_fu_3130_p1 = sext_ln75_6_cast_reg_3829;

assign grp_fu_3130_p2 = {{tmp_7_fu_1934_p4}, {8'd0}};

assign grp_fu_3138_p1 = sext_ln75_7_cast_reg_3824;

assign grp_fu_3138_p2 = {{tmp_8_fu_1955_p4}, {8'd0}};

assign grp_fu_3146_p1 = sext_ln75_8_cast_reg_3819;

assign grp_fu_3146_p2 = {{tmp_9_fu_1976_p4}, {8'd0}};

assign grp_fu_3154_p1 = sext_ln75_9_cast_reg_3814;

assign grp_fu_3154_p2 = {{tmp_10_fu_1997_p4}, {8'd0}};

assign grp_fu_3162_p1 = sext_ln75_10_cast_reg_3809;

assign grp_fu_3162_p2 = {{tmp_11_fu_2018_p4}, {8'd0}};

assign grp_fu_3170_p1 = sext_ln75_11_cast_reg_3804;

assign grp_fu_3170_p2 = {{tmp_12_fu_2039_p4}, {8'd0}};

assign grp_fu_3178_p1 = sext_ln75_12_cast_reg_3799;

assign grp_fu_3178_p2 = {{tmp_13_fu_2060_p4}, {8'd0}};

assign grp_fu_3186_p1 = sext_ln75_13_cast_reg_3794;

assign grp_fu_3186_p2 = {{tmp_14_fu_2081_p4}, {8'd0}};

assign grp_fu_3194_p1 = sext_ln75_14_cast_reg_3789;

assign grp_fu_3194_p2 = {{tmp_15_fu_2102_p4}, {8'd0}};

assign grp_fu_3202_p0 = grp_fu_3202_p00;

assign grp_fu_3202_p00 = layer2_weights_21_q0;

assign grp_fu_3202_p1 = sext_ln75_15_cast_reg_3784;

assign grp_fu_3202_p2 = {{tmp_16_fu_2123_p4}, {8'd0}};

assign grp_fu_3210_p1 = layer1_output_18_cast_cast_reg_3779;

assign grp_fu_3210_p2 = {{tmp_17_fu_2144_p4}, {8'd0}};

assign grp_fu_3218_p0 = grp_fu_3218_p00;

assign grp_fu_3218_p00 = layer2_weights_23_q0;

assign grp_fu_3218_p1 = sext_ln75_16_cast_reg_3774;

assign grp_fu_3218_p2 = {{tmp_18_fu_2165_p4}, {8'd0}};

assign grp_fu_3226_p1 = sext_ln75_17_cast_reg_3769;

assign grp_fu_3226_p2 = {{tmp_19_fu_2186_p4}, {8'd0}};

assign grp_fu_3234_p1 = sext_ln75_18_cast_reg_3764;

assign grp_fu_3234_p2 = {{tmp_20_fu_2207_p4}, {8'd0}};

assign grp_fu_3242_p1 = layer1_output_22_cast_cast_reg_3759;

assign grp_fu_3242_p2 = {{tmp_21_fu_2228_p4}, {8'd0}};

assign grp_fu_3250_p1 = layer1_output_23_cast_cast_reg_3754;

assign grp_fu_3250_p2 = {{tmp_22_fu_2249_p4}, {8'd0}};

assign grp_fu_3258_p1 = sext_ln75_19_cast_reg_3749;

assign grp_fu_3258_p2 = {{tmp_23_fu_2270_p4}, {8'd0}};

assign grp_fu_3266_p1 = sext_ln75_20_cast_reg_3744;

assign grp_fu_3266_p2 = {{tmp_24_fu_2291_p4}, {8'd0}};

assign grp_fu_3274_p1 = layer1_output_26_cast_cast_reg_3739;

assign grp_fu_3274_p2 = {{tmp_25_fu_2312_p4}, {8'd0}};

assign grp_fu_3282_p1 = sext_ln75_21_cast_reg_3734;

assign grp_fu_3282_p2 = {{tmp_26_fu_2333_p4}, {8'd0}};

assign grp_fu_3290_p1 = sext_ln75_22_cast_reg_3729;

assign grp_fu_3290_p2 = {{tmp_27_fu_2354_p4}, {8'd0}};

assign grp_fu_3298_p1 = sext_ln75_23_cast_reg_3724;

assign grp_fu_3298_p2 = {{tmp_28_fu_2379_p4}, {8'd0}};

assign grp_fu_3306_p0 = grp_fu_3306_p00;

assign grp_fu_3306_p00 = $unsigned(sext_ln75_74_fu_2371_p1);

assign grp_fu_3306_p1 = sext_ln75_24_cast_reg_3719;

assign grp_fu_3306_p2 = {{tmp_29_fu_2400_p4}, {8'd0}};

assign grp_fu_3314_p1 = sext_ln75_25_cast_reg_3714;

assign grp_fu_3314_p2 = {{tmp_30_fu_2421_p4}, {8'd0}};

assign grp_fu_3322_p1 = sext_ln75_26_cast_reg_3709;

assign grp_fu_3322_p2 = {{tmp_31_fu_2442_p4}, {8'd0}};

assign grp_fu_3330_p1 = layer1_output_33_cast_cast_reg_3704;

assign grp_fu_3330_p2 = {{tmp_32_fu_2463_p4}, {8'd0}};

assign grp_fu_3338_p1 = sext_ln75_27_cast_reg_3699;

assign grp_fu_3338_p2 = {{tmp_33_fu_2484_p4}, {8'd0}};

assign grp_fu_3346_p1 = sext_ln75_28_cast_reg_3694;

assign grp_fu_3346_p2 = {{tmp_34_fu_2505_p4}, {8'd0}};

assign grp_fu_3354_p1 = sext_ln75_29_cast_reg_3689;

assign grp_fu_3354_p2 = {{tmp_35_fu_2526_p4}, {8'd0}};

assign grp_fu_3362_p1 = sext_ln75_30_cast_reg_3684;

assign grp_fu_3362_p2 = {{tmp_36_fu_2547_p4}, {8'd0}};

assign grp_fu_3370_p1 = sext_ln75_31_cast_reg_3679;

assign grp_fu_3370_p2 = {{tmp_37_fu_2568_p4}, {8'd0}};

assign grp_fu_3378_p1 = sext_ln75_32_cast_reg_3674;

assign grp_fu_3378_p2 = {{tmp_38_fu_2589_p4}, {8'd0}};

assign grp_fu_3386_p1 = sext_ln75_33_cast_reg_3669;

assign grp_fu_3386_p2 = {{tmp_39_fu_2614_p4}, {8'd0}};

assign grp_fu_3394_p0 = grp_fu_3394_p00;

assign grp_fu_3394_p00 = $unsigned(sext_ln75_86_fu_2606_p1);

assign grp_fu_3394_p1 = sext_ln75_34_cast_reg_3664;

assign grp_fu_3394_p2 = {{tmp_40_fu_2639_p4}, {8'd0}};

assign grp_fu_3402_p0 = grp_fu_3402_p00;

assign grp_fu_3402_p00 = $unsigned(sext_ln75_87_fu_2631_p1);

assign grp_fu_3402_p1 = sext_ln75_35_cast_reg_3659;

assign grp_fu_3402_p2 = {{tmp_41_fu_2660_p4}, {8'd0}};

assign grp_fu_3410_p1 = layer1_output_43_cast_cast_reg_3654;

assign grp_fu_3410_p2 = {{tmp_42_fu_2681_p4}, {8'd0}};

assign grp_fu_3418_p0 = grp_fu_3418_p00;

assign grp_fu_3418_p00 = layer2_weights_50_q0;

assign grp_fu_3418_p1 = layer1_output_44_cast_cast_reg_3649;

assign grp_fu_3418_p2 = {{tmp_43_fu_2702_p4}, {8'd0}};

assign grp_fu_3426_p1 = sext_ln75_36_cast_reg_3644;

assign grp_fu_3426_p2 = {{tmp_44_fu_2723_p4}, {8'd0}};

assign grp_fu_3434_p1 = sext_ln75_37_cast_reg_3639;

assign grp_fu_3434_p2 = {{tmp_45_fu_2744_p4}, {8'd0}};

assign grp_fu_3442_p1 = sext_ln75_38_cast_reg_3634;

assign grp_fu_3442_p2 = {{tmp_46_fu_2765_p4}, {8'd0}};

assign grp_fu_3450_p1 = layer1_output_48_cast_cast_reg_3629;

assign grp_fu_3450_p2 = {{tmp_47_fu_2786_p4}, {8'd0}};

assign grp_fu_3458_p0 = grp_fu_3458_p00;

assign grp_fu_3458_p00 = layer2_weights_55_q0;

assign grp_fu_3458_p1 = layer1_output_49_cast_cast_reg_3624;

assign grp_fu_3458_p2 = {{tmp_48_fu_2807_p4}, {8'd0}};

assign grp_fu_3466_p1 = sext_ln75_39_cast_reg_3619;

assign grp_fu_3466_p2 = {{tmp_49_fu_2828_p4}, {8'd0}};

assign grp_fu_3474_p1 = sext_ln75_40_cast_reg_3614;

assign grp_fu_3474_p2 = {{tmp_50_fu_2848_p4}, {8'd0}};

assign grp_fu_3482_p1 = sext_ln75_41_cast_reg_3609;

assign grp_fu_3482_p2 = {{tmp_51_fu_2872_p4}, {8'd0}};

assign grp_fu_3490_p0 = grp_fu_3490_p00;

assign grp_fu_3490_p00 = $unsigned(sext_ln75_98_fu_2865_p1);

assign grp_fu_3490_p1 = layer1_output_53_cast_cast_reg_3604;

assign grp_fu_3490_p2 = {{tmp_52_fu_2892_p4}, {8'd0}};

assign grp_fu_3498_p1 = sext_ln75_42_cast_reg_3599;

assign grp_fu_3498_p2 = {{tmp_53_fu_2912_p4}, {8'd0}};

assign grp_fu_3506_p0 = grp_fu_3506_p00;

assign grp_fu_3506_p00 = layer2_weights_62_load_reg_4757_pp0_iter54_reg;

assign grp_fu_3506_p1 = layer1_output_55_cast_cast_reg_3594;

assign grp_fu_3506_p2 = {{tmp_54_fu_2932_p4}, {8'd0}};

assign grp_fu_3514_p1 = sext_ln75_43_cast_reg_3589;

assign grp_fu_3514_p2 = {{tmp_55_fu_2949_p4}, {8'd0}};

assign icmp_ln70_fu_1748_p2 = ((ap_sig_allocacmp_i_1 == 4'd10) ? 1'b1 : 1'b0);

assign layer1_output_18_cast_cast_fu_1664_p1 = $signed(layer1_output_18_cast);

assign layer1_output_1_cast_cast_fu_1732_p1 = $signed(layer1_output_1_cast);

assign layer1_output_22_cast_cast_fu_1648_p1 = $signed(layer1_output_22_cast);

assign layer1_output_23_cast_cast_fu_1644_p1 = $signed(layer1_output_23_cast);

assign layer1_output_26_cast_cast_fu_1632_p1 = $signed(layer1_output_26_cast);

assign layer1_output_33_cast_cast_fu_1604_p1 = $signed(layer1_output_33_cast);

assign layer1_output_43_cast_cast_fu_1564_p1 = $signed(layer1_output_43_cast);

assign layer1_output_44_cast_cast_fu_1560_p1 = $signed(layer1_output_44_cast);

assign layer1_output_48_cast_cast_fu_1544_p1 = $signed(layer1_output_48_cast);

assign layer1_output_49_cast_cast_fu_1540_p1 = $signed(layer1_output_49_cast);

assign layer1_output_53_cast_cast_fu_1524_p1 = $signed(layer1_output_53_cast);

assign layer1_output_55_cast_cast_fu_1516_p1 = $signed(layer1_output_55_cast);

assign layer1_output_5_cast_cast_fu_1716_p1 = $signed(layer1_output_5_cast);

assign layer2_bias_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_output_11_fu_2978_p2 = ($signed(sext_ln77_fu_2975_p1) + $signed(sum_fu_2966_p4));

assign layer2_output_1_out = layer2_output_1_fu_310;

assign layer2_output_2_out = layer2_output_2_fu_314;

assign layer2_output_3_out = layer2_output_3_fu_318;

assign layer2_output_4_out = layer2_output_4_fu_322;

assign layer2_output_5_out = layer2_output_5_fu_326;

assign layer2_output_6_out = layer2_output_6_fu_330;

assign layer2_output_7_out = layer2_output_7_fu_334;

assign layer2_output_8_out = layer2_output_8_fu_338;

assign layer2_output_9_out = layer2_output_9_fu_342;

assign layer2_output_out = layer2_output_fu_306;

assign layer2_weights_0_address0 = zext_ln70_fu_1760_p1;

assign layer2_weights_12_address0 = zext_ln70_reg_3882_pp0_iter8_reg;

assign layer2_weights_13_address0 = zext_ln70_reg_3882_pp0_iter9_reg;

assign layer2_weights_14_address0 = zext_ln70_reg_3882_pp0_iter10_reg;

assign layer2_weights_15_address0 = zext_ln70_reg_3882_pp0_iter11_reg;

assign layer2_weights_16_address0 = zext_ln70_reg_3882_pp0_iter12_reg;

assign layer2_weights_18_address0 = zext_ln70_reg_3882_pp0_iter13_reg;

assign layer2_weights_1_address0 = zext_ln70_fu_1760_p1;

assign layer2_weights_20_address0 = zext_ln70_reg_3882_pp0_iter14_reg;

assign layer2_weights_21_address0 = zext_ln70_reg_3882_pp0_iter15_reg;

assign layer2_weights_22_address0 = zext_ln70_reg_3882_pp0_iter16_reg;

assign layer2_weights_23_address0 = zext_ln70_reg_3882_pp0_iter17_reg;

assign layer2_weights_25_address0 = zext_ln70_reg_3882_pp0_iter18_reg;

assign layer2_weights_26_address0 = zext_ln70_reg_3882_pp0_iter19_reg;

assign layer2_weights_27_address0 = zext_ln70_reg_3882_pp0_iter20_reg;

assign layer2_weights_28_address0 = zext_ln70_reg_3882_pp0_iter21_reg;

assign layer2_weights_29_address0 = zext_ln70_reg_3882_pp0_iter22_reg;

assign layer2_weights_2_address0 = zext_ln70_reg_3882;

assign layer2_weights_30_address0 = zext_ln70_reg_3882_pp0_iter23_reg;

assign layer2_weights_31_address0 = zext_ln70_reg_3882_pp0_iter24_reg;

assign layer2_weights_32_address0 = zext_ln70_reg_3882_pp0_iter25_reg;

assign layer2_weights_33_address0 = zext_ln70_reg_3882_pp0_iter26_reg;

assign layer2_weights_34_address0 = zext_ln70_reg_3882_pp0_iter27_reg;

assign layer2_weights_35_address0 = zext_ln70_reg_3882_pp0_iter28_reg;

assign layer2_weights_36_address0 = zext_ln70_reg_3882_pp0_iter29_reg;

assign layer2_weights_37_address0 = zext_ln70_reg_3882_pp0_iter30_reg;

assign layer2_weights_38_address0 = zext_ln70_reg_3882_pp0_iter31_reg;

assign layer2_weights_39_address0 = zext_ln70_reg_3882_pp0_iter32_reg;

assign layer2_weights_3_address0 = zext_ln70_reg_3882_pp0_iter1_reg;

assign layer2_weights_40_address0 = zext_ln70_reg_3882_pp0_iter33_reg;

assign layer2_weights_41_address0 = zext_ln70_reg_3882_pp0_iter34_reg;

assign layer2_weights_42_address0 = zext_ln70_reg_3882_pp0_iter35_reg;

assign layer2_weights_43_address0 = zext_ln70_reg_3882_pp0_iter36_reg;

assign layer2_weights_44_address0 = zext_ln70_reg_3882_pp0_iter37_reg;

assign layer2_weights_45_address0 = zext_ln70_reg_3882_pp0_iter38_reg;

assign layer2_weights_46_address0 = zext_ln70_reg_3882_pp0_iter39_reg;

assign layer2_weights_48_address0 = zext_ln70_reg_3882_pp0_iter40_reg;

assign layer2_weights_49_address0 = zext_ln70_reg_3882_pp0_iter41_reg;

assign layer2_weights_4_address0 = zext_ln70_reg_3882_pp0_iter2_reg;

assign layer2_weights_50_address0 = zext_ln70_reg_3882_pp0_iter42_reg;

assign layer2_weights_51_address0 = zext_ln70_reg_3882_pp0_iter43_reg;

assign layer2_weights_52_address0 = zext_ln70_reg_3882_pp0_iter44_reg;

assign layer2_weights_53_address0 = zext_ln70_reg_3882_pp0_iter45_reg;

assign layer2_weights_54_address0 = zext_ln70_reg_3882_pp0_iter46_reg;

assign layer2_weights_55_address0 = zext_ln70_reg_3882_pp0_iter47_reg;

assign layer2_weights_56_address0 = zext_ln70_reg_3882_pp0_iter48_reg;

assign layer2_weights_57_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_weights_58_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_weights_59_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_weights_5_address0 = zext_ln70_reg_3882_pp0_iter3_reg;

assign layer2_weights_61_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_weights_62_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_weights_63_address0 = zext_ln70_reg_3882_pp0_iter49_reg;

assign layer2_weights_6_address0 = zext_ln70_reg_3882_pp0_iter4_reg;

assign layer2_weights_7_address0 = zext_ln70_reg_3882_pp0_iter5_reg;

assign layer2_weights_8_address0 = zext_ln70_reg_3882_pp0_iter6_reg;

assign layer2_weights_9_address0 = zext_ln70_reg_3882_pp0_iter7_reg;

assign mul_ln75_fu_1778_p1 = sext_ln75_cast_reg_3869;

assign sext_ln75_10_cast_fu_1688_p1 = $signed(sext_ln75_10);

assign sext_ln75_11_cast_fu_1684_p1 = $signed(sext_ln75_11);

assign sext_ln75_12_cast_fu_1680_p1 = $signed(sext_ln75_12);

assign sext_ln75_13_cast_fu_1676_p1 = $signed(sext_ln75_13);

assign sext_ln75_14_cast_fu_1672_p1 = $signed(sext_ln75_14);

assign sext_ln75_15_cast_fu_1668_p1 = $signed(sext_ln75_15);

assign sext_ln75_16_cast_fu_1660_p1 = $signed(sext_ln75_16);

assign sext_ln75_17_cast_fu_1656_p1 = $signed(sext_ln75_17);

assign sext_ln75_18_cast_fu_1652_p1 = $signed(sext_ln75_18);

assign sext_ln75_19_cast_fu_1640_p1 = $signed(sext_ln75_19);

assign sext_ln75_1_cast_fu_1728_p1 = $signed(sext_ln75_1);

assign sext_ln75_20_cast_fu_1636_p1 = $signed(sext_ln75_20);

assign sext_ln75_21_cast_fu_1628_p1 = $signed(sext_ln75_21);

assign sext_ln75_22_cast_fu_1624_p1 = $signed(sext_ln75_22);

assign sext_ln75_23_cast_fu_1620_p1 = $signed(sext_ln75_23);

assign sext_ln75_24_cast_fu_1616_p1 = $signed(sext_ln75_24);

assign sext_ln75_25_cast_fu_1612_p1 = $signed(sext_ln75_25);

assign sext_ln75_26_cast_fu_1608_p1 = $signed(sext_ln75_26);

assign sext_ln75_27_cast_fu_1600_p1 = $signed(sext_ln75_27);

assign sext_ln75_28_cast_fu_1596_p1 = $signed(sext_ln75_28);

assign sext_ln75_29_cast_fu_1592_p1 = $signed(sext_ln75_29);

assign sext_ln75_2_cast_fu_1724_p1 = $signed(sext_ln75_2);

assign sext_ln75_30_cast_fu_1588_p1 = $signed(sext_ln75_30);

assign sext_ln75_31_cast_fu_1584_p1 = $signed(sext_ln75_31);

assign sext_ln75_32_cast_fu_1580_p1 = $signed(sext_ln75_32);

assign sext_ln75_33_cast_fu_1576_p1 = $signed(sext_ln75_33);

assign sext_ln75_34_cast_fu_1572_p1 = $signed(sext_ln75_34);

assign sext_ln75_35_cast_fu_1568_p1 = $signed(sext_ln75_35);

assign sext_ln75_36_cast_fu_1556_p1 = $signed(sext_ln75_36);

assign sext_ln75_37_cast_fu_1552_p1 = $signed(sext_ln75_37);

assign sext_ln75_38_cast_fu_1548_p1 = $signed(sext_ln75_38);

assign sext_ln75_39_cast_fu_1536_p1 = $signed(sext_ln75_39);

assign sext_ln75_3_cast_fu_1720_p1 = $signed(sext_ln75_3);

assign sext_ln75_40_cast_fu_1532_p1 = $signed(sext_ln75_40);

assign sext_ln75_41_cast_fu_1528_p1 = $signed(sext_ln75_41);

assign sext_ln75_42_cast_fu_1520_p1 = $signed(sext_ln75_42);

assign sext_ln75_43_cast_fu_1512_p1 = $signed(sext_ln75_43);

assign sext_ln75_4_cast_fu_1712_p1 = $signed(sext_ln75_4);

assign sext_ln75_5_cast_fu_1708_p1 = $signed(sext_ln75_5);

assign sext_ln75_6_cast_fu_1704_p1 = $signed(sext_ln75_6);

assign sext_ln75_74_fu_2371_p1 = $signed(layer2_weights_35_q0);

assign sext_ln75_7_cast_fu_1700_p1 = $signed(sext_ln75_7);

assign sext_ln75_86_fu_2606_p1 = $signed(layer2_weights_46_q0);

assign sext_ln75_87_fu_2631_p1 = $signed(layer2_weights_48_q0);

assign sext_ln75_8_cast_fu_1696_p1 = $signed(sext_ln75_8);

assign sext_ln75_98_fu_2865_p1 = $signed(layer2_weights_59_load_reg_4747_pp0_iter52_reg);

assign sext_ln75_9_cast_fu_1692_p1 = $signed(sext_ln75_9);

assign sext_ln75_cast_fu_1736_p1 = $signed(sext_ln75);

assign sext_ln77_fu_2975_p1 = $signed(layer2_bias_load_reg_4767_pp0_iter58_reg);

assign sum_fu_2966_p1 = grp_fu_3514_p3;

assign sum_fu_2966_p4 = {{sum_fu_2966_p1[23:8]}};

assign tmp_10_fu_1997_p1 = grp_fu_3146_p3;

assign tmp_10_fu_1997_p4 = {{tmp_10_fu_1997_p1[23:8]}};

assign tmp_11_fu_2018_p1 = grp_fu_3154_p3;

assign tmp_11_fu_2018_p4 = {{tmp_11_fu_2018_p1[23:8]}};

assign tmp_12_fu_2039_p1 = grp_fu_3162_p3;

assign tmp_12_fu_2039_p4 = {{tmp_12_fu_2039_p1[23:8]}};

assign tmp_13_fu_2060_p1 = grp_fu_3170_p3;

assign tmp_13_fu_2060_p4 = {{tmp_13_fu_2060_p1[23:8]}};

assign tmp_14_fu_2081_p1 = grp_fu_3178_p3;

assign tmp_14_fu_2081_p4 = {{tmp_14_fu_2081_p1[23:8]}};

assign tmp_15_fu_2102_p1 = grp_fu_3186_p3;

assign tmp_15_fu_2102_p4 = {{tmp_15_fu_2102_p1[23:8]}};

assign tmp_16_fu_2123_p1 = grp_fu_3194_p3;

assign tmp_16_fu_2123_p4 = {{tmp_16_fu_2123_p1[23:8]}};

assign tmp_17_fu_2144_p1 = grp_fu_3202_p3;

assign tmp_17_fu_2144_p4 = {{tmp_17_fu_2144_p1[23:8]}};

assign tmp_18_fu_2165_p4 = {{grp_fu_3210_p3[23:8]}};

assign tmp_19_fu_2186_p1 = grp_fu_3218_p3;

assign tmp_19_fu_2186_p4 = {{tmp_19_fu_2186_p1[23:8]}};

assign tmp_1_fu_1808_p4 = {{grp_fu_3074_p3[23:8]}};

assign tmp_20_fu_2207_p1 = grp_fu_3226_p3;

assign tmp_20_fu_2207_p4 = {{tmp_20_fu_2207_p1[23:8]}};

assign tmp_21_fu_2228_p1 = grp_fu_3234_p3;

assign tmp_21_fu_2228_p4 = {{tmp_21_fu_2228_p1[23:8]}};

assign tmp_22_fu_2249_p1 = grp_fu_3242_p3;

assign tmp_22_fu_2249_p4 = {{tmp_22_fu_2249_p1[23:8]}};

assign tmp_23_fu_2270_p4 = {{grp_fu_3250_p3[23:8]}};

assign tmp_24_fu_2291_p1 = grp_fu_3258_p3;

assign tmp_24_fu_2291_p4 = {{tmp_24_fu_2291_p1[23:8]}};

assign tmp_25_fu_2312_p1 = grp_fu_3266_p3;

assign tmp_25_fu_2312_p4 = {{tmp_25_fu_2312_p1[23:8]}};

assign tmp_26_fu_2333_p1 = grp_fu_3274_p3;

assign tmp_26_fu_2333_p4 = {{tmp_26_fu_2333_p1[23:8]}};

assign tmp_27_fu_2354_p1 = grp_fu_3282_p3;

assign tmp_27_fu_2354_p4 = {{tmp_27_fu_2354_p1[23:8]}};

assign tmp_28_fu_2379_p1 = grp_fu_3290_p3;

assign tmp_28_fu_2379_p4 = {{tmp_28_fu_2379_p1[23:8]}};

assign tmp_29_fu_2400_p1 = grp_fu_3298_p3;

assign tmp_29_fu_2400_p4 = {{tmp_29_fu_2400_p1[23:8]}};

assign tmp_2_fu_1829_p1 = grp_fu_3082_p3;

assign tmp_2_fu_1829_p4 = {{tmp_2_fu_1829_p1[23:8]}};

assign tmp_30_fu_2421_p1 = grp_fu_3306_p3;

assign tmp_30_fu_2421_p4 = {{tmp_30_fu_2421_p1[23:8]}};

assign tmp_31_fu_2442_p1 = grp_fu_3314_p3;

assign tmp_31_fu_2442_p4 = {{tmp_31_fu_2442_p1[23:8]}};

assign tmp_32_fu_2463_p1 = grp_fu_3322_p3;

assign tmp_32_fu_2463_p4 = {{tmp_32_fu_2463_p1[23:8]}};

assign tmp_33_fu_2484_p4 = {{grp_fu_3330_p3[23:8]}};

assign tmp_34_fu_2505_p1 = grp_fu_3338_p3;

assign tmp_34_fu_2505_p4 = {{tmp_34_fu_2505_p1[23:8]}};

assign tmp_35_fu_2526_p1 = grp_fu_3346_p3;

assign tmp_35_fu_2526_p4 = {{tmp_35_fu_2526_p1[23:8]}};

assign tmp_36_fu_2547_p1 = grp_fu_3354_p3;

assign tmp_36_fu_2547_p4 = {{tmp_36_fu_2547_p1[23:8]}};

assign tmp_37_fu_2568_p1 = grp_fu_3362_p3;

assign tmp_37_fu_2568_p4 = {{tmp_37_fu_2568_p1[23:8]}};

assign tmp_38_fu_2589_p1 = grp_fu_3370_p3;

assign tmp_38_fu_2589_p4 = {{tmp_38_fu_2589_p1[23:8]}};

assign tmp_39_fu_2614_p1 = grp_fu_3378_p3;

assign tmp_39_fu_2614_p4 = {{tmp_39_fu_2614_p1[23:8]}};

assign tmp_3_fu_1850_p1 = grp_fu_3090_p3;

assign tmp_3_fu_1850_p4 = {{tmp_3_fu_1850_p1[23:8]}};

assign tmp_40_fu_2639_p1 = grp_fu_3386_p3;

assign tmp_40_fu_2639_p4 = {{tmp_40_fu_2639_p1[23:8]}};

assign tmp_41_fu_2660_p1 = grp_fu_3394_p3;

assign tmp_41_fu_2660_p4 = {{tmp_41_fu_2660_p1[23:8]}};

assign tmp_42_fu_2681_p1 = grp_fu_3402_p3;

assign tmp_42_fu_2681_p4 = {{tmp_42_fu_2681_p1[23:8]}};

assign tmp_43_fu_2702_p1 = grp_fu_3410_p3;

assign tmp_43_fu_2702_p4 = {{tmp_43_fu_2702_p1[23:8]}};

assign tmp_44_fu_2723_p4 = {{grp_fu_3418_p3[23:8]}};

assign tmp_45_fu_2744_p1 = grp_fu_3426_p3;

assign tmp_45_fu_2744_p4 = {{tmp_45_fu_2744_p1[23:8]}};

assign tmp_46_fu_2765_p1 = grp_fu_3434_p3;

assign tmp_46_fu_2765_p4 = {{tmp_46_fu_2765_p1[23:8]}};

assign tmp_47_fu_2786_p1 = grp_fu_3442_p3;

assign tmp_47_fu_2786_p4 = {{tmp_47_fu_2786_p1[23:8]}};

assign tmp_48_fu_2807_p1 = grp_fu_3450_p3;

assign tmp_48_fu_2807_p4 = {{tmp_48_fu_2807_p1[23:8]}};

assign tmp_49_fu_2828_p4 = {{grp_fu_3458_p3[23:8]}};

assign tmp_4_fu_1871_p1 = grp_fu_3098_p3;

assign tmp_4_fu_1871_p4 = {{tmp_4_fu_1871_p1[23:8]}};

assign tmp_50_fu_2848_p1 = grp_fu_3466_p3;

assign tmp_50_fu_2848_p4 = {{tmp_50_fu_2848_p1[23:8]}};

assign tmp_51_fu_2872_p1 = grp_fu_3474_p3;

assign tmp_51_fu_2872_p4 = {{tmp_51_fu_2872_p1[23:8]}};

assign tmp_52_fu_2892_p1 = grp_fu_3482_p3;

assign tmp_52_fu_2892_p4 = {{tmp_52_fu_2892_p1[23:8]}};

assign tmp_53_fu_2912_p4 = {{grp_fu_3490_p3[23:8]}};

assign tmp_54_fu_2932_p1 = grp_fu_3498_p3;

assign tmp_54_fu_2932_p4 = {{tmp_54_fu_2932_p1[23:8]}};

assign tmp_55_fu_2949_p4 = {{grp_fu_3506_p3[23:8]}};

assign tmp_5_fu_1892_p1 = grp_fu_3106_p3;

assign tmp_5_fu_1892_p4 = {{tmp_5_fu_1892_p1[23:8]}};

assign tmp_6_fu_1913_p1 = grp_fu_3114_p3;

assign tmp_6_fu_1913_p4 = {{tmp_6_fu_1913_p1[23:8]}};

assign tmp_7_fu_1934_p1 = grp_fu_3122_p3;

assign tmp_7_fu_1934_p4 = {{tmp_7_fu_1934_p1[23:8]}};

assign tmp_8_fu_1955_p1 = grp_fu_3130_p3;

assign tmp_8_fu_1955_p4 = {{tmp_8_fu_1955_p1[23:8]}};

assign tmp_9_fu_1976_p1 = grp_fu_3138_p3;

assign tmp_9_fu_1976_p4 = {{tmp_9_fu_1976_p1[23:8]}};

assign zext_ln70_fu_1760_p1 = ap_sig_allocacmp_i_1;

always @ (posedge ap_clk) begin
    zext_ln70_reg_3882[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter7_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter8_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter9_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter10_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter11_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter12_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter13_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter14_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter15_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter16_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter17_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter18_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter19_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter20_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter21_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter22_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter23_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter24_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter25_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter26_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter27_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter28_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter29_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter30_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter31_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter32_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter33_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter34_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter35_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter36_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter37_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter38_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter39_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter40_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter41_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter42_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter43_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter44_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter45_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter46_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter47_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter48_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_3882_pp0_iter49_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_70_3
