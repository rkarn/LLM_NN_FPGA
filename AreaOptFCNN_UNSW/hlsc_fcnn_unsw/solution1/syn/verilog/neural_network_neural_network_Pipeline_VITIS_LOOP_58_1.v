// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module neural_network_neural_network_Pipeline_VITIS_LOOP_58_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln63,
        sext_ln63_1,
        sext_ln63_2,
        sext_ln63_3,
        sext_ln63_4,
        sext_ln63_5,
        sext_ln63_6,
        sext_ln63_7,
        sext_ln63_8,
        sext_ln63_9,
        sext_ln63_10,
        sext_ln63_11,
        sext_ln63_12,
        sext_ln63_13,
        sext_ln63_14,
        sext_ln63_15,
        sext_ln63_16,
        sext_ln63_17,
        sext_ln63_18,
        sext_ln63_19,
        sext_ln63_20,
        sext_ln63_21,
        sext_ln63_22,
        sext_ln63_23,
        sext_ln63_24,
        sext_ln63_25,
        sext_ln63_26,
        sext_ln63_27,
        sext_ln63_28,
        sext_ln63_29,
        sext_ln63_30,
        sext_ln63_31,
        sext_ln63_32,
        sext_ln63_33,
        sext_ln63_34,
        sext_ln63_35,
        sext_ln63_36,
        sext_ln63_37,
        sext_ln63_38,
        sext_ln63_39,
        sext_ln63_40,
        sext_ln63_41,
        sext_ln63_42,
        layer1_output_56_out,
        layer1_output_56_out_ap_vld,
        layer1_output_55_out,
        layer1_output_55_out_ap_vld,
        layer1_output_54_out,
        layer1_output_54_out_ap_vld,
        layer1_output_53_out,
        layer1_output_53_out_ap_vld,
        layer1_output_52_out,
        layer1_output_52_out_ap_vld,
        layer1_output_51_out,
        layer1_output_51_out_ap_vld,
        layer1_output_50_out,
        layer1_output_50_out_ap_vld,
        layer1_output_49_out,
        layer1_output_49_out_ap_vld,
        layer1_output_48_out,
        layer1_output_48_out_ap_vld,
        layer1_output_47_out,
        layer1_output_47_out_ap_vld,
        layer1_output_46_out,
        layer1_output_46_out_ap_vld,
        layer1_output_45_out,
        layer1_output_45_out_ap_vld,
        layer1_output_44_out,
        layer1_output_44_out_ap_vld,
        layer1_output_43_out,
        layer1_output_43_out_ap_vld,
        layer1_output_42_out,
        layer1_output_42_out_ap_vld,
        layer1_output_41_out,
        layer1_output_41_out_ap_vld,
        layer1_output_40_out,
        layer1_output_40_out_ap_vld,
        layer1_output_39_out,
        layer1_output_39_out_ap_vld,
        layer1_output_38_out,
        layer1_output_38_out_ap_vld,
        layer1_output_37_out,
        layer1_output_37_out_ap_vld,
        layer1_output_36_out,
        layer1_output_36_out_ap_vld,
        layer1_output_35_out,
        layer1_output_35_out_ap_vld,
        layer1_output_34_out,
        layer1_output_34_out_ap_vld,
        layer1_output_33_out,
        layer1_output_33_out_ap_vld,
        layer1_output_32_out,
        layer1_output_32_out_ap_vld,
        layer1_output_31_out,
        layer1_output_31_out_ap_vld,
        layer1_output_30_out,
        layer1_output_30_out_ap_vld,
        layer1_output_29_out,
        layer1_output_29_out_ap_vld,
        layer1_output_28_out,
        layer1_output_28_out_ap_vld,
        layer1_output_27_out,
        layer1_output_27_out_ap_vld,
        layer1_output_26_out,
        layer1_output_26_out_ap_vld,
        layer1_output_25_out,
        layer1_output_25_out_ap_vld,
        layer1_output_24_out,
        layer1_output_24_out_ap_vld,
        layer1_output_23_out,
        layer1_output_23_out_ap_vld,
        layer1_output_22_out,
        layer1_output_22_out_ap_vld,
        layer1_output_21_out,
        layer1_output_21_out_ap_vld,
        layer1_output_20_out,
        layer1_output_20_out_ap_vld,
        layer1_output_19_out,
        layer1_output_19_out_ap_vld,
        layer1_output_18_out,
        layer1_output_18_out_ap_vld,
        layer1_output_17_out,
        layer1_output_17_out_ap_vld,
        layer1_output_16_out,
        layer1_output_16_out_ap_vld,
        layer1_output_15_out,
        layer1_output_15_out_ap_vld,
        layer1_output_14_out,
        layer1_output_14_out_ap_vld,
        layer1_output_13_out,
        layer1_output_13_out_ap_vld,
        layer1_output_12_out,
        layer1_output_12_out_ap_vld,
        layer1_output_11_out,
        layer1_output_11_out_ap_vld,
        layer1_output_10_out,
        layer1_output_10_out_ap_vld,
        layer1_output_9_out,
        layer1_output_9_out_ap_vld,
        layer1_output_8_out,
        layer1_output_8_out_ap_vld,
        layer1_output_7_out,
        layer1_output_7_out_ap_vld,
        layer1_output_6_out,
        layer1_output_6_out_ap_vld,
        layer1_output_5_out,
        layer1_output_5_out_ap_vld,
        layer1_output_4_out,
        layer1_output_4_out_ap_vld,
        layer1_output_3_out,
        layer1_output_3_out_ap_vld,
        layer1_output_2_out,
        layer1_output_2_out_ap_vld,
        layer1_output_1_out,
        layer1_output_1_out_ap_vld,
        layer1_output_out,
        layer1_output_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sext_ln63;
input  [15:0] sext_ln63_1;
input  [15:0] sext_ln63_2;
input  [15:0] sext_ln63_3;
input  [15:0] sext_ln63_4;
input  [15:0] sext_ln63_5;
input  [15:0] sext_ln63_6;
input  [15:0] sext_ln63_7;
input  [15:0] sext_ln63_8;
input  [15:0] sext_ln63_9;
input  [15:0] sext_ln63_10;
input  [15:0] sext_ln63_11;
input  [15:0] sext_ln63_12;
input  [15:0] sext_ln63_13;
input  [15:0] sext_ln63_14;
input  [15:0] sext_ln63_15;
input  [15:0] sext_ln63_16;
input  [15:0] sext_ln63_17;
input  [15:0] sext_ln63_18;
input  [15:0] sext_ln63_19;
input  [15:0] sext_ln63_20;
input  [15:0] sext_ln63_21;
input  [15:0] sext_ln63_22;
input  [15:0] sext_ln63_23;
input  [15:0] sext_ln63_24;
input  [15:0] sext_ln63_25;
input  [15:0] sext_ln63_26;
input  [15:0] sext_ln63_27;
input  [15:0] sext_ln63_28;
input  [15:0] sext_ln63_29;
input  [15:0] sext_ln63_30;
input  [15:0] sext_ln63_31;
input  [15:0] sext_ln63_32;
input  [15:0] sext_ln63_33;
input  [15:0] sext_ln63_34;
input  [15:0] sext_ln63_35;
input  [15:0] sext_ln63_36;
input  [15:0] sext_ln63_37;
input  [15:0] sext_ln63_38;
input  [15:0] sext_ln63_39;
input  [15:0] sext_ln63_40;
input  [15:0] sext_ln63_41;
input  [15:0] sext_ln63_42;
output  [15:0] layer1_output_56_out;
output   layer1_output_56_out_ap_vld;
output  [15:0] layer1_output_55_out;
output   layer1_output_55_out_ap_vld;
output  [15:0] layer1_output_54_out;
output   layer1_output_54_out_ap_vld;
output  [15:0] layer1_output_53_out;
output   layer1_output_53_out_ap_vld;
output  [15:0] layer1_output_52_out;
output   layer1_output_52_out_ap_vld;
output  [15:0] layer1_output_51_out;
output   layer1_output_51_out_ap_vld;
output  [15:0] layer1_output_50_out;
output   layer1_output_50_out_ap_vld;
output  [15:0] layer1_output_49_out;
output   layer1_output_49_out_ap_vld;
output  [15:0] layer1_output_48_out;
output   layer1_output_48_out_ap_vld;
output  [15:0] layer1_output_47_out;
output   layer1_output_47_out_ap_vld;
output  [15:0] layer1_output_46_out;
output   layer1_output_46_out_ap_vld;
output  [15:0] layer1_output_45_out;
output   layer1_output_45_out_ap_vld;
output  [15:0] layer1_output_44_out;
output   layer1_output_44_out_ap_vld;
output  [15:0] layer1_output_43_out;
output   layer1_output_43_out_ap_vld;
output  [15:0] layer1_output_42_out;
output   layer1_output_42_out_ap_vld;
output  [15:0] layer1_output_41_out;
output   layer1_output_41_out_ap_vld;
output  [15:0] layer1_output_40_out;
output   layer1_output_40_out_ap_vld;
output  [15:0] layer1_output_39_out;
output   layer1_output_39_out_ap_vld;
output  [15:0] layer1_output_38_out;
output   layer1_output_38_out_ap_vld;
output  [15:0] layer1_output_37_out;
output   layer1_output_37_out_ap_vld;
output  [15:0] layer1_output_36_out;
output   layer1_output_36_out_ap_vld;
output  [15:0] layer1_output_35_out;
output   layer1_output_35_out_ap_vld;
output  [15:0] layer1_output_34_out;
output   layer1_output_34_out_ap_vld;
output  [15:0] layer1_output_33_out;
output   layer1_output_33_out_ap_vld;
output  [15:0] layer1_output_32_out;
output   layer1_output_32_out_ap_vld;
output  [15:0] layer1_output_31_out;
output   layer1_output_31_out_ap_vld;
output  [15:0] layer1_output_30_out;
output   layer1_output_30_out_ap_vld;
output  [15:0] layer1_output_29_out;
output   layer1_output_29_out_ap_vld;
output  [15:0] layer1_output_28_out;
output   layer1_output_28_out_ap_vld;
output  [15:0] layer1_output_27_out;
output   layer1_output_27_out_ap_vld;
output  [15:0] layer1_output_26_out;
output   layer1_output_26_out_ap_vld;
output  [15:0] layer1_output_25_out;
output   layer1_output_25_out_ap_vld;
output  [15:0] layer1_output_24_out;
output   layer1_output_24_out_ap_vld;
output  [15:0] layer1_output_23_out;
output   layer1_output_23_out_ap_vld;
output  [15:0] layer1_output_22_out;
output   layer1_output_22_out_ap_vld;
output  [15:0] layer1_output_21_out;
output   layer1_output_21_out_ap_vld;
output  [15:0] layer1_output_20_out;
output   layer1_output_20_out_ap_vld;
output  [15:0] layer1_output_19_out;
output   layer1_output_19_out_ap_vld;
output  [15:0] layer1_output_18_out;
output   layer1_output_18_out_ap_vld;
output  [15:0] layer1_output_17_out;
output   layer1_output_17_out_ap_vld;
output  [15:0] layer1_output_16_out;
output   layer1_output_16_out_ap_vld;
output  [15:0] layer1_output_15_out;
output   layer1_output_15_out_ap_vld;
output  [15:0] layer1_output_14_out;
output   layer1_output_14_out_ap_vld;
output  [15:0] layer1_output_13_out;
output   layer1_output_13_out_ap_vld;
output  [15:0] layer1_output_12_out;
output   layer1_output_12_out_ap_vld;
output  [15:0] layer1_output_11_out;
output   layer1_output_11_out_ap_vld;
output  [15:0] layer1_output_10_out;
output   layer1_output_10_out_ap_vld;
output  [15:0] layer1_output_9_out;
output   layer1_output_9_out_ap_vld;
output  [15:0] layer1_output_8_out;
output   layer1_output_8_out_ap_vld;
output  [15:0] layer1_output_7_out;
output   layer1_output_7_out_ap_vld;
output  [15:0] layer1_output_6_out;
output   layer1_output_6_out_ap_vld;
output  [15:0] layer1_output_5_out;
output   layer1_output_5_out_ap_vld;
output  [15:0] layer1_output_4_out;
output   layer1_output_4_out_ap_vld;
output  [15:0] layer1_output_3_out;
output   layer1_output_3_out_ap_vld;
output  [15:0] layer1_output_2_out;
output   layer1_output_2_out_ap_vld;
output  [15:0] layer1_output_1_out;
output   layer1_output_1_out_ap_vld;
output  [15:0] layer1_output_out;
output   layer1_output_out_ap_vld;

reg ap_idle;
reg layer1_output_56_out_ap_vld;
reg layer1_output_55_out_ap_vld;
reg layer1_output_54_out_ap_vld;
reg layer1_output_53_out_ap_vld;
reg layer1_output_52_out_ap_vld;
reg layer1_output_51_out_ap_vld;
reg layer1_output_50_out_ap_vld;
reg layer1_output_49_out_ap_vld;
reg layer1_output_48_out_ap_vld;
reg layer1_output_47_out_ap_vld;
reg layer1_output_46_out_ap_vld;
reg layer1_output_45_out_ap_vld;
reg layer1_output_44_out_ap_vld;
reg layer1_output_43_out_ap_vld;
reg layer1_output_42_out_ap_vld;
reg layer1_output_41_out_ap_vld;
reg layer1_output_40_out_ap_vld;
reg layer1_output_39_out_ap_vld;
reg layer1_output_38_out_ap_vld;
reg layer1_output_37_out_ap_vld;
reg layer1_output_36_out_ap_vld;
reg layer1_output_35_out_ap_vld;
reg layer1_output_34_out_ap_vld;
reg layer1_output_33_out_ap_vld;
reg layer1_output_32_out_ap_vld;
reg layer1_output_31_out_ap_vld;
reg layer1_output_30_out_ap_vld;
reg layer1_output_29_out_ap_vld;
reg layer1_output_28_out_ap_vld;
reg layer1_output_27_out_ap_vld;
reg layer1_output_26_out_ap_vld;
reg layer1_output_25_out_ap_vld;
reg layer1_output_24_out_ap_vld;
reg layer1_output_23_out_ap_vld;
reg layer1_output_22_out_ap_vld;
reg layer1_output_21_out_ap_vld;
reg layer1_output_20_out_ap_vld;
reg layer1_output_19_out_ap_vld;
reg layer1_output_18_out_ap_vld;
reg layer1_output_17_out_ap_vld;
reg layer1_output_16_out_ap_vld;
reg layer1_output_15_out_ap_vld;
reg layer1_output_14_out_ap_vld;
reg layer1_output_13_out_ap_vld;
reg layer1_output_12_out_ap_vld;
reg layer1_output_11_out_ap_vld;
reg layer1_output_10_out_ap_vld;
reg layer1_output_9_out_ap_vld;
reg layer1_output_8_out_ap_vld;
reg layer1_output_7_out_ap_vld;
reg layer1_output_6_out_ap_vld;
reg layer1_output_5_out_ap_vld;
reg layer1_output_4_out_ap_vld;
reg layer1_output_3_out_ap_vld;
reg layer1_output_2_out_ap_vld;
reg layer1_output_1_out_ap_vld;
reg layer1_output_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln58_fu_2101_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] layer1_weights_0_address0;
reg    layer1_weights_0_ce0;
wire   [10:0] layer1_weights_0_q0;
wire   [5:0] layer1_weights_1_address0;
reg    layer1_weights_1_ce0;
wire  signed [10:0] layer1_weights_1_q0;
wire   [5:0] layer1_weights_2_address0;
reg    layer1_weights_2_ce0;
wire  signed [9:0] layer1_weights_2_q0;
wire   [5:0] layer1_weights_3_address0;
reg    layer1_weights_3_ce0;
wire  signed [13:0] layer1_weights_3_q0;
wire   [5:0] layer1_weights_4_address0;
reg    layer1_weights_4_ce0;
wire  signed [10:0] layer1_weights_4_q0;
wire   [5:0] layer1_weights_5_address0;
reg    layer1_weights_5_ce0;
wire  signed [12:0] layer1_weights_5_q0;
wire   [5:0] layer1_weights_6_address0;
reg    layer1_weights_6_ce0;
wire  signed [13:0] layer1_weights_6_q0;
wire   [5:0] layer1_weights_7_address0;
reg    layer1_weights_7_ce0;
wire  signed [13:0] layer1_weights_7_q0;
wire   [5:0] layer1_weights_8_address0;
reg    layer1_weights_8_ce0;
wire  signed [12:0] layer1_weights_8_q0;
wire   [5:0] layer1_weights_9_address0;
reg    layer1_weights_9_ce0;
wire  signed [13:0] layer1_weights_9_q0;
wire   [5:0] layer1_weights_10_address0;
reg    layer1_weights_10_ce0;
wire  signed [10:0] layer1_weights_10_q0;
wire   [5:0] layer1_weights_11_address0;
reg    layer1_weights_11_ce0;
wire  signed [10:0] layer1_weights_11_q0;
wire   [5:0] layer1_weights_12_address0;
reg    layer1_weights_12_ce0;
wire  signed [11:0] layer1_weights_12_q0;
wire   [5:0] layer1_weights_13_address0;
reg    layer1_weights_13_ce0;
wire  signed [13:0] layer1_weights_13_q0;
wire   [5:0] layer1_weights_14_address0;
reg    layer1_weights_14_ce0;
wire  signed [14:0] layer1_weights_14_q0;
wire   [5:0] layer1_weights_15_address0;
reg    layer1_weights_15_ce0;
wire  signed [14:0] layer1_weights_15_q0;
wire   [5:0] layer1_weights_16_address0;
reg    layer1_weights_16_ce0;
wire  signed [12:0] layer1_weights_16_q0;
wire   [5:0] layer1_weights_17_address0;
reg    layer1_weights_17_ce0;
wire  signed [12:0] layer1_weights_17_q0;
wire   [5:0] layer1_weights_18_address0;
reg    layer1_weights_18_ce0;
wire  signed [12:0] layer1_weights_18_q0;
wire   [5:0] layer1_weights_19_address0;
reg    layer1_weights_19_ce0;
wire  signed [13:0] layer1_weights_19_q0;
wire   [5:0] layer1_weights_20_address0;
reg    layer1_weights_20_ce0;
wire  signed [10:0] layer1_weights_20_q0;
wire   [5:0] layer1_weights_21_address0;
reg    layer1_weights_21_ce0;
wire  signed [12:0] layer1_weights_21_q0;
wire   [5:0] layer1_weights_22_address0;
reg    layer1_weights_22_ce0;
wire  signed [9:0] layer1_weights_22_q0;
wire   [5:0] layer1_weights_23_address0;
reg    layer1_weights_23_ce0;
wire  signed [9:0] layer1_weights_23_q0;
wire   [5:0] layer1_weights_24_address0;
reg    layer1_weights_24_ce0;
wire  signed [13:0] layer1_weights_24_q0;
wire   [5:0] layer1_weights_25_address0;
reg    layer1_weights_25_ce0;
wire  signed [11:0] layer1_weights_25_q0;
wire   [5:0] layer1_weights_26_address0;
reg    layer1_weights_26_ce0;
wire  signed [10:0] layer1_weights_26_q0;
wire   [5:0] layer1_weights_27_address0;
reg    layer1_weights_27_ce0;
wire  signed [12:0] layer1_weights_27_q0;
wire   [5:0] layer1_weights_28_address0;
reg    layer1_weights_28_ce0;
wire  signed [11:0] layer1_weights_28_q0;
wire   [5:0] layer1_weights_29_address0;
reg    layer1_weights_29_ce0;
wire  signed [13:0] layer1_weights_29_q0;
wire   [5:0] layer1_weights_30_address0;
reg    layer1_weights_30_ce0;
wire  signed [13:0] layer1_weights_30_q0;
wire   [5:0] layer1_weights_31_address0;
reg    layer1_weights_31_ce0;
wire  signed [11:0] layer1_weights_31_q0;
wire   [5:0] layer1_weights_32_address0;
reg    layer1_weights_32_ce0;
wire  signed [10:0] layer1_weights_32_q0;
wire   [5:0] layer1_weights_33_address0;
reg    layer1_weights_33_ce0;
wire  signed [9:0] layer1_weights_33_q0;
wire   [5:0] layer1_weights_34_address0;
reg    layer1_weights_34_ce0;
wire  signed [11:0] layer1_weights_34_q0;
wire   [5:0] layer1_weights_35_address0;
reg    layer1_weights_35_ce0;
wire  signed [12:0] layer1_weights_35_q0;
wire   [5:0] layer1_weights_36_address0;
reg    layer1_weights_36_ce0;
wire  signed [13:0] layer1_weights_36_q0;
wire   [5:0] layer1_weights_37_address0;
reg    layer1_weights_37_ce0;
wire  signed [12:0] layer1_weights_37_q0;
wire   [5:0] layer1_weights_38_address0;
reg    layer1_weights_38_ce0;
wire  signed [13:0] layer1_weights_38_q0;
wire   [5:0] layer1_weights_39_address0;
reg    layer1_weights_39_ce0;
wire   [12:0] layer1_weights_39_q0;
wire   [5:0] layer1_weights_40_address0;
reg    layer1_weights_40_ce0;
wire   [11:0] layer1_weights_40_q0;
wire   [5:0] layer1_weights_41_address0;
reg    layer1_weights_41_ce0;
wire   [12:0] layer1_weights_41_q0;
wire   [5:0] layer1_weights_42_address0;
reg    layer1_weights_42_ce0;
wire   [12:0] layer1_weights_42_q0;
wire   [5:0] layer1_bias_address0;
reg    layer1_bias_ce0;
wire   [10:0] layer1_bias_q0;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln63_42_cast_fu_1921_p1;
reg  signed [23:0] sext_ln63_42_cast_reg_4265;
wire  signed [23:0] sext_ln63_41_cast_fu_1925_p1;
reg  signed [23:0] sext_ln63_41_cast_reg_4270;
wire  signed [23:0] sext_ln63_40_cast_fu_1929_p1;
reg  signed [23:0] sext_ln63_40_cast_reg_4275;
wire  signed [23:0] sext_ln63_39_cast_fu_1933_p1;
reg  signed [23:0] sext_ln63_39_cast_reg_4280;
wire  signed [23:0] sext_ln63_38_cast_fu_1937_p1;
reg  signed [23:0] sext_ln63_38_cast_reg_4285;
wire  signed [23:0] sext_ln63_37_cast_fu_1941_p1;
reg  signed [23:0] sext_ln63_37_cast_reg_4290;
wire  signed [23:0] sext_ln63_36_cast_fu_1945_p1;
reg  signed [23:0] sext_ln63_36_cast_reg_4295;
wire  signed [23:0] sext_ln63_35_cast_fu_1949_p1;
reg  signed [23:0] sext_ln63_35_cast_reg_4300;
wire  signed [23:0] sext_ln63_34_cast_fu_1953_p1;
reg  signed [23:0] sext_ln63_34_cast_reg_4305;
wire  signed [23:0] sext_ln63_33_cast_fu_1957_p1;
reg  signed [23:0] sext_ln63_33_cast_reg_4310;
wire  signed [23:0] sext_ln63_32_cast_fu_1961_p1;
reg  signed [23:0] sext_ln63_32_cast_reg_4315;
wire  signed [23:0] sext_ln63_31_cast_fu_1965_p1;
reg  signed [23:0] sext_ln63_31_cast_reg_4320;
wire  signed [23:0] sext_ln63_30_cast_fu_1969_p1;
reg  signed [23:0] sext_ln63_30_cast_reg_4325;
wire  signed [23:0] sext_ln63_29_cast_fu_1973_p1;
reg  signed [23:0] sext_ln63_29_cast_reg_4330;
wire  signed [23:0] sext_ln63_28_cast_fu_1977_p1;
reg  signed [23:0] sext_ln63_28_cast_reg_4335;
wire  signed [23:0] sext_ln63_27_cast_fu_1981_p1;
reg  signed [23:0] sext_ln63_27_cast_reg_4340;
wire  signed [23:0] sext_ln63_26_cast_fu_1985_p1;
reg  signed [23:0] sext_ln63_26_cast_reg_4345;
wire  signed [23:0] sext_ln63_25_cast_fu_1989_p1;
reg  signed [23:0] sext_ln63_25_cast_reg_4350;
wire  signed [23:0] sext_ln63_24_cast_fu_1993_p1;
reg  signed [23:0] sext_ln63_24_cast_reg_4355;
wire  signed [23:0] sext_ln63_23_cast_fu_1997_p1;
reg  signed [23:0] sext_ln63_23_cast_reg_4360;
wire  signed [23:0] sext_ln63_22_cast_fu_2001_p1;
reg  signed [23:0] sext_ln63_22_cast_reg_4365;
wire  signed [23:0] sext_ln63_21_cast_fu_2005_p1;
reg  signed [23:0] sext_ln63_21_cast_reg_4370;
wire  signed [23:0] sext_ln63_20_cast_fu_2009_p1;
reg  signed [23:0] sext_ln63_20_cast_reg_4375;
wire  signed [23:0] sext_ln63_19_cast_fu_2013_p1;
reg  signed [23:0] sext_ln63_19_cast_reg_4380;
wire  signed [23:0] sext_ln63_18_cast_fu_2017_p1;
reg  signed [23:0] sext_ln63_18_cast_reg_4385;
wire  signed [23:0] sext_ln63_17_cast_fu_2021_p1;
reg  signed [23:0] sext_ln63_17_cast_reg_4390;
wire  signed [23:0] sext_ln63_16_cast_fu_2025_p1;
reg  signed [23:0] sext_ln63_16_cast_reg_4395;
wire  signed [23:0] sext_ln63_15_cast_fu_2029_p1;
reg  signed [23:0] sext_ln63_15_cast_reg_4400;
wire  signed [23:0] sext_ln63_14_cast_fu_2033_p1;
reg  signed [23:0] sext_ln63_14_cast_reg_4405;
wire  signed [23:0] sext_ln63_13_cast_fu_2037_p1;
reg  signed [23:0] sext_ln63_13_cast_reg_4410;
wire  signed [23:0] sext_ln63_12_cast_fu_2041_p1;
reg  signed [23:0] sext_ln63_12_cast_reg_4415;
wire  signed [23:0] sext_ln63_11_cast_fu_2045_p1;
reg  signed [23:0] sext_ln63_11_cast_reg_4420;
wire  signed [23:0] sext_ln63_10_cast_fu_2049_p1;
reg  signed [23:0] sext_ln63_10_cast_reg_4425;
wire  signed [23:0] sext_ln63_9_cast_fu_2053_p1;
reg  signed [23:0] sext_ln63_9_cast_reg_4430;
wire  signed [23:0] sext_ln63_8_cast_fu_2057_p1;
reg  signed [23:0] sext_ln63_8_cast_reg_4435;
wire  signed [23:0] sext_ln63_7_cast_fu_2061_p1;
reg  signed [23:0] sext_ln63_7_cast_reg_4440;
wire  signed [23:0] sext_ln63_6_cast_fu_2065_p1;
reg  signed [23:0] sext_ln63_6_cast_reg_4445;
wire  signed [23:0] sext_ln63_5_cast_fu_2069_p1;
reg  signed [23:0] sext_ln63_5_cast_reg_4450;
wire  signed [23:0] sext_ln63_4_cast_fu_2073_p1;
reg  signed [23:0] sext_ln63_4_cast_reg_4455;
wire  signed [23:0] sext_ln63_3_cast_fu_2077_p1;
reg  signed [23:0] sext_ln63_3_cast_reg_4460;
wire  signed [23:0] sext_ln63_2_cast_fu_2081_p1;
reg  signed [23:0] sext_ln63_2_cast_reg_4465;
wire  signed [23:0] sext_ln63_1_cast_fu_2085_p1;
reg  signed [23:0] sext_ln63_1_cast_reg_4470;
wire  signed [23:0] sext_ln63_cast_fu_2089_p1;
reg  signed [23:0] sext_ln63_cast_reg_4475;
reg   [0:0] icmp_ln58_reg_4480;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter1_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter2_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter3_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter4_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter5_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter6_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter7_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter8_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter9_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter10_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter11_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter12_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter13_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter14_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter15_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter16_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter17_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter18_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter19_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter20_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter21_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter22_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter23_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter24_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter25_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter26_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter27_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter28_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter29_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter30_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter31_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter32_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter33_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter34_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter35_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter36_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter37_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter38_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter39_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter40_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter41_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter42_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter43_reg;
reg   [0:0] icmp_ln58_reg_4480_pp0_iter44_reg;
wire   [63:0] zext_ln58_fu_2113_p1;
reg   [63:0] zext_ln58_reg_4484;
reg   [63:0] zext_ln58_reg_4484_pp0_iter1_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter2_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter3_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter4_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter5_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter6_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter7_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter8_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter9_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter10_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter11_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter12_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter13_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter14_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter15_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter16_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter17_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter18_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter19_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter20_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter21_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter22_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter23_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter24_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter25_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter26_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter27_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter28_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter29_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter30_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter31_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter32_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter33_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter34_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter35_reg;
reg   [63:0] zext_ln58_reg_4484_pp0_iter36_reg;
wire   [5:0] trunc_ln58_fu_2119_p1;
reg   [5:0] trunc_ln58_reg_4530;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter1_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter2_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter3_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter4_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter5_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter6_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter7_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter8_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter9_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter10_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter11_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter12_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter13_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter14_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter15_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter16_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter17_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter18_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter19_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter20_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter21_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter22_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter23_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter24_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter25_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter26_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter27_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter28_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter29_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter30_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter31_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter32_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter33_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter34_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter35_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter36_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter37_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter38_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter39_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter40_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter41_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter42_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter43_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter44_reg;
reg   [5:0] trunc_ln58_reg_4530_pp0_iter45_reg;
reg  signed [10:0] layer1_weights_0_load_reg_4544;
reg   [15:0] tmp_6_reg_4559;
reg  signed [12:0] layer1_weights_39_load_reg_5134;
reg   [11:0] layer1_weights_40_load_reg_5139;
reg  signed [11:0] layer1_weights_40_load_reg_5139_pp0_iter39_reg;
reg   [12:0] layer1_weights_41_load_reg_5144;
reg   [12:0] layer1_weights_41_load_reg_5144_pp0_iter39_reg;
reg  signed [12:0] layer1_weights_41_load_reg_5144_pp0_iter40_reg;
reg   [12:0] layer1_weights_42_load_reg_5149;
reg   [12:0] layer1_weights_42_load_reg_5149_pp0_iter39_reg;
reg   [12:0] layer1_weights_42_load_reg_5149_pp0_iter40_reg;
reg  signed [12:0] layer1_weights_42_load_reg_5149_pp0_iter41_reg;
reg  signed [10:0] layer1_bias_load_reg_5154;
reg  signed [10:0] layer1_bias_load_reg_5154_pp0_iter39_reg;
reg  signed [10:0] layer1_bias_load_reg_5154_pp0_iter40_reg;
reg  signed [10:0] layer1_bias_load_reg_5154_pp0_iter41_reg;
reg  signed [10:0] layer1_bias_load_reg_5154_pp0_iter42_reg;
reg  signed [10:0] layer1_bias_load_reg_5154_pp0_iter43_reg;
reg  signed [10:0] layer1_bias_load_reg_5154_pp0_iter44_reg;
wire   [14:0] add_ln60_fu_3044_p2;
reg   [14:0] add_ln60_reg_5210;
wire   [0:0] icmp_ln14_fu_3050_p2;
reg   [0:0] icmp_ln14_reg_5215;
wire    ap_block_pp0_stage0;
reg   [6:0] i_fu_460;
wire   [6:0] add_ln58_fu_2107_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_2;
reg   [15:0] layer1_output_fu_464;
wire   [15:0] zext_ln66_fu_3062_p1;
reg   [15:0] layer1_output_1_fu_468;
reg   [15:0] layer1_output_2_fu_472;
reg   [15:0] layer1_output_3_fu_476;
reg   [15:0] layer1_output_4_fu_480;
reg   [15:0] layer1_output_5_fu_484;
reg   [15:0] layer1_output_6_fu_488;
reg   [15:0] layer1_output_7_fu_492;
reg   [15:0] layer1_output_8_fu_496;
reg   [15:0] layer1_output_9_fu_500;
reg   [15:0] layer1_output_10_fu_504;
reg   [15:0] layer1_output_11_fu_508;
reg   [15:0] layer1_output_12_fu_512;
reg   [15:0] layer1_output_13_fu_516;
reg   [15:0] layer1_output_14_fu_520;
reg   [15:0] layer1_output_15_fu_524;
reg   [15:0] layer1_output_16_fu_528;
reg   [15:0] layer1_output_17_fu_532;
reg   [15:0] layer1_output_18_fu_536;
reg   [15:0] layer1_output_19_fu_540;
reg   [15:0] layer1_output_20_fu_544;
reg   [15:0] layer1_output_21_fu_548;
reg   [15:0] layer1_output_22_fu_552;
reg   [15:0] layer1_output_23_fu_556;
reg   [15:0] layer1_output_24_fu_560;
reg   [15:0] layer1_output_25_fu_564;
reg   [15:0] layer1_output_26_fu_568;
reg   [15:0] layer1_output_27_fu_572;
reg   [15:0] layer1_output_28_fu_576;
reg   [15:0] layer1_output_29_fu_580;
reg   [15:0] layer1_output_30_fu_584;
reg   [15:0] layer1_output_31_fu_588;
reg   [15:0] layer1_output_32_fu_592;
reg   [15:0] layer1_output_33_fu_596;
reg   [15:0] layer1_output_34_fu_600;
reg   [15:0] layer1_output_35_fu_604;
reg   [15:0] layer1_output_36_fu_608;
reg   [15:0] layer1_output_37_fu_612;
reg   [15:0] layer1_output_38_fu_616;
reg   [15:0] layer1_output_39_fu_620;
reg   [15:0] layer1_output_40_fu_624;
reg   [15:0] layer1_output_41_fu_628;
reg   [15:0] layer1_output_42_fu_632;
reg   [15:0] layer1_output_43_fu_636;
reg   [15:0] layer1_output_44_fu_640;
reg   [15:0] layer1_output_45_fu_644;
reg   [15:0] layer1_output_46_fu_648;
reg   [15:0] layer1_output_47_fu_652;
reg   [15:0] layer1_output_48_fu_656;
reg   [15:0] layer1_output_49_fu_660;
reg   [15:0] layer1_output_50_fu_664;
reg   [15:0] layer1_output_51_fu_668;
reg   [15:0] layer1_output_52_fu_672;
reg   [15:0] layer1_output_53_fu_676;
reg   [15:0] layer1_output_54_fu_680;
reg   [15:0] layer1_output_55_fu_684;
reg   [15:0] layer1_output_56_fu_688;
wire    ap_block_pp0_stage0_01001;
wire  signed [15:0] mul_ln63_fu_2135_p1;
wire   [23:0] mul_ln63_fu_2135_p2;
wire  signed [23:0] tmp_7_fu_2165_p1;
wire   [23:0] grp_fu_3579_p3;
wire   [15:0] tmp_7_fu_2165_p4;
wire  signed [23:0] tmp_8_fu_2186_p1;
wire   [23:0] grp_fu_3587_p3;
wire   [15:0] tmp_8_fu_2186_p4;
wire  signed [23:0] tmp_9_fu_2207_p1;
wire   [23:0] grp_fu_3595_p3;
wire   [15:0] tmp_9_fu_2207_p4;
wire  signed [23:0] tmp_10_fu_2228_p1;
wire   [23:0] grp_fu_3603_p3;
wire   [15:0] tmp_10_fu_2228_p4;
wire  signed [23:0] tmp_11_fu_2249_p1;
wire   [23:0] grp_fu_3611_p3;
wire   [15:0] tmp_11_fu_2249_p4;
wire  signed [23:0] tmp_12_fu_2270_p1;
wire   [23:0] grp_fu_3619_p3;
wire   [15:0] tmp_12_fu_2270_p4;
wire  signed [23:0] tmp_13_fu_2291_p1;
wire   [23:0] grp_fu_3627_p3;
wire   [15:0] tmp_13_fu_2291_p4;
wire  signed [23:0] tmp_14_fu_2312_p1;
wire   [23:0] grp_fu_3635_p3;
wire   [15:0] tmp_14_fu_2312_p4;
wire  signed [23:0] tmp_15_fu_2333_p1;
wire   [23:0] grp_fu_3643_p3;
wire   [15:0] tmp_15_fu_2333_p4;
wire  signed [23:0] tmp_16_fu_2354_p1;
wire   [23:0] grp_fu_3651_p3;
wire   [15:0] tmp_16_fu_2354_p4;
wire  signed [23:0] tmp_17_fu_2375_p1;
wire   [23:0] grp_fu_3659_p3;
wire   [15:0] tmp_17_fu_2375_p4;
wire  signed [23:0] tmp_18_fu_2396_p1;
wire   [23:0] grp_fu_3667_p3;
wire   [15:0] tmp_18_fu_2396_p4;
wire  signed [23:0] tmp_19_fu_2417_p1;
wire   [23:0] grp_fu_3675_p3;
wire   [15:0] tmp_19_fu_2417_p4;
wire  signed [23:0] tmp_20_fu_2438_p1;
wire   [23:0] grp_fu_3683_p3;
wire   [15:0] tmp_20_fu_2438_p4;
wire  signed [23:0] tmp_21_fu_2459_p1;
wire   [23:0] grp_fu_3691_p3;
wire   [15:0] tmp_21_fu_2459_p4;
wire  signed [23:0] tmp_22_fu_2480_p1;
wire   [23:0] grp_fu_3699_p3;
wire   [15:0] tmp_22_fu_2480_p4;
wire  signed [23:0] tmp_23_fu_2501_p1;
wire   [23:0] grp_fu_3707_p3;
wire   [15:0] tmp_23_fu_2501_p4;
wire  signed [23:0] tmp_24_fu_2522_p1;
wire   [23:0] grp_fu_3715_p3;
wire   [15:0] tmp_24_fu_2522_p4;
wire  signed [23:0] tmp_25_fu_2543_p1;
wire   [23:0] grp_fu_3723_p3;
wire   [15:0] tmp_25_fu_2543_p4;
wire  signed [23:0] tmp_26_fu_2564_p1;
wire   [23:0] grp_fu_3731_p3;
wire   [15:0] tmp_26_fu_2564_p4;
wire  signed [23:0] tmp_27_fu_2585_p1;
wire   [23:0] grp_fu_3739_p3;
wire   [15:0] tmp_27_fu_2585_p4;
wire  signed [23:0] tmp_28_fu_2606_p1;
wire   [23:0] grp_fu_3747_p3;
wire   [15:0] tmp_28_fu_2606_p4;
wire  signed [23:0] tmp_29_fu_2627_p1;
wire   [23:0] grp_fu_3755_p3;
wire   [15:0] tmp_29_fu_2627_p4;
wire  signed [23:0] tmp_30_fu_2648_p1;
wire   [23:0] grp_fu_3763_p3;
wire   [15:0] tmp_30_fu_2648_p4;
wire  signed [23:0] tmp_31_fu_2669_p1;
wire   [23:0] grp_fu_3771_p3;
wire   [15:0] tmp_31_fu_2669_p4;
wire  signed [23:0] tmp_32_fu_2690_p1;
wire   [23:0] grp_fu_3779_p3;
wire   [15:0] tmp_32_fu_2690_p4;
wire  signed [23:0] tmp_33_fu_2711_p1;
wire   [23:0] grp_fu_3787_p3;
wire   [15:0] tmp_33_fu_2711_p4;
wire  signed [23:0] tmp_34_fu_2732_p1;
wire   [23:0] grp_fu_3795_p3;
wire   [15:0] tmp_34_fu_2732_p4;
wire  signed [23:0] tmp_35_fu_2753_p1;
wire   [23:0] grp_fu_3803_p3;
wire   [15:0] tmp_35_fu_2753_p4;
wire  signed [23:0] tmp_36_fu_2774_p1;
wire   [23:0] grp_fu_3811_p3;
wire   [15:0] tmp_36_fu_2774_p4;
wire  signed [23:0] tmp_37_fu_2795_p1;
wire   [23:0] grp_fu_3819_p3;
wire   [15:0] tmp_37_fu_2795_p4;
wire  signed [23:0] tmp_38_fu_2816_p1;
wire   [23:0] grp_fu_3827_p3;
wire   [15:0] tmp_38_fu_2816_p4;
wire  signed [23:0] tmp_39_fu_2837_p1;
wire   [23:0] grp_fu_3835_p3;
wire   [15:0] tmp_39_fu_2837_p4;
wire  signed [23:0] tmp_40_fu_2858_p1;
wire   [23:0] grp_fu_3843_p3;
wire   [15:0] tmp_40_fu_2858_p4;
wire  signed [23:0] tmp_41_fu_2879_p1;
wire   [23:0] grp_fu_3851_p3;
wire   [15:0] tmp_41_fu_2879_p4;
wire  signed [23:0] tmp_42_fu_2900_p1;
wire   [23:0] grp_fu_3859_p3;
wire   [15:0] tmp_42_fu_2900_p4;
wire  signed [23:0] tmp_43_fu_2920_p1;
wire   [23:0] grp_fu_3867_p3;
wire   [15:0] tmp_43_fu_2920_p4;
wire  signed [23:0] tmp_44_fu_2940_p1;
wire   [23:0] grp_fu_3875_p3;
wire   [15:0] tmp_44_fu_2940_p4;
wire  signed [23:0] tmp_45_fu_2960_p1;
wire   [23:0] grp_fu_3883_p3;
wire   [15:0] tmp_45_fu_2960_p4;
wire  signed [23:0] tmp_46_fu_2980_p1;
wire   [23:0] grp_fu_3891_p3;
wire   [15:0] tmp_46_fu_2980_p4;
wire  signed [23:0] tmp_47_fu_2997_p1;
wire   [23:0] grp_fu_3899_p3;
wire   [15:0] tmp_47_fu_2997_p4;
wire  signed [23:0] sum_fu_3014_p1;
wire   [23:0] grp_fu_3907_p3;
wire  signed [23:0] trunc_ln1_fu_3026_p1;
wire  signed [15:0] sext_ln65_fu_3023_p1;
wire   [15:0] sum_fu_3014_p4;
wire  signed [14:0] sext_ln65_1_fu_3035_p1;
wire   [14:0] trunc_ln1_fu_3026_p4;
wire   [15:0] sum_3_fu_3038_p2;
wire   [14:0] layer1_output_57_fu_3056_p3;
wire  signed [15:0] grp_fu_3579_p1;
wire   [23:0] grp_fu_3579_p2;
wire  signed [15:0] grp_fu_3587_p1;
wire   [23:0] grp_fu_3587_p2;
wire  signed [15:0] grp_fu_3595_p1;
wire   [23:0] grp_fu_3595_p2;
wire  signed [15:0] grp_fu_3603_p1;
wire   [23:0] grp_fu_3603_p2;
wire  signed [15:0] grp_fu_3611_p1;
wire   [23:0] grp_fu_3611_p2;
wire  signed [15:0] grp_fu_3619_p1;
wire   [23:0] grp_fu_3619_p2;
wire  signed [15:0] grp_fu_3627_p1;
wire   [23:0] grp_fu_3627_p2;
wire  signed [15:0] grp_fu_3635_p1;
wire   [23:0] grp_fu_3635_p2;
wire  signed [15:0] grp_fu_3643_p1;
wire   [23:0] grp_fu_3643_p2;
wire  signed [15:0] grp_fu_3651_p1;
wire   [23:0] grp_fu_3651_p2;
wire  signed [15:0] grp_fu_3659_p1;
wire   [23:0] grp_fu_3659_p2;
wire  signed [15:0] grp_fu_3667_p1;
wire   [23:0] grp_fu_3667_p2;
wire  signed [15:0] grp_fu_3675_p1;
wire   [23:0] grp_fu_3675_p2;
wire  signed [15:0] grp_fu_3683_p1;
wire   [23:0] grp_fu_3683_p2;
wire  signed [15:0] grp_fu_3691_p1;
wire   [23:0] grp_fu_3691_p2;
wire  signed [15:0] grp_fu_3699_p1;
wire   [23:0] grp_fu_3699_p2;
wire  signed [15:0] grp_fu_3707_p1;
wire   [23:0] grp_fu_3707_p2;
wire  signed [15:0] grp_fu_3715_p1;
wire   [23:0] grp_fu_3715_p2;
wire  signed [15:0] grp_fu_3723_p1;
wire   [23:0] grp_fu_3723_p2;
wire  signed [15:0] grp_fu_3731_p1;
wire   [23:0] grp_fu_3731_p2;
wire  signed [15:0] grp_fu_3739_p1;
wire   [23:0] grp_fu_3739_p2;
wire  signed [15:0] grp_fu_3747_p1;
wire   [23:0] grp_fu_3747_p2;
wire  signed [15:0] grp_fu_3755_p1;
wire   [23:0] grp_fu_3755_p2;
wire  signed [15:0] grp_fu_3763_p1;
wire   [23:0] grp_fu_3763_p2;
wire  signed [15:0] grp_fu_3771_p1;
wire   [23:0] grp_fu_3771_p2;
wire  signed [15:0] grp_fu_3779_p1;
wire   [23:0] grp_fu_3779_p2;
wire  signed [15:0] grp_fu_3787_p1;
wire   [23:0] grp_fu_3787_p2;
wire  signed [15:0] grp_fu_3795_p1;
wire   [23:0] grp_fu_3795_p2;
wire  signed [15:0] grp_fu_3803_p1;
wire   [23:0] grp_fu_3803_p2;
wire  signed [15:0] grp_fu_3811_p1;
wire   [23:0] grp_fu_3811_p2;
wire  signed [15:0] grp_fu_3819_p1;
wire   [23:0] grp_fu_3819_p2;
wire  signed [15:0] grp_fu_3827_p1;
wire   [23:0] grp_fu_3827_p2;
wire  signed [15:0] grp_fu_3835_p1;
wire   [23:0] grp_fu_3835_p2;
wire  signed [15:0] grp_fu_3843_p1;
wire   [23:0] grp_fu_3843_p2;
wire  signed [15:0] grp_fu_3851_p1;
wire   [23:0] grp_fu_3851_p2;
wire  signed [15:0] grp_fu_3859_p1;
wire   [23:0] grp_fu_3859_p2;
wire  signed [15:0] grp_fu_3867_p1;
wire   [23:0] grp_fu_3867_p2;
wire  signed [15:0] grp_fu_3875_p1;
wire   [23:0] grp_fu_3875_p2;
wire  signed [15:0] grp_fu_3883_p1;
wire   [23:0] grp_fu_3883_p2;
wire  signed [15:0] grp_fu_3891_p1;
wire   [23:0] grp_fu_3891_p2;
wire  signed [15:0] grp_fu_3899_p1;
wire   [23:0] grp_fu_3899_p2;
wire  signed [15:0] grp_fu_3907_p1;
wire   [23:0] grp_fu_3907_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_done_reg = 1'b0;
end

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_0_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_0_address0),
    .ce0(layer1_weights_0_ce0),
    .q0(layer1_weights_0_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_1_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_1_address0),
    .ce0(layer1_weights_1_ce0),
    .q0(layer1_weights_1_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_2_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_2_address0),
    .ce0(layer1_weights_2_ce0),
    .q0(layer1_weights_2_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_3_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_3_address0),
    .ce0(layer1_weights_3_ce0),
    .q0(layer1_weights_3_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_4_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_4_address0),
    .ce0(layer1_weights_4_ce0),
    .q0(layer1_weights_4_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_5_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_5_address0),
    .ce0(layer1_weights_5_ce0),
    .q0(layer1_weights_5_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_6_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_6_address0),
    .ce0(layer1_weights_6_ce0),
    .q0(layer1_weights_6_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_7_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_7_address0),
    .ce0(layer1_weights_7_ce0),
    .q0(layer1_weights_7_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_8_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_8_address0),
    .ce0(layer1_weights_8_ce0),
    .q0(layer1_weights_8_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_9_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_9_address0),
    .ce0(layer1_weights_9_ce0),
    .q0(layer1_weights_9_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_10_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_10_address0),
    .ce0(layer1_weights_10_ce0),
    .q0(layer1_weights_10_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_11_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_11_address0),
    .ce0(layer1_weights_11_ce0),
    .q0(layer1_weights_11_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_12_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_12_address0),
    .ce0(layer1_weights_12_ce0),
    .q0(layer1_weights_12_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_13_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_13_address0),
    .ce0(layer1_weights_13_ce0),
    .q0(layer1_weights_13_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_14_ROM_AUTO_1R #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_14_address0),
    .ce0(layer1_weights_14_ce0),
    .q0(layer1_weights_14_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_15_ROM_AUTO_1R #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_15_address0),
    .ce0(layer1_weights_15_ce0),
    .q0(layer1_weights_15_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_16_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_16_address0),
    .ce0(layer1_weights_16_ce0),
    .q0(layer1_weights_16_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_17_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_17_address0),
    .ce0(layer1_weights_17_ce0),
    .q0(layer1_weights_17_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_18_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_18_address0),
    .ce0(layer1_weights_18_ce0),
    .q0(layer1_weights_18_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_19_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_19_address0),
    .ce0(layer1_weights_19_ce0),
    .q0(layer1_weights_19_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_20_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_20_address0),
    .ce0(layer1_weights_20_ce0),
    .q0(layer1_weights_20_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_21_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_21_address0),
    .ce0(layer1_weights_21_ce0),
    .q0(layer1_weights_21_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_22_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_22_address0),
    .ce0(layer1_weights_22_ce0),
    .q0(layer1_weights_22_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_23_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_23_address0),
    .ce0(layer1_weights_23_ce0),
    .q0(layer1_weights_23_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_24_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_24_address0),
    .ce0(layer1_weights_24_ce0),
    .q0(layer1_weights_24_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_25_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_25_address0),
    .ce0(layer1_weights_25_ce0),
    .q0(layer1_weights_25_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_26_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_26_address0),
    .ce0(layer1_weights_26_ce0),
    .q0(layer1_weights_26_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_27_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_27_address0),
    .ce0(layer1_weights_27_ce0),
    .q0(layer1_weights_27_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_28_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_28_address0),
    .ce0(layer1_weights_28_ce0),
    .q0(layer1_weights_28_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_29_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_29_address0),
    .ce0(layer1_weights_29_ce0),
    .q0(layer1_weights_29_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_30_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_30_address0),
    .ce0(layer1_weights_30_ce0),
    .q0(layer1_weights_30_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_31_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_31_address0),
    .ce0(layer1_weights_31_ce0),
    .q0(layer1_weights_31_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_32_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_32_address0),
    .ce0(layer1_weights_32_ce0),
    .q0(layer1_weights_32_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_33_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_33_address0),
    .ce0(layer1_weights_33_ce0),
    .q0(layer1_weights_33_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_34_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_34_address0),
    .ce0(layer1_weights_34_ce0),
    .q0(layer1_weights_34_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_35_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_35_address0),
    .ce0(layer1_weights_35_ce0),
    .q0(layer1_weights_35_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_36_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_36_address0),
    .ce0(layer1_weights_36_ce0),
    .q0(layer1_weights_36_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_37_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_37_address0),
    .ce0(layer1_weights_37_ce0),
    .q0(layer1_weights_37_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_38_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_38_address0),
    .ce0(layer1_weights_38_ce0),
    .q0(layer1_weights_38_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_39_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_39_address0),
    .ce0(layer1_weights_39_ce0),
    .q0(layer1_weights_39_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_40_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_40_address0),
    .ce0(layer1_weights_40_ce0),
    .q0(layer1_weights_40_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_41_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_41_address0),
    .ce0(layer1_weights_41_ce0),
    .q0(layer1_weights_41_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_weights_42_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_weights_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_weights_42_address0),
    .ce0(layer1_weights_42_ce0),
    .q0(layer1_weights_42_q0)
);

neural_network_neural_network_Pipeline_VITIS_LOOP_58_1_layer1_bias_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer1_bias_address0),
    .ce0(layer1_bias_ce0),
    .q0(layer1_bias_q0)
);

neural_network_mul_11s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_11s_16s_24_1_1_U1(
    .din0(layer1_weights_0_load_reg_4544),
    .din1(mul_ln63_fu_2135_p1),
    .dout(mul_ln63_fu_2135_p2)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_1_q0),
    .din1(grp_fu_3579_p1),
    .din2(grp_fu_3579_p2),
    .ce(1'b1),
    .dout(grp_fu_3579_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_2_q0),
    .din1(grp_fu_3587_p1),
    .din2(grp_fu_3587_p2),
    .ce(1'b1),
    .dout(grp_fu_3587_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_3_q0),
    .din1(grp_fu_3595_p1),
    .din2(grp_fu_3595_p2),
    .ce(1'b1),
    .dout(grp_fu_3595_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_4_q0),
    .din1(grp_fu_3603_p1),
    .din2(grp_fu_3603_p2),
    .ce(1'b1),
    .dout(grp_fu_3603_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_5_q0),
    .din1(grp_fu_3611_p1),
    .din2(grp_fu_3611_p2),
    .ce(1'b1),
    .dout(grp_fu_3611_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_6_q0),
    .din1(grp_fu_3619_p1),
    .din2(grp_fu_3619_p2),
    .ce(1'b1),
    .dout(grp_fu_3619_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_7_q0),
    .din1(grp_fu_3627_p1),
    .din2(grp_fu_3627_p2),
    .ce(1'b1),
    .dout(grp_fu_3627_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_8_q0),
    .din1(grp_fu_3635_p1),
    .din2(grp_fu_3635_p2),
    .ce(1'b1),
    .dout(grp_fu_3635_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_9_q0),
    .din1(grp_fu_3643_p1),
    .din2(grp_fu_3643_p2),
    .ce(1'b1),
    .dout(grp_fu_3643_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_10_q0),
    .din1(grp_fu_3651_p1),
    .din2(grp_fu_3651_p2),
    .ce(1'b1),
    .dout(grp_fu_3651_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_11_q0),
    .din1(grp_fu_3659_p1),
    .din2(grp_fu_3659_p2),
    .ce(1'b1),
    .dout(grp_fu_3659_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_12_q0),
    .din1(grp_fu_3667_p1),
    .din2(grp_fu_3667_p2),
    .ce(1'b1),
    .dout(grp_fu_3667_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_13_q0),
    .din1(grp_fu_3675_p1),
    .din2(grp_fu_3675_p2),
    .ce(1'b1),
    .dout(grp_fu_3675_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_14_q0),
    .din1(grp_fu_3683_p1),
    .din2(grp_fu_3683_p2),
    .ce(1'b1),
    .dout(grp_fu_3683_p3)
);

neural_network_mac_muladd_15s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15s_16s_24ns_24_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_15_q0),
    .din1(grp_fu_3691_p1),
    .din2(grp_fu_3691_p2),
    .ce(1'b1),
    .dout(grp_fu_3691_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_16_q0),
    .din1(grp_fu_3699_p1),
    .din2(grp_fu_3699_p2),
    .ce(1'b1),
    .dout(grp_fu_3699_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_17_q0),
    .din1(grp_fu_3707_p1),
    .din2(grp_fu_3707_p2),
    .ce(1'b1),
    .dout(grp_fu_3707_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_18_q0),
    .din1(grp_fu_3715_p1),
    .din2(grp_fu_3715_p2),
    .ce(1'b1),
    .dout(grp_fu_3715_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_19_q0),
    .din1(grp_fu_3723_p1),
    .din2(grp_fu_3723_p2),
    .ce(1'b1),
    .dout(grp_fu_3723_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_20_q0),
    .din1(grp_fu_3731_p1),
    .din2(grp_fu_3731_p2),
    .ce(1'b1),
    .dout(grp_fu_3731_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_21_q0),
    .din1(grp_fu_3739_p1),
    .din2(grp_fu_3739_p2),
    .ce(1'b1),
    .dout(grp_fu_3739_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_22_q0),
    .din1(grp_fu_3747_p1),
    .din2(grp_fu_3747_p2),
    .ce(1'b1),
    .dout(grp_fu_3747_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_23_q0),
    .din1(grp_fu_3755_p1),
    .din2(grp_fu_3755_p2),
    .ce(1'b1),
    .dout(grp_fu_3755_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_24_q0),
    .din1(grp_fu_3763_p1),
    .din2(grp_fu_3763_p2),
    .ce(1'b1),
    .dout(grp_fu_3763_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_25_q0),
    .din1(grp_fu_3771_p1),
    .din2(grp_fu_3771_p2),
    .ce(1'b1),
    .dout(grp_fu_3771_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_26_q0),
    .din1(grp_fu_3779_p1),
    .din2(grp_fu_3779_p2),
    .ce(1'b1),
    .dout(grp_fu_3779_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_27_q0),
    .din1(grp_fu_3787_p1),
    .din2(grp_fu_3787_p2),
    .ce(1'b1),
    .dout(grp_fu_3787_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_28_q0),
    .din1(grp_fu_3795_p1),
    .din2(grp_fu_3795_p2),
    .ce(1'b1),
    .dout(grp_fu_3795_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_29_q0),
    .din1(grp_fu_3803_p1),
    .din2(grp_fu_3803_p2),
    .ce(1'b1),
    .dout(grp_fu_3803_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_30_q0),
    .din1(grp_fu_3811_p1),
    .din2(grp_fu_3811_p2),
    .ce(1'b1),
    .dout(grp_fu_3811_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_31_q0),
    .din1(grp_fu_3819_p1),
    .din2(grp_fu_3819_p2),
    .ce(1'b1),
    .dout(grp_fu_3819_p3)
);

neural_network_mac_muladd_11s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_11s_16s_24ns_24_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_32_q0),
    .din1(grp_fu_3827_p1),
    .din2(grp_fu_3827_p2),
    .ce(1'b1),
    .dout(grp_fu_3827_p3)
);

neural_network_mac_muladd_10s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_10s_16s_24ns_24_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_33_q0),
    .din1(grp_fu_3835_p1),
    .din2(grp_fu_3835_p2),
    .ce(1'b1),
    .dout(grp_fu_3835_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_34_q0),
    .din1(grp_fu_3843_p1),
    .din2(grp_fu_3843_p2),
    .ce(1'b1),
    .dout(grp_fu_3843_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_35_q0),
    .din1(grp_fu_3851_p1),
    .din2(grp_fu_3851_p2),
    .ce(1'b1),
    .dout(grp_fu_3851_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_36_q0),
    .din1(grp_fu_3859_p1),
    .din2(grp_fu_3859_p2),
    .ce(1'b1),
    .dout(grp_fu_3859_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_37_q0),
    .din1(grp_fu_3867_p1),
    .din2(grp_fu_3867_p2),
    .ce(1'b1),
    .dout(grp_fu_3867_p3)
);

neural_network_mac_muladd_14s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_14s_16s_24ns_24_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_38_q0),
    .din1(grp_fu_3875_p1),
    .din2(grp_fu_3875_p2),
    .ce(1'b1),
    .dout(grp_fu_3875_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_39_load_reg_5134),
    .din1(grp_fu_3883_p1),
    .din2(grp_fu_3883_p2),
    .ce(1'b1),
    .dout(grp_fu_3883_p3)
);

neural_network_mac_muladd_12s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_12s_16s_24ns_24_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_40_load_reg_5139_pp0_iter39_reg),
    .din1(grp_fu_3891_p1),
    .din2(grp_fu_3891_p2),
    .ce(1'b1),
    .dout(grp_fu_3891_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_41_load_reg_5144_pp0_iter40_reg),
    .din1(grp_fu_3899_p1),
    .din2(grp_fu_3899_p2),
    .ce(1'b1),
    .dout(grp_fu_3899_p3)
);

neural_network_mac_muladd_13s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_13s_16s_24ns_24_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer1_weights_42_load_reg_5149_pp0_iter41_reg),
    .din1(grp_fu_3907_p1),
    .din2(grp_fu_3907_p2),
    .ce(1'b1),
    .dout(grp_fu_3907_p3)
);

neural_network_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter45_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln58_fu_2101_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_460 <= add_ln58_fu_2107_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_460 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln60_reg_5210 <= add_ln60_fu_3044_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln14_reg_5215 <= icmp_ln14_fu_3050_p2;
        icmp_ln58_reg_4480_pp0_iter10_reg <= icmp_ln58_reg_4480_pp0_iter9_reg;
        icmp_ln58_reg_4480_pp0_iter11_reg <= icmp_ln58_reg_4480_pp0_iter10_reg;
        icmp_ln58_reg_4480_pp0_iter12_reg <= icmp_ln58_reg_4480_pp0_iter11_reg;
        icmp_ln58_reg_4480_pp0_iter13_reg <= icmp_ln58_reg_4480_pp0_iter12_reg;
        icmp_ln58_reg_4480_pp0_iter14_reg <= icmp_ln58_reg_4480_pp0_iter13_reg;
        icmp_ln58_reg_4480_pp0_iter15_reg <= icmp_ln58_reg_4480_pp0_iter14_reg;
        icmp_ln58_reg_4480_pp0_iter16_reg <= icmp_ln58_reg_4480_pp0_iter15_reg;
        icmp_ln58_reg_4480_pp0_iter17_reg <= icmp_ln58_reg_4480_pp0_iter16_reg;
        icmp_ln58_reg_4480_pp0_iter18_reg <= icmp_ln58_reg_4480_pp0_iter17_reg;
        icmp_ln58_reg_4480_pp0_iter19_reg <= icmp_ln58_reg_4480_pp0_iter18_reg;
        icmp_ln58_reg_4480_pp0_iter20_reg <= icmp_ln58_reg_4480_pp0_iter19_reg;
        icmp_ln58_reg_4480_pp0_iter21_reg <= icmp_ln58_reg_4480_pp0_iter20_reg;
        icmp_ln58_reg_4480_pp0_iter22_reg <= icmp_ln58_reg_4480_pp0_iter21_reg;
        icmp_ln58_reg_4480_pp0_iter23_reg <= icmp_ln58_reg_4480_pp0_iter22_reg;
        icmp_ln58_reg_4480_pp0_iter24_reg <= icmp_ln58_reg_4480_pp0_iter23_reg;
        icmp_ln58_reg_4480_pp0_iter25_reg <= icmp_ln58_reg_4480_pp0_iter24_reg;
        icmp_ln58_reg_4480_pp0_iter26_reg <= icmp_ln58_reg_4480_pp0_iter25_reg;
        icmp_ln58_reg_4480_pp0_iter27_reg <= icmp_ln58_reg_4480_pp0_iter26_reg;
        icmp_ln58_reg_4480_pp0_iter28_reg <= icmp_ln58_reg_4480_pp0_iter27_reg;
        icmp_ln58_reg_4480_pp0_iter29_reg <= icmp_ln58_reg_4480_pp0_iter28_reg;
        icmp_ln58_reg_4480_pp0_iter2_reg <= icmp_ln58_reg_4480_pp0_iter1_reg;
        icmp_ln58_reg_4480_pp0_iter30_reg <= icmp_ln58_reg_4480_pp0_iter29_reg;
        icmp_ln58_reg_4480_pp0_iter31_reg <= icmp_ln58_reg_4480_pp0_iter30_reg;
        icmp_ln58_reg_4480_pp0_iter32_reg <= icmp_ln58_reg_4480_pp0_iter31_reg;
        icmp_ln58_reg_4480_pp0_iter33_reg <= icmp_ln58_reg_4480_pp0_iter32_reg;
        icmp_ln58_reg_4480_pp0_iter34_reg <= icmp_ln58_reg_4480_pp0_iter33_reg;
        icmp_ln58_reg_4480_pp0_iter35_reg <= icmp_ln58_reg_4480_pp0_iter34_reg;
        icmp_ln58_reg_4480_pp0_iter36_reg <= icmp_ln58_reg_4480_pp0_iter35_reg;
        icmp_ln58_reg_4480_pp0_iter37_reg <= icmp_ln58_reg_4480_pp0_iter36_reg;
        icmp_ln58_reg_4480_pp0_iter38_reg <= icmp_ln58_reg_4480_pp0_iter37_reg;
        icmp_ln58_reg_4480_pp0_iter39_reg <= icmp_ln58_reg_4480_pp0_iter38_reg;
        icmp_ln58_reg_4480_pp0_iter3_reg <= icmp_ln58_reg_4480_pp0_iter2_reg;
        icmp_ln58_reg_4480_pp0_iter40_reg <= icmp_ln58_reg_4480_pp0_iter39_reg;
        icmp_ln58_reg_4480_pp0_iter41_reg <= icmp_ln58_reg_4480_pp0_iter40_reg;
        icmp_ln58_reg_4480_pp0_iter42_reg <= icmp_ln58_reg_4480_pp0_iter41_reg;
        icmp_ln58_reg_4480_pp0_iter43_reg <= icmp_ln58_reg_4480_pp0_iter42_reg;
        icmp_ln58_reg_4480_pp0_iter44_reg <= icmp_ln58_reg_4480_pp0_iter43_reg;
        icmp_ln58_reg_4480_pp0_iter4_reg <= icmp_ln58_reg_4480_pp0_iter3_reg;
        icmp_ln58_reg_4480_pp0_iter5_reg <= icmp_ln58_reg_4480_pp0_iter4_reg;
        icmp_ln58_reg_4480_pp0_iter6_reg <= icmp_ln58_reg_4480_pp0_iter5_reg;
        icmp_ln58_reg_4480_pp0_iter7_reg <= icmp_ln58_reg_4480_pp0_iter6_reg;
        icmp_ln58_reg_4480_pp0_iter8_reg <= icmp_ln58_reg_4480_pp0_iter7_reg;
        icmp_ln58_reg_4480_pp0_iter9_reg <= icmp_ln58_reg_4480_pp0_iter8_reg;
        layer1_bias_load_reg_5154 <= layer1_bias_q0;
        layer1_bias_load_reg_5154_pp0_iter39_reg <= layer1_bias_load_reg_5154;
        layer1_bias_load_reg_5154_pp0_iter40_reg <= layer1_bias_load_reg_5154_pp0_iter39_reg;
        layer1_bias_load_reg_5154_pp0_iter41_reg <= layer1_bias_load_reg_5154_pp0_iter40_reg;
        layer1_bias_load_reg_5154_pp0_iter42_reg <= layer1_bias_load_reg_5154_pp0_iter41_reg;
        layer1_bias_load_reg_5154_pp0_iter43_reg <= layer1_bias_load_reg_5154_pp0_iter42_reg;
        layer1_bias_load_reg_5154_pp0_iter44_reg <= layer1_bias_load_reg_5154_pp0_iter43_reg;
        layer1_weights_39_load_reg_5134 <= layer1_weights_39_q0;
        layer1_weights_40_load_reg_5139 <= layer1_weights_40_q0;
        layer1_weights_40_load_reg_5139_pp0_iter39_reg <= layer1_weights_40_load_reg_5139;
        layer1_weights_41_load_reg_5144 <= layer1_weights_41_q0;
        layer1_weights_41_load_reg_5144_pp0_iter39_reg <= layer1_weights_41_load_reg_5144;
        layer1_weights_41_load_reg_5144_pp0_iter40_reg <= layer1_weights_41_load_reg_5144_pp0_iter39_reg;
        layer1_weights_42_load_reg_5149 <= layer1_weights_42_q0;
        layer1_weights_42_load_reg_5149_pp0_iter39_reg <= layer1_weights_42_load_reg_5149;
        layer1_weights_42_load_reg_5149_pp0_iter40_reg <= layer1_weights_42_load_reg_5149_pp0_iter39_reg;
        layer1_weights_42_load_reg_5149_pp0_iter41_reg <= layer1_weights_42_load_reg_5149_pp0_iter40_reg;
        tmp_6_reg_4559 <= {{mul_ln63_fu_2135_p2[23:8]}};
        trunc_ln58_reg_4530_pp0_iter10_reg <= trunc_ln58_reg_4530_pp0_iter9_reg;
        trunc_ln58_reg_4530_pp0_iter11_reg <= trunc_ln58_reg_4530_pp0_iter10_reg;
        trunc_ln58_reg_4530_pp0_iter12_reg <= trunc_ln58_reg_4530_pp0_iter11_reg;
        trunc_ln58_reg_4530_pp0_iter13_reg <= trunc_ln58_reg_4530_pp0_iter12_reg;
        trunc_ln58_reg_4530_pp0_iter14_reg <= trunc_ln58_reg_4530_pp0_iter13_reg;
        trunc_ln58_reg_4530_pp0_iter15_reg <= trunc_ln58_reg_4530_pp0_iter14_reg;
        trunc_ln58_reg_4530_pp0_iter16_reg <= trunc_ln58_reg_4530_pp0_iter15_reg;
        trunc_ln58_reg_4530_pp0_iter17_reg <= trunc_ln58_reg_4530_pp0_iter16_reg;
        trunc_ln58_reg_4530_pp0_iter18_reg <= trunc_ln58_reg_4530_pp0_iter17_reg;
        trunc_ln58_reg_4530_pp0_iter19_reg <= trunc_ln58_reg_4530_pp0_iter18_reg;
        trunc_ln58_reg_4530_pp0_iter20_reg <= trunc_ln58_reg_4530_pp0_iter19_reg;
        trunc_ln58_reg_4530_pp0_iter21_reg <= trunc_ln58_reg_4530_pp0_iter20_reg;
        trunc_ln58_reg_4530_pp0_iter22_reg <= trunc_ln58_reg_4530_pp0_iter21_reg;
        trunc_ln58_reg_4530_pp0_iter23_reg <= trunc_ln58_reg_4530_pp0_iter22_reg;
        trunc_ln58_reg_4530_pp0_iter24_reg <= trunc_ln58_reg_4530_pp0_iter23_reg;
        trunc_ln58_reg_4530_pp0_iter25_reg <= trunc_ln58_reg_4530_pp0_iter24_reg;
        trunc_ln58_reg_4530_pp0_iter26_reg <= trunc_ln58_reg_4530_pp0_iter25_reg;
        trunc_ln58_reg_4530_pp0_iter27_reg <= trunc_ln58_reg_4530_pp0_iter26_reg;
        trunc_ln58_reg_4530_pp0_iter28_reg <= trunc_ln58_reg_4530_pp0_iter27_reg;
        trunc_ln58_reg_4530_pp0_iter29_reg <= trunc_ln58_reg_4530_pp0_iter28_reg;
        trunc_ln58_reg_4530_pp0_iter2_reg <= trunc_ln58_reg_4530_pp0_iter1_reg;
        trunc_ln58_reg_4530_pp0_iter30_reg <= trunc_ln58_reg_4530_pp0_iter29_reg;
        trunc_ln58_reg_4530_pp0_iter31_reg <= trunc_ln58_reg_4530_pp0_iter30_reg;
        trunc_ln58_reg_4530_pp0_iter32_reg <= trunc_ln58_reg_4530_pp0_iter31_reg;
        trunc_ln58_reg_4530_pp0_iter33_reg <= trunc_ln58_reg_4530_pp0_iter32_reg;
        trunc_ln58_reg_4530_pp0_iter34_reg <= trunc_ln58_reg_4530_pp0_iter33_reg;
        trunc_ln58_reg_4530_pp0_iter35_reg <= trunc_ln58_reg_4530_pp0_iter34_reg;
        trunc_ln58_reg_4530_pp0_iter36_reg <= trunc_ln58_reg_4530_pp0_iter35_reg;
        trunc_ln58_reg_4530_pp0_iter37_reg <= trunc_ln58_reg_4530_pp0_iter36_reg;
        trunc_ln58_reg_4530_pp0_iter38_reg <= trunc_ln58_reg_4530_pp0_iter37_reg;
        trunc_ln58_reg_4530_pp0_iter39_reg <= trunc_ln58_reg_4530_pp0_iter38_reg;
        trunc_ln58_reg_4530_pp0_iter3_reg <= trunc_ln58_reg_4530_pp0_iter2_reg;
        trunc_ln58_reg_4530_pp0_iter40_reg <= trunc_ln58_reg_4530_pp0_iter39_reg;
        trunc_ln58_reg_4530_pp0_iter41_reg <= trunc_ln58_reg_4530_pp0_iter40_reg;
        trunc_ln58_reg_4530_pp0_iter42_reg <= trunc_ln58_reg_4530_pp0_iter41_reg;
        trunc_ln58_reg_4530_pp0_iter43_reg <= trunc_ln58_reg_4530_pp0_iter42_reg;
        trunc_ln58_reg_4530_pp0_iter44_reg <= trunc_ln58_reg_4530_pp0_iter43_reg;
        trunc_ln58_reg_4530_pp0_iter45_reg <= trunc_ln58_reg_4530_pp0_iter44_reg;
        trunc_ln58_reg_4530_pp0_iter4_reg <= trunc_ln58_reg_4530_pp0_iter3_reg;
        trunc_ln58_reg_4530_pp0_iter5_reg <= trunc_ln58_reg_4530_pp0_iter4_reg;
        trunc_ln58_reg_4530_pp0_iter6_reg <= trunc_ln58_reg_4530_pp0_iter5_reg;
        trunc_ln58_reg_4530_pp0_iter7_reg <= trunc_ln58_reg_4530_pp0_iter6_reg;
        trunc_ln58_reg_4530_pp0_iter8_reg <= trunc_ln58_reg_4530_pp0_iter7_reg;
        trunc_ln58_reg_4530_pp0_iter9_reg <= trunc_ln58_reg_4530_pp0_iter8_reg;
        zext_ln58_reg_4484_pp0_iter10_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter9_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter11_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter10_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter12_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter11_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter13_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter12_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter14_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter13_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter15_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter14_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter16_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter15_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter17_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter16_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter18_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter17_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter19_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter18_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter20_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter19_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter21_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter20_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter22_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter21_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter23_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter22_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter24_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter23_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter25_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter24_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter26_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter25_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter27_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter26_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter28_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter27_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter29_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter28_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter2_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter1_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter30_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter29_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter31_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter30_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter32_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter31_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter33_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter32_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter34_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter33_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter35_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter34_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter36_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter35_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter3_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter2_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter4_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter3_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter5_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter4_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter6_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter5_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter7_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter6_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter8_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter7_reg[6 : 0];
        zext_ln58_reg_4484_pp0_iter9_reg[6 : 0] <= zext_ln58_reg_4484_pp0_iter8_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln58_reg_4480 <= icmp_ln58_fu_2101_p2;
        icmp_ln58_reg_4480_pp0_iter1_reg <= icmp_ln58_reg_4480;
        layer1_weights_0_load_reg_4544 <= layer1_weights_0_q0;
        sext_ln63_10_cast_reg_4425 <= sext_ln63_10_cast_fu_2049_p1;
        sext_ln63_11_cast_reg_4420 <= sext_ln63_11_cast_fu_2045_p1;
        sext_ln63_12_cast_reg_4415 <= sext_ln63_12_cast_fu_2041_p1;
        sext_ln63_13_cast_reg_4410 <= sext_ln63_13_cast_fu_2037_p1;
        sext_ln63_14_cast_reg_4405 <= sext_ln63_14_cast_fu_2033_p1;
        sext_ln63_15_cast_reg_4400 <= sext_ln63_15_cast_fu_2029_p1;
        sext_ln63_16_cast_reg_4395 <= sext_ln63_16_cast_fu_2025_p1;
        sext_ln63_17_cast_reg_4390 <= sext_ln63_17_cast_fu_2021_p1;
        sext_ln63_18_cast_reg_4385 <= sext_ln63_18_cast_fu_2017_p1;
        sext_ln63_19_cast_reg_4380 <= sext_ln63_19_cast_fu_2013_p1;
        sext_ln63_1_cast_reg_4470 <= sext_ln63_1_cast_fu_2085_p1;
        sext_ln63_20_cast_reg_4375 <= sext_ln63_20_cast_fu_2009_p1;
        sext_ln63_21_cast_reg_4370 <= sext_ln63_21_cast_fu_2005_p1;
        sext_ln63_22_cast_reg_4365 <= sext_ln63_22_cast_fu_2001_p1;
        sext_ln63_23_cast_reg_4360 <= sext_ln63_23_cast_fu_1997_p1;
        sext_ln63_24_cast_reg_4355 <= sext_ln63_24_cast_fu_1993_p1;
        sext_ln63_25_cast_reg_4350 <= sext_ln63_25_cast_fu_1989_p1;
        sext_ln63_26_cast_reg_4345 <= sext_ln63_26_cast_fu_1985_p1;
        sext_ln63_27_cast_reg_4340 <= sext_ln63_27_cast_fu_1981_p1;
        sext_ln63_28_cast_reg_4335 <= sext_ln63_28_cast_fu_1977_p1;
        sext_ln63_29_cast_reg_4330 <= sext_ln63_29_cast_fu_1973_p1;
        sext_ln63_2_cast_reg_4465 <= sext_ln63_2_cast_fu_2081_p1;
        sext_ln63_30_cast_reg_4325 <= sext_ln63_30_cast_fu_1969_p1;
        sext_ln63_31_cast_reg_4320 <= sext_ln63_31_cast_fu_1965_p1;
        sext_ln63_32_cast_reg_4315 <= sext_ln63_32_cast_fu_1961_p1;
        sext_ln63_33_cast_reg_4310 <= sext_ln63_33_cast_fu_1957_p1;
        sext_ln63_34_cast_reg_4305 <= sext_ln63_34_cast_fu_1953_p1;
        sext_ln63_35_cast_reg_4300 <= sext_ln63_35_cast_fu_1949_p1;
        sext_ln63_36_cast_reg_4295 <= sext_ln63_36_cast_fu_1945_p1;
        sext_ln63_37_cast_reg_4290 <= sext_ln63_37_cast_fu_1941_p1;
        sext_ln63_38_cast_reg_4285 <= sext_ln63_38_cast_fu_1937_p1;
        sext_ln63_39_cast_reg_4280 <= sext_ln63_39_cast_fu_1933_p1;
        sext_ln63_3_cast_reg_4460 <= sext_ln63_3_cast_fu_2077_p1;
        sext_ln63_40_cast_reg_4275 <= sext_ln63_40_cast_fu_1929_p1;
        sext_ln63_41_cast_reg_4270 <= sext_ln63_41_cast_fu_1925_p1;
        sext_ln63_42_cast_reg_4265 <= sext_ln63_42_cast_fu_1921_p1;
        sext_ln63_4_cast_reg_4455 <= sext_ln63_4_cast_fu_2073_p1;
        sext_ln63_5_cast_reg_4450 <= sext_ln63_5_cast_fu_2069_p1;
        sext_ln63_6_cast_reg_4445 <= sext_ln63_6_cast_fu_2065_p1;
        sext_ln63_7_cast_reg_4440 <= sext_ln63_7_cast_fu_2061_p1;
        sext_ln63_8_cast_reg_4435 <= sext_ln63_8_cast_fu_2057_p1;
        sext_ln63_9_cast_reg_4430 <= sext_ln63_9_cast_fu_2053_p1;
        sext_ln63_cast_reg_4475 <= sext_ln63_cast_fu_2089_p1;
        trunc_ln58_reg_4530_pp0_iter1_reg <= trunc_ln58_reg_4530;
        zext_ln58_reg_4484_pp0_iter1_reg[6 : 0] <= zext_ln58_reg_4484[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_10_fu_504[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_11_fu_508[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_12_fu_512[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_13_fu_516[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_14_fu_520[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_15_fu_524[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_16_fu_528[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_17_fu_532[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_18_fu_536[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_19_fu_540[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_1_fu_468[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_20_fu_544[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_21_fu_548[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_22_fu_552[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_23_fu_556[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_24_fu_560[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_25_fu_564[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_26_fu_568[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_27_fu_572[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_28_fu_576[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_29_fu_580[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_2_fu_472[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_30_fu_584[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_31_fu_588[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_32_fu_592[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd38) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_33_fu_596[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd39) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_34_fu_600[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd40) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_35_fu_604[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd41) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_36_fu_608[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd42) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_37_fu_612[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd43) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_38_fu_616[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd44) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_39_fu_620[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_3_fu_476[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd45) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_40_fu_624[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd46) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_41_fu_628[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd48) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_42_fu_632[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd49) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_43_fu_636[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd50) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_44_fu_640[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd51) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_45_fu_644[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd52) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_46_fu_648[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd53) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_47_fu_652[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd54) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_48_fu_656[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd55) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_49_fu_660[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_4_fu_480[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd56) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_50_fu_664[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd57) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_51_fu_668[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd58) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_52_fu_672[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd59) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_53_fu_676[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd61) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_54_fu_680[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd62) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_55_fu_684[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd63) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_56_fu_688[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_5_fu_484[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_6_fu_488[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_7_fu_492[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_8_fu_496[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_9_fu_500[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln58_reg_4530_pp0_iter45_reg == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        layer1_output_fu_464[14 : 0] <= zext_ln66_fu_3062_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_2101_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln58_reg_4530 <= trunc_ln58_fu_2119_p1;
        zext_ln58_reg_4484[6 : 0] <= zext_ln58_fu_2113_p1[6 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_2101_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter45_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) 
    & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_460;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_bias_ce0 = 1'b1;
    end else begin
        layer1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_10_out_ap_vld = 1'b1;
    end else begin
        layer1_output_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_11_out_ap_vld = 1'b1;
    end else begin
        layer1_output_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_12_out_ap_vld = 1'b1;
    end else begin
        layer1_output_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_13_out_ap_vld = 1'b1;
    end else begin
        layer1_output_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_14_out_ap_vld = 1'b1;
    end else begin
        layer1_output_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_15_out_ap_vld = 1'b1;
    end else begin
        layer1_output_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_16_out_ap_vld = 1'b1;
    end else begin
        layer1_output_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_17_out_ap_vld = 1'b1;
    end else begin
        layer1_output_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_18_out_ap_vld = 1'b1;
    end else begin
        layer1_output_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_19_out_ap_vld = 1'b1;
    end else begin
        layer1_output_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_1_out_ap_vld = 1'b1;
    end else begin
        layer1_output_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_20_out_ap_vld = 1'b1;
    end else begin
        layer1_output_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_21_out_ap_vld = 1'b1;
    end else begin
        layer1_output_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_22_out_ap_vld = 1'b1;
    end else begin
        layer1_output_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_23_out_ap_vld = 1'b1;
    end else begin
        layer1_output_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_24_out_ap_vld = 1'b1;
    end else begin
        layer1_output_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_25_out_ap_vld = 1'b1;
    end else begin
        layer1_output_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_26_out_ap_vld = 1'b1;
    end else begin
        layer1_output_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_27_out_ap_vld = 1'b1;
    end else begin
        layer1_output_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_28_out_ap_vld = 1'b1;
    end else begin
        layer1_output_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_29_out_ap_vld = 1'b1;
    end else begin
        layer1_output_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_2_out_ap_vld = 1'b1;
    end else begin
        layer1_output_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_30_out_ap_vld = 1'b1;
    end else begin
        layer1_output_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_31_out_ap_vld = 1'b1;
    end else begin
        layer1_output_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_32_out_ap_vld = 1'b1;
    end else begin
        layer1_output_32_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_33_out_ap_vld = 1'b1;
    end else begin
        layer1_output_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_34_out_ap_vld = 1'b1;
    end else begin
        layer1_output_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_35_out_ap_vld = 1'b1;
    end else begin
        layer1_output_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_36_out_ap_vld = 1'b1;
    end else begin
        layer1_output_36_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_37_out_ap_vld = 1'b1;
    end else begin
        layer1_output_37_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_38_out_ap_vld = 1'b1;
    end else begin
        layer1_output_38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_39_out_ap_vld = 1'b1;
    end else begin
        layer1_output_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_3_out_ap_vld = 1'b1;
    end else begin
        layer1_output_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_40_out_ap_vld = 1'b1;
    end else begin
        layer1_output_40_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_41_out_ap_vld = 1'b1;
    end else begin
        layer1_output_41_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_42_out_ap_vld = 1'b1;
    end else begin
        layer1_output_42_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_43_out_ap_vld = 1'b1;
    end else begin
        layer1_output_43_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_44_out_ap_vld = 1'b1;
    end else begin
        layer1_output_44_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_45_out_ap_vld = 1'b1;
    end else begin
        layer1_output_45_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_46_out_ap_vld = 1'b1;
    end else begin
        layer1_output_46_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_47_out_ap_vld = 1'b1;
    end else begin
        layer1_output_47_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_48_out_ap_vld = 1'b1;
    end else begin
        layer1_output_48_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_49_out_ap_vld = 1'b1;
    end else begin
        layer1_output_49_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_4_out_ap_vld = 1'b1;
    end else begin
        layer1_output_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_50_out_ap_vld = 1'b1;
    end else begin
        layer1_output_50_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_51_out_ap_vld = 1'b1;
    end else begin
        layer1_output_51_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_52_out_ap_vld = 1'b1;
    end else begin
        layer1_output_52_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_53_out_ap_vld = 1'b1;
    end else begin
        layer1_output_53_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_54_out_ap_vld = 1'b1;
    end else begin
        layer1_output_54_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_55_out_ap_vld = 1'b1;
    end else begin
        layer1_output_55_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_56_out_ap_vld = 1'b1;
    end else begin
        layer1_output_56_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_5_out_ap_vld = 1'b1;
    end else begin
        layer1_output_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_6_out_ap_vld = 1'b1;
    end else begin
        layer1_output_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_7_out_ap_vld = 1'b1;
    end else begin
        layer1_output_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_8_out_ap_vld = 1'b1;
    end else begin
        layer1_output_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_9_out_ap_vld = 1'b1;
    end else begin
        layer1_output_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_reg_4480_pp0_iter44_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_output_out_ap_vld = 1'b1;
    end else begin
        layer1_output_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weights_0_ce0 = 1'b1;
    end else begin
        layer1_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_10_ce0 = 1'b1;
    end else begin
        layer1_weights_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_11_ce0 = 1'b1;
    end else begin
        layer1_weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_12_ce0 = 1'b1;
    end else begin
        layer1_weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_13_ce0 = 1'b1;
    end else begin
        layer1_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_14_ce0 = 1'b1;
    end else begin
        layer1_weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_15_ce0 = 1'b1;
    end else begin
        layer1_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_16_ce0 = 1'b1;
    end else begin
        layer1_weights_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_17_ce0 = 1'b1;
    end else begin
        layer1_weights_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_18_ce0 = 1'b1;
    end else begin
        layer1_weights_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_19_ce0 = 1'b1;
    end else begin
        layer1_weights_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weights_1_ce0 = 1'b1;
    end else begin
        layer1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_20_ce0 = 1'b1;
    end else begin
        layer1_weights_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_21_ce0 = 1'b1;
    end else begin
        layer1_weights_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_22_ce0 = 1'b1;
    end else begin
        layer1_weights_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_23_ce0 = 1'b1;
    end else begin
        layer1_weights_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_24_ce0 = 1'b1;
    end else begin
        layer1_weights_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_25_ce0 = 1'b1;
    end else begin
        layer1_weights_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_26_ce0 = 1'b1;
    end else begin
        layer1_weights_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_27_ce0 = 1'b1;
    end else begin
        layer1_weights_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        layer1_weights_28_ce0 = 1'b1;
    end else begin
        layer1_weights_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        layer1_weights_29_ce0 = 1'b1;
    end else begin
        layer1_weights_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_weights_2_ce0 = 1'b1;
    end else begin
        layer1_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        layer1_weights_30_ce0 = 1'b1;
    end else begin
        layer1_weights_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        layer1_weights_31_ce0 = 1'b1;
    end else begin
        layer1_weights_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        layer1_weights_32_ce0 = 1'b1;
    end else begin
        layer1_weights_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        layer1_weights_33_ce0 = 1'b1;
    end else begin
        layer1_weights_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        layer1_weights_34_ce0 = 1'b1;
    end else begin
        layer1_weights_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        layer1_weights_35_ce0 = 1'b1;
    end else begin
        layer1_weights_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        layer1_weights_36_ce0 = 1'b1;
    end else begin
        layer1_weights_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        layer1_weights_37_ce0 = 1'b1;
    end else begin
        layer1_weights_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_weights_38_ce0 = 1'b1;
    end else begin
        layer1_weights_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_weights_39_ce0 = 1'b1;
    end else begin
        layer1_weights_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_3_ce0 = 1'b1;
    end else begin
        layer1_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_weights_40_ce0 = 1'b1;
    end else begin
        layer1_weights_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_weights_41_ce0 = 1'b1;
    end else begin
        layer1_weights_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        layer1_weights_42_ce0 = 1'b1;
    end else begin
        layer1_weights_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_4_ce0 = 1'b1;
    end else begin
        layer1_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_5_ce0 = 1'b1;
    end else begin
        layer1_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_6_ce0 = 1'b1;
    end else begin
        layer1_weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_7_ce0 = 1'b1;
    end else begin
        layer1_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_8_ce0 = 1'b1;
    end else begin
        layer1_weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer1_weights_9_ce0 = 1'b1;
    end else begin
        layer1_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_fu_2107_p2 = (ap_sig_allocacmp_i_2 + 7'd1);

assign add_ln60_fu_3044_p2 = ($signed(sext_ln65_1_fu_3035_p1) + $signed(trunc_ln1_fu_3026_p4));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_3579_p1 = sext_ln63_1_cast_reg_4470;

assign grp_fu_3579_p2 = {{tmp_6_reg_4559}, {8'd0}};

assign grp_fu_3587_p1 = sext_ln63_2_cast_reg_4465;

assign grp_fu_3587_p2 = {{tmp_7_fu_2165_p4}, {8'd0}};

assign grp_fu_3595_p1 = sext_ln63_3_cast_reg_4460;

assign grp_fu_3595_p2 = {{tmp_8_fu_2186_p4}, {8'd0}};

assign grp_fu_3603_p1 = sext_ln63_4_cast_reg_4455;

assign grp_fu_3603_p2 = {{tmp_9_fu_2207_p4}, {8'd0}};

assign grp_fu_3611_p1 = sext_ln63_5_cast_reg_4450;

assign grp_fu_3611_p2 = {{tmp_10_fu_2228_p4}, {8'd0}};

assign grp_fu_3619_p1 = sext_ln63_6_cast_reg_4445;

assign grp_fu_3619_p2 = {{tmp_11_fu_2249_p4}, {8'd0}};

assign grp_fu_3627_p1 = sext_ln63_7_cast_reg_4440;

assign grp_fu_3627_p2 = {{tmp_12_fu_2270_p4}, {8'd0}};

assign grp_fu_3635_p1 = sext_ln63_8_cast_reg_4435;

assign grp_fu_3635_p2 = {{tmp_13_fu_2291_p4}, {8'd0}};

assign grp_fu_3643_p1 = sext_ln63_9_cast_reg_4430;

assign grp_fu_3643_p2 = {{tmp_14_fu_2312_p4}, {8'd0}};

assign grp_fu_3651_p1 = sext_ln63_10_cast_reg_4425;

assign grp_fu_3651_p2 = {{tmp_15_fu_2333_p4}, {8'd0}};

assign grp_fu_3659_p1 = sext_ln63_11_cast_reg_4420;

assign grp_fu_3659_p2 = {{tmp_16_fu_2354_p4}, {8'd0}};

assign grp_fu_3667_p1 = sext_ln63_12_cast_reg_4415;

assign grp_fu_3667_p2 = {{tmp_17_fu_2375_p4}, {8'd0}};

assign grp_fu_3675_p1 = sext_ln63_13_cast_reg_4410;

assign grp_fu_3675_p2 = {{tmp_18_fu_2396_p4}, {8'd0}};

assign grp_fu_3683_p1 = sext_ln63_14_cast_reg_4405;

assign grp_fu_3683_p2 = {{tmp_19_fu_2417_p4}, {8'd0}};

assign grp_fu_3691_p1 = sext_ln63_15_cast_reg_4400;

assign grp_fu_3691_p2 = {{tmp_20_fu_2438_p4}, {8'd0}};

assign grp_fu_3699_p1 = sext_ln63_16_cast_reg_4395;

assign grp_fu_3699_p2 = {{tmp_21_fu_2459_p4}, {8'd0}};

assign grp_fu_3707_p1 = sext_ln63_17_cast_reg_4390;

assign grp_fu_3707_p2 = {{tmp_22_fu_2480_p4}, {8'd0}};

assign grp_fu_3715_p1 = sext_ln63_18_cast_reg_4385;

assign grp_fu_3715_p2 = {{tmp_23_fu_2501_p4}, {8'd0}};

assign grp_fu_3723_p1 = sext_ln63_19_cast_reg_4380;

assign grp_fu_3723_p2 = {{tmp_24_fu_2522_p4}, {8'd0}};

assign grp_fu_3731_p1 = sext_ln63_20_cast_reg_4375;

assign grp_fu_3731_p2 = {{tmp_25_fu_2543_p4}, {8'd0}};

assign grp_fu_3739_p1 = sext_ln63_21_cast_reg_4370;

assign grp_fu_3739_p2 = {{tmp_26_fu_2564_p4}, {8'd0}};

assign grp_fu_3747_p1 = sext_ln63_22_cast_reg_4365;

assign grp_fu_3747_p2 = {{tmp_27_fu_2585_p4}, {8'd0}};

assign grp_fu_3755_p1 = sext_ln63_23_cast_reg_4360;

assign grp_fu_3755_p2 = {{tmp_28_fu_2606_p4}, {8'd0}};

assign grp_fu_3763_p1 = sext_ln63_24_cast_reg_4355;

assign grp_fu_3763_p2 = {{tmp_29_fu_2627_p4}, {8'd0}};

assign grp_fu_3771_p1 = sext_ln63_25_cast_reg_4350;

assign grp_fu_3771_p2 = {{tmp_30_fu_2648_p4}, {8'd0}};

assign grp_fu_3779_p1 = sext_ln63_26_cast_reg_4345;

assign grp_fu_3779_p2 = {{tmp_31_fu_2669_p4}, {8'd0}};

assign grp_fu_3787_p1 = sext_ln63_27_cast_reg_4340;

assign grp_fu_3787_p2 = {{tmp_32_fu_2690_p4}, {8'd0}};

assign grp_fu_3795_p1 = sext_ln63_28_cast_reg_4335;

assign grp_fu_3795_p2 = {{tmp_33_fu_2711_p4}, {8'd0}};

assign grp_fu_3803_p1 = sext_ln63_29_cast_reg_4330;

assign grp_fu_3803_p2 = {{tmp_34_fu_2732_p4}, {8'd0}};

assign grp_fu_3811_p1 = sext_ln63_30_cast_reg_4325;

assign grp_fu_3811_p2 = {{tmp_35_fu_2753_p4}, {8'd0}};

assign grp_fu_3819_p1 = sext_ln63_31_cast_reg_4320;

assign grp_fu_3819_p2 = {{tmp_36_fu_2774_p4}, {8'd0}};

assign grp_fu_3827_p1 = sext_ln63_32_cast_reg_4315;

assign grp_fu_3827_p2 = {{tmp_37_fu_2795_p4}, {8'd0}};

assign grp_fu_3835_p1 = sext_ln63_33_cast_reg_4310;

assign grp_fu_3835_p2 = {{tmp_38_fu_2816_p4}, {8'd0}};

assign grp_fu_3843_p1 = sext_ln63_34_cast_reg_4305;

assign grp_fu_3843_p2 = {{tmp_39_fu_2837_p4}, {8'd0}};

assign grp_fu_3851_p1 = sext_ln63_35_cast_reg_4300;

assign grp_fu_3851_p2 = {{tmp_40_fu_2858_p4}, {8'd0}};

assign grp_fu_3859_p1 = sext_ln63_36_cast_reg_4295;

assign grp_fu_3859_p2 = {{tmp_41_fu_2879_p4}, {8'd0}};

assign grp_fu_3867_p1 = sext_ln63_37_cast_reg_4290;

assign grp_fu_3867_p2 = {{tmp_42_fu_2900_p4}, {8'd0}};

assign grp_fu_3875_p1 = sext_ln63_38_cast_reg_4285;

assign grp_fu_3875_p2 = {{tmp_43_fu_2920_p4}, {8'd0}};

assign grp_fu_3883_p1 = sext_ln63_39_cast_reg_4280;

assign grp_fu_3883_p2 = {{tmp_44_fu_2940_p4}, {8'd0}};

assign grp_fu_3891_p1 = sext_ln63_40_cast_reg_4275;

assign grp_fu_3891_p2 = {{tmp_45_fu_2960_p4}, {8'd0}};

assign grp_fu_3899_p1 = sext_ln63_41_cast_reg_4270;

assign grp_fu_3899_p2 = {{tmp_46_fu_2980_p4}, {8'd0}};

assign grp_fu_3907_p1 = sext_ln63_42_cast_reg_4265;

assign grp_fu_3907_p2 = {{tmp_47_fu_2997_p4}, {8'd0}};

assign icmp_ln14_fu_3050_p2 = (($signed(sum_3_fu_3038_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_2101_p2 = ((ap_sig_allocacmp_i_2 == 7'd64) ? 1'b1 : 1'b0);

assign layer1_bias_address0 = zext_ln58_reg_4484_pp0_iter36_reg;

assign layer1_output_10_out = layer1_output_10_fu_504;

assign layer1_output_11_out = layer1_output_11_fu_508;

assign layer1_output_12_out = layer1_output_12_fu_512;

assign layer1_output_13_out = layer1_output_13_fu_516;

assign layer1_output_14_out = layer1_output_14_fu_520;

assign layer1_output_15_out = layer1_output_15_fu_524;

assign layer1_output_16_out = layer1_output_16_fu_528;

assign layer1_output_17_out = layer1_output_17_fu_532;

assign layer1_output_18_out = layer1_output_18_fu_536;

assign layer1_output_19_out = layer1_output_19_fu_540;

assign layer1_output_1_out = layer1_output_1_fu_468;

assign layer1_output_20_out = layer1_output_20_fu_544;

assign layer1_output_21_out = layer1_output_21_fu_548;

assign layer1_output_22_out = layer1_output_22_fu_552;

assign layer1_output_23_out = layer1_output_23_fu_556;

assign layer1_output_24_out = layer1_output_24_fu_560;

assign layer1_output_25_out = layer1_output_25_fu_564;

assign layer1_output_26_out = layer1_output_26_fu_568;

assign layer1_output_27_out = layer1_output_27_fu_572;

assign layer1_output_28_out = layer1_output_28_fu_576;

assign layer1_output_29_out = layer1_output_29_fu_580;

assign layer1_output_2_out = layer1_output_2_fu_472;

assign layer1_output_30_out = layer1_output_30_fu_584;

assign layer1_output_31_out = layer1_output_31_fu_588;

assign layer1_output_32_out = layer1_output_32_fu_592;

assign layer1_output_33_out = layer1_output_33_fu_596;

assign layer1_output_34_out = layer1_output_34_fu_600;

assign layer1_output_35_out = layer1_output_35_fu_604;

assign layer1_output_36_out = layer1_output_36_fu_608;

assign layer1_output_37_out = layer1_output_37_fu_612;

assign layer1_output_38_out = layer1_output_38_fu_616;

assign layer1_output_39_out = layer1_output_39_fu_620;

assign layer1_output_3_out = layer1_output_3_fu_476;

assign layer1_output_40_out = layer1_output_40_fu_624;

assign layer1_output_41_out = layer1_output_41_fu_628;

assign layer1_output_42_out = layer1_output_42_fu_632;

assign layer1_output_43_out = layer1_output_43_fu_636;

assign layer1_output_44_out = layer1_output_44_fu_640;

assign layer1_output_45_out = layer1_output_45_fu_644;

assign layer1_output_46_out = layer1_output_46_fu_648;

assign layer1_output_47_out = layer1_output_47_fu_652;

assign layer1_output_48_out = layer1_output_48_fu_656;

assign layer1_output_49_out = layer1_output_49_fu_660;

assign layer1_output_4_out = layer1_output_4_fu_480;

assign layer1_output_50_out = layer1_output_50_fu_664;

assign layer1_output_51_out = layer1_output_51_fu_668;

assign layer1_output_52_out = layer1_output_52_fu_672;

assign layer1_output_53_out = layer1_output_53_fu_676;

assign layer1_output_54_out = layer1_output_54_fu_680;

assign layer1_output_55_out = layer1_output_55_fu_684;

assign layer1_output_56_out = layer1_output_56_fu_688;

assign layer1_output_57_fu_3056_p3 = ((icmp_ln14_reg_5215[0:0] == 1'b1) ? add_ln60_reg_5210 : 15'd0);

assign layer1_output_5_out = layer1_output_5_fu_484;

assign layer1_output_6_out = layer1_output_6_fu_488;

assign layer1_output_7_out = layer1_output_7_fu_492;

assign layer1_output_8_out = layer1_output_8_fu_496;

assign layer1_output_9_out = layer1_output_9_fu_500;

assign layer1_output_out = layer1_output_fu_464;

assign layer1_weights_0_address0 = zext_ln58_fu_2113_p1;

assign layer1_weights_10_address0 = zext_ln58_reg_4484_pp0_iter8_reg;

assign layer1_weights_11_address0 = zext_ln58_reg_4484_pp0_iter9_reg;

assign layer1_weights_12_address0 = zext_ln58_reg_4484_pp0_iter10_reg;

assign layer1_weights_13_address0 = zext_ln58_reg_4484_pp0_iter11_reg;

assign layer1_weights_14_address0 = zext_ln58_reg_4484_pp0_iter12_reg;

assign layer1_weights_15_address0 = zext_ln58_reg_4484_pp0_iter13_reg;

assign layer1_weights_16_address0 = zext_ln58_reg_4484_pp0_iter14_reg;

assign layer1_weights_17_address0 = zext_ln58_reg_4484_pp0_iter15_reg;

assign layer1_weights_18_address0 = zext_ln58_reg_4484_pp0_iter16_reg;

assign layer1_weights_19_address0 = zext_ln58_reg_4484_pp0_iter17_reg;

assign layer1_weights_1_address0 = zext_ln58_fu_2113_p1;

assign layer1_weights_20_address0 = zext_ln58_reg_4484_pp0_iter18_reg;

assign layer1_weights_21_address0 = zext_ln58_reg_4484_pp0_iter19_reg;

assign layer1_weights_22_address0 = zext_ln58_reg_4484_pp0_iter20_reg;

assign layer1_weights_23_address0 = zext_ln58_reg_4484_pp0_iter21_reg;

assign layer1_weights_24_address0 = zext_ln58_reg_4484_pp0_iter22_reg;

assign layer1_weights_25_address0 = zext_ln58_reg_4484_pp0_iter23_reg;

assign layer1_weights_26_address0 = zext_ln58_reg_4484_pp0_iter24_reg;

assign layer1_weights_27_address0 = zext_ln58_reg_4484_pp0_iter25_reg;

assign layer1_weights_28_address0 = zext_ln58_reg_4484_pp0_iter26_reg;

assign layer1_weights_29_address0 = zext_ln58_reg_4484_pp0_iter27_reg;

assign layer1_weights_2_address0 = zext_ln58_reg_4484;

assign layer1_weights_30_address0 = zext_ln58_reg_4484_pp0_iter28_reg;

assign layer1_weights_31_address0 = zext_ln58_reg_4484_pp0_iter29_reg;

assign layer1_weights_32_address0 = zext_ln58_reg_4484_pp0_iter30_reg;

assign layer1_weights_33_address0 = zext_ln58_reg_4484_pp0_iter31_reg;

assign layer1_weights_34_address0 = zext_ln58_reg_4484_pp0_iter32_reg;

assign layer1_weights_35_address0 = zext_ln58_reg_4484_pp0_iter33_reg;

assign layer1_weights_36_address0 = zext_ln58_reg_4484_pp0_iter34_reg;

assign layer1_weights_37_address0 = zext_ln58_reg_4484_pp0_iter35_reg;

assign layer1_weights_38_address0 = zext_ln58_reg_4484_pp0_iter36_reg;

assign layer1_weights_39_address0 = zext_ln58_reg_4484_pp0_iter36_reg;

assign layer1_weights_3_address0 = zext_ln58_reg_4484_pp0_iter1_reg;

assign layer1_weights_40_address0 = zext_ln58_reg_4484_pp0_iter36_reg;

assign layer1_weights_41_address0 = zext_ln58_reg_4484_pp0_iter36_reg;

assign layer1_weights_42_address0 = zext_ln58_reg_4484_pp0_iter36_reg;

assign layer1_weights_4_address0 = zext_ln58_reg_4484_pp0_iter2_reg;

assign layer1_weights_5_address0 = zext_ln58_reg_4484_pp0_iter3_reg;

assign layer1_weights_6_address0 = zext_ln58_reg_4484_pp0_iter4_reg;

assign layer1_weights_7_address0 = zext_ln58_reg_4484_pp0_iter5_reg;

assign layer1_weights_8_address0 = zext_ln58_reg_4484_pp0_iter6_reg;

assign layer1_weights_9_address0 = zext_ln58_reg_4484_pp0_iter7_reg;

assign mul_ln63_fu_2135_p1 = sext_ln63_cast_reg_4475;

assign sext_ln63_10_cast_fu_2049_p1 = $signed(sext_ln63_10);

assign sext_ln63_11_cast_fu_2045_p1 = $signed(sext_ln63_11);

assign sext_ln63_12_cast_fu_2041_p1 = $signed(sext_ln63_12);

assign sext_ln63_13_cast_fu_2037_p1 = $signed(sext_ln63_13);

assign sext_ln63_14_cast_fu_2033_p1 = $signed(sext_ln63_14);

assign sext_ln63_15_cast_fu_2029_p1 = $signed(sext_ln63_15);

assign sext_ln63_16_cast_fu_2025_p1 = $signed(sext_ln63_16);

assign sext_ln63_17_cast_fu_2021_p1 = $signed(sext_ln63_17);

assign sext_ln63_18_cast_fu_2017_p1 = $signed(sext_ln63_18);

assign sext_ln63_19_cast_fu_2013_p1 = $signed(sext_ln63_19);

assign sext_ln63_1_cast_fu_2085_p1 = $signed(sext_ln63_1);

assign sext_ln63_20_cast_fu_2009_p1 = $signed(sext_ln63_20);

assign sext_ln63_21_cast_fu_2005_p1 = $signed(sext_ln63_21);

assign sext_ln63_22_cast_fu_2001_p1 = $signed(sext_ln63_22);

assign sext_ln63_23_cast_fu_1997_p1 = $signed(sext_ln63_23);

assign sext_ln63_24_cast_fu_1993_p1 = $signed(sext_ln63_24);

assign sext_ln63_25_cast_fu_1989_p1 = $signed(sext_ln63_25);

assign sext_ln63_26_cast_fu_1985_p1 = $signed(sext_ln63_26);

assign sext_ln63_27_cast_fu_1981_p1 = $signed(sext_ln63_27);

assign sext_ln63_28_cast_fu_1977_p1 = $signed(sext_ln63_28);

assign sext_ln63_29_cast_fu_1973_p1 = $signed(sext_ln63_29);

assign sext_ln63_2_cast_fu_2081_p1 = $signed(sext_ln63_2);

assign sext_ln63_30_cast_fu_1969_p1 = $signed(sext_ln63_30);

assign sext_ln63_31_cast_fu_1965_p1 = $signed(sext_ln63_31);

assign sext_ln63_32_cast_fu_1961_p1 = $signed(sext_ln63_32);

assign sext_ln63_33_cast_fu_1957_p1 = $signed(sext_ln63_33);

assign sext_ln63_34_cast_fu_1953_p1 = $signed(sext_ln63_34);

assign sext_ln63_35_cast_fu_1949_p1 = $signed(sext_ln63_35);

assign sext_ln63_36_cast_fu_1945_p1 = $signed(sext_ln63_36);

assign sext_ln63_37_cast_fu_1941_p1 = $signed(sext_ln63_37);

assign sext_ln63_38_cast_fu_1937_p1 = $signed(sext_ln63_38);

assign sext_ln63_39_cast_fu_1933_p1 = $signed(sext_ln63_39);

assign sext_ln63_3_cast_fu_2077_p1 = $signed(sext_ln63_3);

assign sext_ln63_40_cast_fu_1929_p1 = $signed(sext_ln63_40);

assign sext_ln63_41_cast_fu_1925_p1 = $signed(sext_ln63_41);

assign sext_ln63_42_cast_fu_1921_p1 = $signed(sext_ln63_42);

assign sext_ln63_4_cast_fu_2073_p1 = $signed(sext_ln63_4);

assign sext_ln63_5_cast_fu_2069_p1 = $signed(sext_ln63_5);

assign sext_ln63_6_cast_fu_2065_p1 = $signed(sext_ln63_6);

assign sext_ln63_7_cast_fu_2061_p1 = $signed(sext_ln63_7);

assign sext_ln63_8_cast_fu_2057_p1 = $signed(sext_ln63_8);

assign sext_ln63_9_cast_fu_2053_p1 = $signed(sext_ln63_9);

assign sext_ln63_cast_fu_2089_p1 = $signed(sext_ln63);

assign sext_ln65_1_fu_3035_p1 = layer1_bias_load_reg_5154_pp0_iter44_reg;

assign sext_ln65_fu_3023_p1 = layer1_bias_load_reg_5154_pp0_iter44_reg;

assign sum_3_fu_3038_p2 = ($signed(sext_ln65_fu_3023_p1) + $signed(sum_fu_3014_p4));

assign sum_fu_3014_p1 = grp_fu_3907_p3;

assign sum_fu_3014_p4 = {{sum_fu_3014_p1[23:8]}};

assign tmp_10_fu_2228_p1 = grp_fu_3603_p3;

assign tmp_10_fu_2228_p4 = {{tmp_10_fu_2228_p1[23:8]}};

assign tmp_11_fu_2249_p1 = grp_fu_3611_p3;

assign tmp_11_fu_2249_p4 = {{tmp_11_fu_2249_p1[23:8]}};

assign tmp_12_fu_2270_p1 = grp_fu_3619_p3;

assign tmp_12_fu_2270_p4 = {{tmp_12_fu_2270_p1[23:8]}};

assign tmp_13_fu_2291_p1 = grp_fu_3627_p3;

assign tmp_13_fu_2291_p4 = {{tmp_13_fu_2291_p1[23:8]}};

assign tmp_14_fu_2312_p1 = grp_fu_3635_p3;

assign tmp_14_fu_2312_p4 = {{tmp_14_fu_2312_p1[23:8]}};

assign tmp_15_fu_2333_p1 = grp_fu_3643_p3;

assign tmp_15_fu_2333_p4 = {{tmp_15_fu_2333_p1[23:8]}};

assign tmp_16_fu_2354_p1 = grp_fu_3651_p3;

assign tmp_16_fu_2354_p4 = {{tmp_16_fu_2354_p1[23:8]}};

assign tmp_17_fu_2375_p1 = grp_fu_3659_p3;

assign tmp_17_fu_2375_p4 = {{tmp_17_fu_2375_p1[23:8]}};

assign tmp_18_fu_2396_p1 = grp_fu_3667_p3;

assign tmp_18_fu_2396_p4 = {{tmp_18_fu_2396_p1[23:8]}};

assign tmp_19_fu_2417_p1 = grp_fu_3675_p3;

assign tmp_19_fu_2417_p4 = {{tmp_19_fu_2417_p1[23:8]}};

assign tmp_20_fu_2438_p1 = grp_fu_3683_p3;

assign tmp_20_fu_2438_p4 = {{tmp_20_fu_2438_p1[23:8]}};

assign tmp_21_fu_2459_p1 = grp_fu_3691_p3;

assign tmp_21_fu_2459_p4 = {{tmp_21_fu_2459_p1[23:8]}};

assign tmp_22_fu_2480_p1 = grp_fu_3699_p3;

assign tmp_22_fu_2480_p4 = {{tmp_22_fu_2480_p1[23:8]}};

assign tmp_23_fu_2501_p1 = grp_fu_3707_p3;

assign tmp_23_fu_2501_p4 = {{tmp_23_fu_2501_p1[23:8]}};

assign tmp_24_fu_2522_p1 = grp_fu_3715_p3;

assign tmp_24_fu_2522_p4 = {{tmp_24_fu_2522_p1[23:8]}};

assign tmp_25_fu_2543_p1 = grp_fu_3723_p3;

assign tmp_25_fu_2543_p4 = {{tmp_25_fu_2543_p1[23:8]}};

assign tmp_26_fu_2564_p1 = grp_fu_3731_p3;

assign tmp_26_fu_2564_p4 = {{tmp_26_fu_2564_p1[23:8]}};

assign tmp_27_fu_2585_p1 = grp_fu_3739_p3;

assign tmp_27_fu_2585_p4 = {{tmp_27_fu_2585_p1[23:8]}};

assign tmp_28_fu_2606_p1 = grp_fu_3747_p3;

assign tmp_28_fu_2606_p4 = {{tmp_28_fu_2606_p1[23:8]}};

assign tmp_29_fu_2627_p1 = grp_fu_3755_p3;

assign tmp_29_fu_2627_p4 = {{tmp_29_fu_2627_p1[23:8]}};

assign tmp_30_fu_2648_p1 = grp_fu_3763_p3;

assign tmp_30_fu_2648_p4 = {{tmp_30_fu_2648_p1[23:8]}};

assign tmp_31_fu_2669_p1 = grp_fu_3771_p3;

assign tmp_31_fu_2669_p4 = {{tmp_31_fu_2669_p1[23:8]}};

assign tmp_32_fu_2690_p1 = grp_fu_3779_p3;

assign tmp_32_fu_2690_p4 = {{tmp_32_fu_2690_p1[23:8]}};

assign tmp_33_fu_2711_p1 = grp_fu_3787_p3;

assign tmp_33_fu_2711_p4 = {{tmp_33_fu_2711_p1[23:8]}};

assign tmp_34_fu_2732_p1 = grp_fu_3795_p3;

assign tmp_34_fu_2732_p4 = {{tmp_34_fu_2732_p1[23:8]}};

assign tmp_35_fu_2753_p1 = grp_fu_3803_p3;

assign tmp_35_fu_2753_p4 = {{tmp_35_fu_2753_p1[23:8]}};

assign tmp_36_fu_2774_p1 = grp_fu_3811_p3;

assign tmp_36_fu_2774_p4 = {{tmp_36_fu_2774_p1[23:8]}};

assign tmp_37_fu_2795_p1 = grp_fu_3819_p3;

assign tmp_37_fu_2795_p4 = {{tmp_37_fu_2795_p1[23:8]}};

assign tmp_38_fu_2816_p1 = grp_fu_3827_p3;

assign tmp_38_fu_2816_p4 = {{tmp_38_fu_2816_p1[23:8]}};

assign tmp_39_fu_2837_p1 = grp_fu_3835_p3;

assign tmp_39_fu_2837_p4 = {{tmp_39_fu_2837_p1[23:8]}};

assign tmp_40_fu_2858_p1 = grp_fu_3843_p3;

assign tmp_40_fu_2858_p4 = {{tmp_40_fu_2858_p1[23:8]}};

assign tmp_41_fu_2879_p1 = grp_fu_3851_p3;

assign tmp_41_fu_2879_p4 = {{tmp_41_fu_2879_p1[23:8]}};

assign tmp_42_fu_2900_p1 = grp_fu_3859_p3;

assign tmp_42_fu_2900_p4 = {{tmp_42_fu_2900_p1[23:8]}};

assign tmp_43_fu_2920_p1 = grp_fu_3867_p3;

assign tmp_43_fu_2920_p4 = {{tmp_43_fu_2920_p1[23:8]}};

assign tmp_44_fu_2940_p1 = grp_fu_3875_p3;

assign tmp_44_fu_2940_p4 = {{tmp_44_fu_2940_p1[23:8]}};

assign tmp_45_fu_2960_p1 = grp_fu_3883_p3;

assign tmp_45_fu_2960_p4 = {{tmp_45_fu_2960_p1[23:8]}};

assign tmp_46_fu_2980_p1 = grp_fu_3891_p3;

assign tmp_46_fu_2980_p4 = {{tmp_46_fu_2980_p1[23:8]}};

assign tmp_47_fu_2997_p1 = grp_fu_3899_p3;

assign tmp_47_fu_2997_p4 = {{tmp_47_fu_2997_p1[23:8]}};

assign tmp_7_fu_2165_p1 = grp_fu_3579_p3;

assign tmp_7_fu_2165_p4 = {{tmp_7_fu_2165_p1[23:8]}};

assign tmp_8_fu_2186_p1 = grp_fu_3587_p3;

assign tmp_8_fu_2186_p4 = {{tmp_8_fu_2186_p1[23:8]}};

assign tmp_9_fu_2207_p1 = grp_fu_3595_p3;

assign tmp_9_fu_2207_p4 = {{tmp_9_fu_2207_p1[23:8]}};

assign trunc_ln1_fu_3026_p1 = grp_fu_3907_p3;

assign trunc_ln1_fu_3026_p4 = {{trunc_ln1_fu_3026_p1[22:8]}};

assign trunc_ln58_fu_2119_p1 = ap_sig_allocacmp_i_2[5:0];

assign zext_ln58_fu_2113_p1 = ap_sig_allocacmp_i_2;

assign zext_ln66_fu_3062_p1 = layer1_output_57_fu_3056_p3;

always @ (posedge ap_clk) begin
    zext_ln58_reg_4484[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter16_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter17_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter18_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter19_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter20_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter21_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter22_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter23_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter24_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter25_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter26_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter27_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter28_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter29_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter30_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter31_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter32_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter33_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter34_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter35_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_4484_pp0_iter36_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    layer1_output_fu_464[15] <= 1'b0;
    layer1_output_1_fu_468[15] <= 1'b0;
    layer1_output_2_fu_472[15] <= 1'b0;
    layer1_output_3_fu_476[15] <= 1'b0;
    layer1_output_4_fu_480[15] <= 1'b0;
    layer1_output_5_fu_484[15] <= 1'b0;
    layer1_output_6_fu_488[15] <= 1'b0;
    layer1_output_7_fu_492[15] <= 1'b0;
    layer1_output_8_fu_496[15] <= 1'b0;
    layer1_output_9_fu_500[15] <= 1'b0;
    layer1_output_10_fu_504[15] <= 1'b0;
    layer1_output_11_fu_508[15] <= 1'b0;
    layer1_output_12_fu_512[15] <= 1'b0;
    layer1_output_13_fu_516[15] <= 1'b0;
    layer1_output_14_fu_520[15] <= 1'b0;
    layer1_output_15_fu_524[15] <= 1'b0;
    layer1_output_16_fu_528[15] <= 1'b0;
    layer1_output_17_fu_532[15] <= 1'b0;
    layer1_output_18_fu_536[15] <= 1'b0;
    layer1_output_19_fu_540[15] <= 1'b0;
    layer1_output_20_fu_544[15] <= 1'b0;
    layer1_output_21_fu_548[15] <= 1'b0;
    layer1_output_22_fu_552[15] <= 1'b0;
    layer1_output_23_fu_556[15] <= 1'b0;
    layer1_output_24_fu_560[15] <= 1'b0;
    layer1_output_25_fu_564[15] <= 1'b0;
    layer1_output_26_fu_568[15] <= 1'b0;
    layer1_output_27_fu_572[15] <= 1'b0;
    layer1_output_28_fu_576[15] <= 1'b0;
    layer1_output_29_fu_580[15] <= 1'b0;
    layer1_output_30_fu_584[15] <= 1'b0;
    layer1_output_31_fu_588[15] <= 1'b0;
    layer1_output_32_fu_592[15] <= 1'b0;
    layer1_output_33_fu_596[15] <= 1'b0;
    layer1_output_34_fu_600[15] <= 1'b0;
    layer1_output_35_fu_604[15] <= 1'b0;
    layer1_output_36_fu_608[15] <= 1'b0;
    layer1_output_37_fu_612[15] <= 1'b0;
    layer1_output_38_fu_616[15] <= 1'b0;
    layer1_output_39_fu_620[15] <= 1'b0;
    layer1_output_40_fu_624[15] <= 1'b0;
    layer1_output_41_fu_628[15] <= 1'b0;
    layer1_output_42_fu_632[15] <= 1'b0;
    layer1_output_43_fu_636[15] <= 1'b0;
    layer1_output_44_fu_640[15] <= 1'b0;
    layer1_output_45_fu_644[15] <= 1'b0;
    layer1_output_46_fu_648[15] <= 1'b0;
    layer1_output_47_fu_652[15] <= 1'b0;
    layer1_output_48_fu_656[15] <= 1'b0;
    layer1_output_49_fu_660[15] <= 1'b0;
    layer1_output_50_fu_664[15] <= 1'b0;
    layer1_output_51_fu_668[15] <= 1'b0;
    layer1_output_52_fu_672[15] <= 1'b0;
    layer1_output_53_fu_676[15] <= 1'b0;
    layer1_output_54_fu_680[15] <= 1'b0;
    layer1_output_55_fu_684[15] <= 1'b0;
    layer1_output_56_fu_688[15] <= 1'b0;
end

endmodule //neural_network_neural_network_Pipeline_VITIS_LOOP_58_1
