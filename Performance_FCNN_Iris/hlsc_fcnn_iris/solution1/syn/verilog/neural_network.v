// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="neural_network_neural_network,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.878500,HLS_SYN_LAT=49,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=7266,HLS_SYN_LUT=6877,HLS_VERSION=2023_1}" *)

module neural_network (
        ap_clk,
        ap_rst_n,
        s_axi_CONTROL_AWVALID,
        s_axi_CONTROL_AWREADY,
        s_axi_CONTROL_AWADDR,
        s_axi_CONTROL_WVALID,
        s_axi_CONTROL_WREADY,
        s_axi_CONTROL_WDATA,
        s_axi_CONTROL_WSTRB,
        s_axi_CONTROL_ARVALID,
        s_axi_CONTROL_ARREADY,
        s_axi_CONTROL_ARADDR,
        s_axi_CONTROL_RVALID,
        s_axi_CONTROL_RREADY,
        s_axi_CONTROL_RDATA,
        s_axi_CONTROL_RRESP,
        s_axi_CONTROL_BVALID,
        s_axi_CONTROL_BREADY,
        s_axi_CONTROL_BRESP,
        interrupt,
        s_axi_INPUT_AWVALID,
        s_axi_INPUT_AWREADY,
        s_axi_INPUT_AWADDR,
        s_axi_INPUT_WVALID,
        s_axi_INPUT_WREADY,
        s_axi_INPUT_WDATA,
        s_axi_INPUT_WSTRB,
        s_axi_INPUT_ARVALID,
        s_axi_INPUT_ARREADY,
        s_axi_INPUT_ARADDR,
        s_axi_INPUT_RVALID,
        s_axi_INPUT_RREADY,
        s_axi_INPUT_RDATA,
        s_axi_INPUT_RRESP,
        s_axi_INPUT_BVALID,
        s_axi_INPUT_BREADY,
        s_axi_INPUT_BRESP,
        s_axi_OUTPUT_AWVALID,
        s_axi_OUTPUT_AWREADY,
        s_axi_OUTPUT_AWADDR,
        s_axi_OUTPUT_WVALID,
        s_axi_OUTPUT_WREADY,
        s_axi_OUTPUT_WDATA,
        s_axi_OUTPUT_WSTRB,
        s_axi_OUTPUT_ARVALID,
        s_axi_OUTPUT_ARREADY,
        s_axi_OUTPUT_ARADDR,
        s_axi_OUTPUT_RVALID,
        s_axi_OUTPUT_RREADY,
        s_axi_OUTPUT_RDATA,
        s_axi_OUTPUT_RRESP,
        s_axi_OUTPUT_BVALID,
        s_axi_OUTPUT_BREADY,
        s_axi_OUTPUT_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_INPUT_ADDR_WIDTH = 6;
parameter    C_S_AXI_OUTPUT_DATA_WIDTH = 32;
parameter    C_S_AXI_OUTPUT_ADDR_WIDTH = 6;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_INPUT_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_OUTPUT_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CONTROL_AWVALID;
output   s_axi_CONTROL_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_AWADDR;
input   s_axi_CONTROL_WVALID;
output   s_axi_CONTROL_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_CONTROL_WSTRB;
input   s_axi_CONTROL_ARVALID;
output   s_axi_CONTROL_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_CONTROL_ARADDR;
output   s_axi_CONTROL_RVALID;
input   s_axi_CONTROL_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_CONTROL_RDATA;
output  [1:0] s_axi_CONTROL_RRESP;
output   s_axi_CONTROL_BVALID;
input   s_axi_CONTROL_BREADY;
output  [1:0] s_axi_CONTROL_BRESP;
output   interrupt;
input   s_axi_INPUT_AWVALID;
output   s_axi_INPUT_AWREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_AWADDR;
input   s_axi_INPUT_WVALID;
output   s_axi_INPUT_WREADY;
input  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_WDATA;
input  [C_S_AXI_INPUT_WSTRB_WIDTH - 1:0] s_axi_INPUT_WSTRB;
input   s_axi_INPUT_ARVALID;
output   s_axi_INPUT_ARREADY;
input  [C_S_AXI_INPUT_ADDR_WIDTH - 1:0] s_axi_INPUT_ARADDR;
output   s_axi_INPUT_RVALID;
input   s_axi_INPUT_RREADY;
output  [C_S_AXI_INPUT_DATA_WIDTH - 1:0] s_axi_INPUT_RDATA;
output  [1:0] s_axi_INPUT_RRESP;
output   s_axi_INPUT_BVALID;
input   s_axi_INPUT_BREADY;
output  [1:0] s_axi_INPUT_BRESP;
input   s_axi_OUTPUT_AWVALID;
output   s_axi_OUTPUT_AWREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_AWADDR;
input   s_axi_OUTPUT_WVALID;
output   s_axi_OUTPUT_WREADY;
input  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_WDATA;
input  [C_S_AXI_OUTPUT_WSTRB_WIDTH - 1:0] s_axi_OUTPUT_WSTRB;
input   s_axi_OUTPUT_ARVALID;
output   s_axi_OUTPUT_ARREADY;
input  [C_S_AXI_OUTPUT_ADDR_WIDTH - 1:0] s_axi_OUTPUT_ARADDR;
output   s_axi_OUTPUT_RVALID;
input   s_axi_OUTPUT_RREADY;
output  [C_S_AXI_OUTPUT_DATA_WIDTH - 1:0] s_axi_OUTPUT_RDATA;
output  [1:0] s_axi_OUTPUT_RRESP;
output   s_axi_OUTPUT_BVALID;
input   s_axi_OUTPUT_BREADY;
output  [1:0] s_axi_OUTPUT_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_idle_pp0;
reg    ap_ready;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_pp0_stage0_subdone;
wire   [15:0] input_0;
wire   [15:0] input_1;
wire   [15:0] input_2;
wire   [15:0] input_3;
wire   [15:0] output_0;
reg    output_0_ap_vld;
wire   [15:0] output_1;
reg    output_1_ap_vld;
wire   [15:0] output_2;
reg    output_2_ap_vld;
reg  signed [15:0] input_0_read_reg_2490;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] input_0_read_reg_2490_pp0_iter1_reg;
reg  signed [15:0] input_1_read_reg_2499;
reg  signed [15:0] input_1_read_reg_2499_pp0_iter1_reg;
wire  signed [23:0] sext_ln72_3_fu_318_p1;
reg  signed [15:0] input_2_read_reg_2516;
reg  signed [15:0] input_2_read_reg_2516_pp0_iter1_reg;
reg  signed [15:0] input_2_read_reg_2516_pp0_iter2_reg;
reg  signed [15:0] input_3_read_reg_2527;
reg  signed [15:0] input_3_read_reg_2527_pp0_iter1_reg;
reg  signed [15:0] input_3_read_reg_2527_pp0_iter2_reg;
reg  signed [15:0] input_3_read_reg_2527_pp0_iter3_reg;
reg   [15:0] tmp_reg_2537;
wire  signed [23:0] sext_ln72_4_fu_341_p1;
wire  signed [21:0] sext_ln72_6_fu_344_p1;
reg  signed [21:0] sext_ln72_6_reg_2549;
reg  signed [21:0] sext_ln72_6_reg_2549_pp0_iter2_reg;
reg   [15:0] tmp_3_reg_2555;
reg   [15:0] tmp_9_reg_2560;
reg   [15:0] tmp_11_reg_2565;
reg   [15:0] tmp_14_reg_2570;
reg   [15:0] tmp_17_reg_2575;
wire  signed [23:0] sext_ln72_11_fu_443_p1;
reg   [15:0] tmp_s_reg_2608;
reg   [15:0] tmp_2_reg_2633;
reg   [15:0] tmp_8_reg_2643;
reg   [15:0] tmp_10_reg_2648;
reg   [15:0] tmp_16_reg_2658;
reg   [14:0] trunc_ln74_3_reg_2688;
wire   [0:0] icmp_ln14_3_fu_966_p2;
reg   [0:0] icmp_ln14_3_reg_2693;
reg   [15:0] sum_10_reg_2703;
reg   [14:0] trunc_ln74_5_reg_2708;
reg   [15:0] sum_14_reg_2718;
reg   [14:0] trunc_ln74_7_reg_2723;
wire   [14:0] add_ln69_fu_1169_p2;
reg   [14:0] add_ln69_reg_2728;
wire   [0:0] icmp_ln14_fu_1175_p2;
reg   [0:0] icmp_ln14_reg_2733;
reg   [14:0] trunc_ln74_1_reg_2738;
wire   [0:0] icmp_ln14_1_fu_1205_p2;
reg   [0:0] icmp_ln14_1_reg_2743;
reg   [14:0] trunc_ln74_2_reg_2748;
wire   [0:0] icmp_ln14_2_fu_1235_p2;
reg   [0:0] icmp_ln14_2_reg_2753;
wire   [14:0] select_ln14_3_fu_1246_p3;
reg   [14:0] select_ln14_3_reg_2758;
reg   [14:0] select_ln14_3_reg_2758_pp0_iter6_reg;
reg   [14:0] select_ln14_3_reg_2758_pp0_iter7_reg;
reg   [14:0] select_ln14_3_reg_2758_pp0_iter8_reg;
reg   [14:0] trunc_ln74_4_reg_2765;
wire   [0:0] icmp_ln14_4_fu_1277_p2;
reg   [0:0] icmp_ln14_4_reg_2770;
wire   [14:0] select_ln14_5_fu_1299_p3;
reg   [14:0] select_ln14_5_reg_2775;
reg   [14:0] select_ln14_5_reg_2775_pp0_iter6_reg;
reg   [14:0] select_ln14_5_reg_2775_pp0_iter7_reg;
reg   [14:0] select_ln14_5_reg_2775_pp0_iter8_reg;
reg   [14:0] trunc_ln74_6_reg_2782;
wire   [0:0] icmp_ln14_6_fu_1331_p2;
reg   [0:0] icmp_ln14_6_reg_2787;
wire   [14:0] select_ln14_7_fu_1353_p3;
reg   [14:0] select_ln14_7_reg_2792;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter6_reg;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter7_reg;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter8_reg;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter9_reg;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter10_reg;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter11_reg;
reg   [14:0] select_ln14_7_reg_2792_pp0_iter12_reg;
wire   [14:0] select_ln14_fu_1361_p3;
reg   [14:0] select_ln14_reg_2799;
wire   [14:0] select_ln14_1_fu_1372_p3;
reg   [14:0] select_ln14_1_reg_2805;
reg   [14:0] select_ln14_1_reg_2805_pp0_iter7_reg;
wire   [14:0] select_ln14_2_fu_1384_p3;
reg   [14:0] select_ln14_2_reg_2812;
reg   [14:0] select_ln14_2_reg_2812_pp0_iter7_reg;
reg   [14:0] select_ln14_2_reg_2812_pp0_iter8_reg;
wire   [14:0] select_ln14_4_fu_1396_p3;
reg   [14:0] select_ln14_4_reg_2818;
reg   [14:0] select_ln14_4_reg_2818_pp0_iter7_reg;
wire   [14:0] select_ln14_6_fu_1408_p3;
reg   [14:0] select_ln14_6_reg_2825;
reg   [14:0] select_ln14_6_reg_2825_pp0_iter7_reg;
reg   [14:0] select_ln14_6_reg_2825_pp0_iter8_reg;
reg   [14:0] select_ln14_6_reg_2825_pp0_iter9_reg;
reg   [14:0] select_ln14_6_reg_2825_pp0_iter10_reg;
reg   [15:0] tmp_23_reg_2848;
wire   [23:0] zext_ln85_9_fu_1449_p1;
reg   [15:0] tmp_30_reg_2864;
reg   [14:0] trunc_ln3_reg_2869;
reg   [15:0] tmp_29_reg_2964;
wire  signed [15:0] sum_32_fu_1987_p2;
reg  signed [15:0] sum_32_reg_2994;
reg  signed [15:0] sum_32_reg_2994_pp0_iter14_reg;
wire  signed [15:0] sum_33_fu_2047_p2;
reg  signed [15:0] sum_33_reg_3001;
reg  signed [15:0] sum_33_reg_3001_pp0_iter14_reg;
wire  signed [15:0] sum_34_fu_2079_p2;
reg  signed [15:0] sum_34_reg_3013;
wire   [15:0] max_val_2_fu_2089_p3;
reg   [15:0] max_val_2_reg_3019;
wire   [0:0] icmp_ln27_1_fu_2095_p2;
reg   [0:0] icmp_ln27_1_reg_3024;
wire   [15:0] grp_exp_17_9_s_fu_285_ap_return;
reg   [15:0] sum_22_reg_3029;
reg   [15:0] sum_22_reg_3029_pp0_iter21_reg;
wire   [15:0] grp_exp_17_9_s_fu_296_ap_return;
reg   [15:0] trunc_ln_reg_3035;
reg   [15:0] trunc_ln_reg_3035_pp0_iter21_reg;
wire   [15:0] grp_exp_17_9_s_fu_307_ap_return;
reg   [15:0] trunc_ln34_1_reg_3041;
reg   [15:0] trunc_ln34_1_reg_3041_pp0_iter21_reg;
wire   [15:0] sum_23_fu_2144_p2;
reg   [15:0] sum_23_reg_3047;
wire  signed [23:0] sext_ln42_fu_2156_p1;
wire    grp_exp_17_9_s_fu_285_ap_start;
wire    grp_exp_17_9_s_fu_285_ap_done;
wire    grp_exp_17_9_s_fu_285_ap_idle;
wire    grp_exp_17_9_s_fu_285_ap_ready;
wire   [16:0] grp_exp_17_9_s_fu_285_x_val;
wire    grp_exp_17_9_s_fu_296_ap_start;
wire    grp_exp_17_9_s_fu_296_ap_done;
wire    grp_exp_17_9_s_fu_296_ap_idle;
wire    grp_exp_17_9_s_fu_296_ap_ready;
wire   [16:0] grp_exp_17_9_s_fu_296_x_val;
wire    grp_exp_17_9_s_fu_307_ap_start;
wire    grp_exp_17_9_s_fu_307_ap_done;
wire    grp_exp_17_9_s_fu_307_ap_idle;
wire    grp_exp_17_9_s_fu_307_ap_ready;
wire   [16:0] grp_exp_17_9_s_fu_307_x_val;
reg    grp_exp_17_9_s_fu_285_ap_start_reg;
wire    ap_block_pp0_stage0;
reg    grp_exp_17_9_s_fu_296_ap_start_reg;
reg    grp_exp_17_9_s_fu_307_ap_start_reg;
wire    ap_block_pp0_stage0_01001;
wire  signed [15:0] sext_ln72_3_fu_318_p0;
wire  signed [15:0] mul_ln72_fu_325_p0;
wire  signed [23:0] sext_ln72_1_fu_322_p1;
wire  signed [7:0] mul_ln72_fu_325_p1;
wire   [23:0] mul_ln72_fu_325_p2;
wire  signed [15:0] mul_ln72_3_fu_347_p0;
wire  signed [7:0] mul_ln72_3_fu_347_p1;
wire   [23:0] mul_ln72_3_fu_347_p2;
wire  signed [15:0] mul_ln72_9_fu_363_p0;
wire  signed [7:0] mul_ln72_9_fu_363_p1;
wire   [23:0] mul_ln72_9_fu_363_p2;
wire  signed [15:0] mul_ln72_10_fu_379_p0;
wire   [8:0] mul_ln72_10_fu_379_p1;
wire   [23:0] mul_ln72_10_fu_379_p2;
wire  signed [15:0] mul_ln72_14_fu_395_p0;
wire  signed [7:0] mul_ln72_14_fu_395_p1;
wire   [23:0] mul_ln72_14_fu_395_p2;
wire  signed [15:0] mul_ln72_16_fu_411_p0;
wire  signed [7:0] mul_ln72_16_fu_411_p1;
wire   [23:0] mul_ln72_16_fu_411_p2;
wire   [20:0] shl_ln72_9_fu_453_p3;
wire  signed [21:0] sext_ln72_12_fu_460_p1;
wire  signed [21:0] sext_ln72_2_fu_430_p1;
wire   [21:0] sub_ln72_1_fu_464_p2;
wire   [13:0] trunc_ln2_fu_470_p4;
wire  signed [21:0] tmp_6_fu_480_p3;
wire   [20:0] shl_ln72_11_fu_492_p3;
wire   [18:0] shl_ln72_12_fu_503_p3;
wire  signed [21:0] sext_ln72_17_fu_510_p1;
wire  signed [21:0] sext_ln72_16_fu_499_p1;
wire   [21:0] sub_ln72_4_fu_514_p2;
wire   [23:0] shl_ln72_13_fu_520_p3;
wire  signed [23:0] sext_ln72_18_fu_527_p1;
wire   [23:0] add_ln72_9_fu_531_p2;
wire   [21:0] shl_ln72_29_fu_568_p3;
wire  signed [22:0] sext_ln72_28_fu_575_p1;
wire  signed [22:0] sext_ln72_fu_427_p1;
wire   [22:0] sub_ln72_7_fu_579_p2;
wire   [14:0] trunc_ln72_s_fu_585_p4;
wire  signed [22:0] tmp_20_fu_595_p3;
wire   [20:0] shl_ln72_2_fu_610_p3;
wire  signed [18:0] shl_ln72_3_fu_621_p3;
wire  signed [21:0] sext_ln72_7_fu_617_p1;
wire  signed [21:0] sext_ln72_8_fu_628_p1;
wire  signed [23:0] tmp_1_fu_638_p1;
wire   [23:0] grp_fu_2206_p3;
wire   [15:0] tmp_1_fu_638_p4;
wire   [21:0] sub_ln72_fu_632_p2;
wire   [23:0] shl_ln72_4_fu_647_p3;
wire  signed [23:0] sext_ln72_9_fu_655_p1;
wire   [23:0] add_ln72_1_fu_659_p2;
wire  signed [23:0] tmp_4_fu_675_p1;
wire   [23:0] grp_fu_2215_p3;
wire   [15:0] tmp_4_fu_675_p4;
wire   [21:0] sub_ln72_2_fu_692_p2;
wire  signed [23:0] grp_fu_2224_p3;
wire   [15:0] tmp_7_fu_703_p4;
wire   [21:0] sub_ln72_3_fu_698_p2;
wire   [23:0] shl_ln72_s_fu_712_p3;
wire  signed [23:0] sext_ln72_14_fu_720_p1;
wire   [23:0] add_ln72_7_fu_724_p2;
wire   [16:0] shl_ln72_15_fu_747_p3;
wire  signed [23:0] sext_ln72_19_fu_754_p1;
wire   [23:0] shl_ln72_14_fu_740_p3;
wire   [23:0] shl_ln72_16_fu_764_p3;
wire   [23:0] sub_ln72_5_fu_758_p2;
wire   [23:0] add_ln72_10_fu_771_p2;
wire  signed [23:0] tmp_12_fu_787_p1;
wire   [23:0] grp_fu_2233_p3;
wire   [15:0] tmp_12_fu_787_p4;
wire  signed [19:0] sext_ln72_5_fu_607_p1;
wire  signed [19:0] sext_ln72_22_fu_804_p1;
wire  signed [23:0] tmp_15_fu_814_p1;
wire   [23:0] grp_fu_2242_p3;
wire   [15:0] tmp_15_fu_814_p4;
wire   [19:0] sub_ln72_10_fu_808_p2;
wire   [23:0] shl_ln72_22_fu_823_p3;
wire  signed [23:0] sext_ln72_23_fu_831_p1;
wire   [23:0] add_ln72_16_fu_835_p2;
wire  signed [23:0] tmp_18_fu_851_p1;
wire   [23:0] grp_fu_2251_p3;
wire   [15:0] tmp_18_fu_851_p4;
wire  signed [23:0] grp_fu_2260_p3;
wire   [15:0] tmp_21_fu_868_p4;
wire  signed [23:0] tmp_5_fu_892_p1;
wire   [23:0] grp_fu_2269_p3;
wire   [15:0] tmp_5_fu_892_p4;
wire   [17:0] shl_ln_fu_916_p3;
wire   [23:0] shl_ln72_17_fu_923_p3;
wire  signed [23:0] sext_ln72_20_fu_930_p1;
wire   [23:0] add_ln72_11_fu_934_p2;
wire   [15:0] sum_6_fu_940_p4;
wire   [15:0] sum_27_fu_960_p2;
wire  signed [23:0] grp_fu_2278_p3;
wire   [15:0] tmp_13_fu_972_p4;
wire   [21:0] shl_ln72_23_fu_989_p3;
wire  signed [16:0] shl_ln72_24_fu_1000_p3;
wire  signed [22:0] sext_ln72_26_fu_1011_p1;
wire  signed [22:0] sext_ln72_24_fu_996_p1;
wire   [22:0] sub_ln72_6_fu_1015_p2;
wire   [23:0] shl_ln72_25_fu_1021_p3;
wire  signed [23:0] sext_ln72_27_fu_1028_p1;
wire   [23:0] add_ln72_17_fu_1032_p2;
wire  signed [23:0] tmp_19_fu_1058_p1;
wire   [23:0] grp_fu_2287_p3;
wire   [15:0] tmp_19_fu_1058_p4;
wire   [18:0] shl_ln72_31_fu_1075_p3;
wire  signed [19:0] sext_ln72_30_fu_1082_p1;
wire   [19:0] sub_ln72_8_fu_1086_p2;
wire  signed [19:0] sext_ln72_25_fu_1007_p1;
wire  signed [23:0] tmp_22_fu_1098_p1;
wire   [23:0] grp_fu_2296_p3;
wire   [15:0] tmp_22_fu_1098_p4;
wire   [19:0] sub_ln72_9_fu_1092_p2;
wire   [23:0] shl_ln72_32_fu_1107_p3;
wire  signed [23:0] sext_ln72_31_fu_1115_p1;
wire   [23:0] add_ln72_23_fu_1119_p2;
wire  signed [23:0] sum_fu_1145_p1;
wire   [23:0] grp_fu_2305_p3;
wire  signed [23:0] trunc_ln1_fu_1154_p1;
wire   [15:0] sum_fu_1145_p4;
wire   [14:0] trunc_ln1_fu_1154_p4;
wire   [15:0] sum_24_fu_1163_p2;
wire  signed [23:0] sum_2_fu_1181_p1;
wire   [23:0] grp_fu_2315_p3;
wire  signed [23:0] trunc_ln74_1_fu_1190_p1;
wire   [15:0] sum_2_fu_1181_p4;
wire   [15:0] sum_25_fu_1199_p2;
wire  signed [23:0] grp_fu_2325_p3;
wire   [15:0] sum_4_fu_1211_p4;
wire   [15:0] sum_26_fu_1229_p2;
wire   [14:0] add_ln69_3_fu_1241_p2;
wire  signed [23:0] sum_8_fu_1253_p1;
wire   [23:0] grp_fu_2335_p3;
wire  signed [23:0] trunc_ln74_4_fu_1262_p1;
wire   [15:0] sum_8_fu_1253_p4;
wire   [15:0] sum_28_fu_1271_p2;
wire   [15:0] sum_29_fu_1283_p2;
wire   [0:0] icmp_ln14_5_fu_1293_p2;
wire   [14:0] add_ln69_5_fu_1288_p2;
wire  signed [23:0] sum_12_fu_1307_p1;
wire   [23:0] grp_fu_2345_p3;
wire  signed [23:0] trunc_ln74_6_fu_1316_p1;
wire   [15:0] sum_12_fu_1307_p4;
wire   [15:0] sum_30_fu_1325_p2;
wire   [15:0] sum_31_fu_1337_p2;
wire   [0:0] icmp_ln14_7_fu_1347_p2;
wire   [14:0] add_ln69_7_fu_1342_p2;
wire   [14:0] add_ln69_1_fu_1367_p2;
wire   [14:0] add_ln69_2_fu_1379_p2;
wire   [14:0] add_ln69_4_fu_1391_p2;
wire   [14:0] add_ln69_6_fu_1403_p2;
wire   [14:0] mul_ln85_fu_1433_p0;
wire   [23:0] zext_ln85_2_fu_1430_p1;
wire   [9:0] mul_ln85_fu_1433_p1;
wire   [23:0] mul_ln85_fu_1433_p2;
wire   [14:0] mul_ln85_5_fu_1455_p0;
wire  signed [8:0] mul_ln85_5_fu_1455_p1;
wire   [23:0] mul_ln85_5_fu_1455_p2;
wire   [14:0] mul_ln85_11_fu_1471_p0;
wire  signed [7:0] mul_ln85_11_fu_1471_p1;
wire   [22:0] mul_ln85_11_fu_1471_p2;
wire   [17:0] shl_ln1_fu_1493_p3;
wire   [18:0] zext_ln85_6_fu_1500_p1;
wire   [18:0] zext_ln85_5_fu_1490_p1;
wire   [18:0] sub_ln85_1_fu_1504_p2;
wire   [23:0] shl_ln85_1_fu_1510_p3;
wire  signed [23:0] sext_ln85_fu_1517_p1;
wire   [23:0] add_ln85_fu_1521_p2;
wire   [15:0] tmp_24_fu_1527_p4;
wire   [15:0] zext_ln85_3_fu_1487_p1;
wire   [22:0] tmp_37_fu_1567_p3;
wire   [15:0] sub_ln85_fu_1561_p2;
wire  signed [23:0] sext_ln85_5_fu_1574_p1;
wire  signed [23:0] sext_ln85_6_fu_1578_p1;
wire   [23:0] add_ln85_14_fu_1582_p2;
wire   [15:0] tmp_38_fu_1588_p4;
wire   [21:0] shl_ln85_3_fu_1606_p3;
wire   [18:0] shl_ln85_4_fu_1617_p3;
wire   [22:0] zext_ln85_10_fu_1613_p1;
wire   [22:0] zext_ln85_11_fu_1624_p1;
wire   [23:0] grp_fu_2355_p3;
wire   [15:0] tmp_25_fu_1634_p4;
wire   [22:0] sub_ln85_2_fu_1628_p2;
wire   [23:0] shl_ln85_5_fu_1643_p3;
wire  signed [23:0] sext_ln85_1_fu_1651_p1;
wire   [23:0] add_ln85_2_fu_1655_p2;
wire   [15:0] tmp_26_fu_1661_p4;
wire   [17:0] shl_ln85_12_fu_1685_p3;
wire   [15:0] shl_ln85_13_fu_1696_p3;
wire   [18:0] zext_ln85_26_fu_1692_p1;
wire   [18:0] zext_ln85_27_fu_1703_p1;
wire   [23:0] grp_fu_2364_p3;
wire   [15:0] tmp_31_fu_1713_p4;
wire   [18:0] sub_ln85_3_fu_1707_p2;
wire   [23:0] shl_ln85_14_fu_1722_p3;
wire  signed [23:0] sext_ln85_3_fu_1730_p1;
wire   [23:0] add_ln85_8_fu_1734_p2;
wire   [15:0] tmp_32_fu_1740_p4;
wire  signed [23:0] tmp_39_fu_1758_p1;
wire   [23:0] grp_fu_2373_p3;
wire   [15:0] tmp_39_fu_1758_p4;
wire  signed [23:0] tmp_27_fu_1775_p1;
wire   [23:0] grp_fu_2382_p3;
wire   [15:0] tmp_27_fu_1775_p4;
wire  signed [23:0] tmp_33_fu_1801_p1;
wire   [23:0] grp_fu_2391_p3;
wire   [15:0] tmp_33_fu_1801_p4;
wire  signed [23:0] tmp_40_fu_1818_p1;
wire   [23:0] grp_fu_2400_p3;
wire   [15:0] tmp_40_fu_1818_p4;
wire   [18:0] shl_ln85_8_fu_1835_p3;
wire   [16:0] shl_ln85_9_fu_1846_p3;
wire   [19:0] zext_ln85_20_fu_1842_p1;
wire   [19:0] zext_ln85_21_fu_1853_p1;
wire  signed [23:0] grp_fu_2409_p3;
wire   [15:0] tmp_28_fu_1863_p4;
wire   [19:0] add_ln85_21_fu_1857_p2;
wire   [23:0] shl_ln85_s_fu_1872_p3;
wire   [23:0] zext_ln85_22_fu_1880_p1;
wire   [23:0] add_ln85_5_fu_1884_p2;
wire   [23:0] grp_fu_2418_p3;
wire   [15:0] tmp_34_fu_1903_p4;
wire   [23:0] grp_fu_2427_p3;
wire   [15:0] tmp_41_fu_1920_p4;
wire   [23:0] grp_fu_2436_p3;
wire   [15:0] tmp_35_fu_1944_p4;
wire  signed [23:0] tmp_42_fu_1961_p1;
wire   [23:0] grp_fu_2445_p3;
wire   [15:0] tmp_42_fu_1961_p4;
wire  signed [23:0] sum_16_fu_1978_p1;
wire   [23:0] grp_fu_2454_p3;
wire   [15:0] sum_16_fu_1978_p4;
wire   [15:0] shl_ln85_19_fu_1993_p3;
wire   [16:0] zext_ln85_31_fu_2000_p1;
wire   [23:0] grp_fu_2463_p3;
wire   [15:0] tmp_36_fu_2010_p4;
wire   [16:0] sub_ln85_4_fu_2004_p2;
wire   [23:0] shl_ln85_20_fu_2019_p3;
wire  signed [23:0] sext_ln85_4_fu_2027_p1;
wire   [23:0] add_ln85_13_fu_2031_p2;
wire   [15:0] sum_18_fu_2037_p4;
wire  signed [23:0] grp_fu_2472_p3;
wire   [15:0] tmp_43_fu_2053_p4;
wire   [23:0] grp_fu_2481_p3;
wire   [15:0] sum_20_fu_2070_p4;
wire   [0:0] icmp_ln27_fu_2085_p2;
wire   [15:0] max_val_4_fu_2101_p3;
wire  signed [16:0] sext_ln34_fu_2106_p1;
wire  signed [16:0] sext_ln34_1_fu_2109_p1;
wire  signed [16:0] sext_ln34_2_fu_2120_p1;
wire  signed [16:0] sext_ln34_3_fu_2130_p1;
wire   [15:0] add_ln35_fu_2140_p2;
wire   [23:0] grp_fu_2159_p0;
wire  signed [15:0] grp_fu_2159_p1;
wire   [23:0] grp_fu_2172_p0;
wire  signed [15:0] grp_fu_2172_p1;
wire   [23:0] grp_fu_2185_p0;
wire  signed [15:0] grp_fu_2185_p1;
wire   [15:0] grp_fu_2159_p2;
wire   [15:0] grp_fu_2172_p2;
wire   [15:0] grp_fu_2185_p2;
wire  signed [15:0] grp_fu_2206_p0;
wire   [6:0] grp_fu_2206_p1;
wire   [23:0] grp_fu_2206_p2;
wire  signed [15:0] grp_fu_2215_p0;
wire  signed [7:0] grp_fu_2215_p1;
wire   [23:0] grp_fu_2215_p2;
wire  signed [15:0] grp_fu_2224_p0;
wire   [7:0] grp_fu_2224_p1;
wire  signed [15:0] grp_fu_2233_p0;
wire  signed [8:0] grp_fu_2233_p1;
wire   [23:0] grp_fu_2233_p2;
wire  signed [15:0] grp_fu_2242_p0;
wire  signed [7:0] grp_fu_2242_p1;
wire   [23:0] grp_fu_2242_p2;
wire  signed [15:0] grp_fu_2251_p0;
wire  signed [8:0] grp_fu_2251_p1;
wire   [23:0] grp_fu_2251_p2;
wire  signed [15:0] grp_fu_2260_p0;
wire  signed [8:0] grp_fu_2260_p1;
wire  signed [15:0] grp_fu_2269_p0;
wire   [6:0] grp_fu_2269_p1;
wire   [23:0] grp_fu_2269_p2;
wire  signed [5:0] grp_fu_2278_p1;
wire  signed [23:0] grp_fu_2278_p2;
wire  signed [15:0] grp_fu_2287_p0;
wire  signed [7:0] grp_fu_2287_p1;
wire   [23:0] grp_fu_2287_p2;
wire  signed [15:0] grp_fu_2296_p0;
wire   [7:0] grp_fu_2296_p1;
wire   [23:0] grp_fu_2296_p2;
wire  signed [15:0] grp_fu_2305_p0;
wire  signed [8:0] grp_fu_2305_p1;
wire   [23:0] grp_fu_2305_p2;
wire  signed [15:0] grp_fu_2315_p0;
wire  signed [7:0] grp_fu_2315_p1;
wire   [23:0] grp_fu_2315_p2;
wire  signed [6:0] grp_fu_2325_p1;
wire  signed [23:0] grp_fu_2325_p2;
wire  signed [15:0] grp_fu_2335_p0;
wire  signed [7:0] grp_fu_2335_p1;
wire   [23:0] grp_fu_2335_p2;
wire  signed [15:0] grp_fu_2345_p0;
wire   [6:0] grp_fu_2345_p1;
wire   [23:0] grp_fu_2345_p2;
wire   [14:0] grp_fu_2355_p0;
wire   [5:0] grp_fu_2355_p1;
wire   [23:0] grp_fu_2355_p2;
wire   [14:0] grp_fu_2364_p0;
wire   [7:0] grp_fu_2364_p1;
wire   [23:0] grp_fu_2364_p2;
wire   [14:0] grp_fu_2373_p0;
wire  signed [8:0] grp_fu_2373_p1;
wire   [23:0] grp_fu_2373_p2;
wire   [14:0] grp_fu_2382_p0;
wire  signed [8:0] grp_fu_2382_p1;
wire   [23:0] grp_fu_2382_p2;
wire   [14:0] grp_fu_2391_p0;
wire  signed [8:0] grp_fu_2391_p1;
wire   [23:0] grp_fu_2391_p2;
wire   [14:0] grp_fu_2400_p0;
wire  signed [8:0] grp_fu_2400_p1;
wire   [23:0] grp_fu_2400_p2;
wire   [14:0] grp_fu_2409_p0;
wire  signed [7:0] grp_fu_2409_p1;
wire  signed [23:0] grp_fu_2409_p2;
wire   [14:0] grp_fu_2418_p0;
wire   [7:0] grp_fu_2418_p1;
wire   [23:0] grp_fu_2418_p2;
wire   [14:0] grp_fu_2427_p0;
wire   [5:0] grp_fu_2427_p1;
wire   [23:0] grp_fu_2427_p2;
wire   [14:0] grp_fu_2436_p0;
wire   [5:0] grp_fu_2436_p1;
wire   [23:0] grp_fu_2436_p2;
wire   [14:0] grp_fu_2445_p0;
wire  signed [8:0] grp_fu_2445_p1;
wire   [23:0] grp_fu_2445_p2;
wire   [14:0] grp_fu_2454_p0;
wire  signed [9:0] grp_fu_2454_p1;
wire   [23:0] grp_fu_2454_p2;
wire   [14:0] grp_fu_2463_p0;
wire   [7:0] grp_fu_2463_p1;
wire   [23:0] grp_fu_2463_p2;
wire   [14:0] grp_fu_2472_p0;
wire  signed [5:0] grp_fu_2472_p1;
wire  signed [23:0] grp_fu_2472_p2;
wire   [14:0] grp_fu_2481_p0;
wire   [7:0] grp_fu_2481_p1;
wire   [23:0] grp_fu_2481_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to48;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [20:0] grp_fu_2355_p00;
wire   [22:0] grp_fu_2364_p00;
wire   [23:0] grp_fu_2373_p00;
wire   [23:0] grp_fu_2382_p00;
wire   [22:0] grp_fu_2409_p00;
wire   [22:0] grp_fu_2418_p00;
wire   [20:0] grp_fu_2427_p00;
wire   [20:0] grp_fu_2436_p00;
wire   [23:0] grp_fu_2445_p00;
wire   [23:0] grp_fu_2454_p00;
wire   [22:0] grp_fu_2463_p00;
wire   [20:0] grp_fu_2472_p00;
wire   [22:0] grp_fu_2481_p00;
wire   [22:0] mul_ln85_11_fu_1471_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 grp_exp_17_9_s_fu_285_ap_start_reg = 1'b0;
#0 grp_exp_17_9_s_fu_296_ap_start_reg = 1'b0;
#0 grp_exp_17_9_s_fu_307_ap_start_reg = 1'b0;
end

neural_network_exp_17_9_s grp_exp_17_9_s_fu_285(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_17_9_s_fu_285_ap_start),
    .ap_done(grp_exp_17_9_s_fu_285_ap_done),
    .ap_idle(grp_exp_17_9_s_fu_285_ap_idle),
    .ap_ready(grp_exp_17_9_s_fu_285_ap_ready),
    .x_val(grp_exp_17_9_s_fu_285_x_val),
    .ap_return(grp_exp_17_9_s_fu_285_ap_return)
);

neural_network_exp_17_9_s grp_exp_17_9_s_fu_296(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_17_9_s_fu_296_ap_start),
    .ap_done(grp_exp_17_9_s_fu_296_ap_done),
    .ap_idle(grp_exp_17_9_s_fu_296_ap_idle),
    .ap_ready(grp_exp_17_9_s_fu_296_ap_ready),
    .x_val(grp_exp_17_9_s_fu_296_x_val),
    .ap_return(grp_exp_17_9_s_fu_296_ap_return)
);

neural_network_exp_17_9_s grp_exp_17_9_s_fu_307(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_17_9_s_fu_307_ap_start),
    .ap_done(grp_exp_17_9_s_fu_307_ap_done),
    .ap_idle(grp_exp_17_9_s_fu_307_ap_idle),
    .ap_ready(grp_exp_17_9_s_fu_307_ap_ready),
    .x_val(grp_exp_17_9_s_fu_307_x_val),
    .ap_return(grp_exp_17_9_s_fu_307_ap_return)
);

neural_network_CONTROL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
CONTROL_s_axi_U(
    .AWVALID(s_axi_CONTROL_AWVALID),
    .AWREADY(s_axi_CONTROL_AWREADY),
    .AWADDR(s_axi_CONTROL_AWADDR),
    .WVALID(s_axi_CONTROL_WVALID),
    .WREADY(s_axi_CONTROL_WREADY),
    .WDATA(s_axi_CONTROL_WDATA),
    .WSTRB(s_axi_CONTROL_WSTRB),
    .ARVALID(s_axi_CONTROL_ARVALID),
    .ARREADY(s_axi_CONTROL_ARREADY),
    .ARADDR(s_axi_CONTROL_ARADDR),
    .RVALID(s_axi_CONTROL_RVALID),
    .RREADY(s_axi_CONTROL_RREADY),
    .RDATA(s_axi_CONTROL_RDATA),
    .RRESP(s_axi_CONTROL_RRESP),
    .BVALID(s_axi_CONTROL_BVALID),
    .BREADY(s_axi_CONTROL_BREADY),
    .BRESP(s_axi_CONTROL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

neural_network_INPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_INPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_INPUT_DATA_WIDTH ))
INPUT_s_axi_U(
    .AWVALID(s_axi_INPUT_AWVALID),
    .AWREADY(s_axi_INPUT_AWREADY),
    .AWADDR(s_axi_INPUT_AWADDR),
    .WVALID(s_axi_INPUT_WVALID),
    .WREADY(s_axi_INPUT_WREADY),
    .WDATA(s_axi_INPUT_WDATA),
    .WSTRB(s_axi_INPUT_WSTRB),
    .ARVALID(s_axi_INPUT_ARVALID),
    .ARREADY(s_axi_INPUT_ARREADY),
    .ARADDR(s_axi_INPUT_ARADDR),
    .RVALID(s_axi_INPUT_RVALID),
    .RREADY(s_axi_INPUT_RREADY),
    .RDATA(s_axi_INPUT_RDATA),
    .RRESP(s_axi_INPUT_RRESP),
    .BVALID(s_axi_INPUT_BVALID),
    .BREADY(s_axi_INPUT_BREADY),
    .BRESP(s_axi_INPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_0(input_0),
    .input_1(input_1),
    .input_2(input_2),
    .input_3(input_3)
);

neural_network_OUTPUT_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_OUTPUT_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_OUTPUT_DATA_WIDTH ))
OUTPUT_s_axi_U(
    .AWVALID(s_axi_OUTPUT_AWVALID),
    .AWREADY(s_axi_OUTPUT_AWREADY),
    .AWADDR(s_axi_OUTPUT_AWADDR),
    .WVALID(s_axi_OUTPUT_WVALID),
    .WREADY(s_axi_OUTPUT_WREADY),
    .WDATA(s_axi_OUTPUT_WDATA),
    .WSTRB(s_axi_OUTPUT_WSTRB),
    .ARVALID(s_axi_OUTPUT_ARVALID),
    .ARREADY(s_axi_OUTPUT_ARREADY),
    .ARADDR(s_axi_OUTPUT_ARADDR),
    .RVALID(s_axi_OUTPUT_RVALID),
    .RREADY(s_axi_OUTPUT_RREADY),
    .RDATA(s_axi_OUTPUT_RDATA),
    .RRESP(s_axi_OUTPUT_RRESP),
    .BVALID(s_axi_OUTPUT_BVALID),
    .BREADY(s_axi_OUTPUT_BREADY),
    .BRESP(s_axi_OUTPUT_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .output_0(output_0),
    .output_0_ap_vld(output_0_ap_vld),
    .output_1(output_1),
    .output_1_ap_vld(output_1_ap_vld),
    .output_2(output_2),
    .output_2_ap_vld(output_2_ap_vld)
);

neural_network_mul_16s_8s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8s_24_1_1_U9(
    .din0(mul_ln72_fu_325_p0),
    .din1(mul_ln72_fu_325_p1),
    .dout(mul_ln72_fu_325_p2)
);

neural_network_mul_16s_8s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8s_24_1_1_U10(
    .din0(mul_ln72_3_fu_347_p0),
    .din1(mul_ln72_3_fu_347_p1),
    .dout(mul_ln72_3_fu_347_p2)
);

neural_network_mul_16s_8s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8s_24_1_1_U11(
    .din0(mul_ln72_9_fu_363_p0),
    .din1(mul_ln72_9_fu_363_p1),
    .dout(mul_ln72_9_fu_363_p2)
);

neural_network_mul_16s_9ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
mul_16s_9ns_24_1_1_U12(
    .din0(mul_ln72_10_fu_379_p0),
    .din1(mul_ln72_10_fu_379_p1),
    .dout(mul_ln72_10_fu_379_p2)
);

neural_network_mul_16s_8s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8s_24_1_1_U13(
    .din0(mul_ln72_14_fu_395_p0),
    .din1(mul_ln72_14_fu_395_p1),
    .dout(mul_ln72_14_fu_395_p2)
);

neural_network_mul_16s_8s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8s_24_1_1_U14(
    .din0(mul_ln72_16_fu_411_p0),
    .din1(mul_ln72_16_fu_411_p1),
    .dout(mul_ln72_16_fu_411_p2)
);

neural_network_mul_15ns_10ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 24 ))
mul_15ns_10ns_24_1_1_U15(
    .din0(mul_ln85_fu_1433_p0),
    .din1(mul_ln85_fu_1433_p1),
    .dout(mul_ln85_fu_1433_p2)
);

neural_network_mul_15ns_9s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
mul_15ns_9s_24_1_1_U16(
    .din0(mul_ln85_5_fu_1455_p0),
    .din1(mul_ln85_5_fu_1455_p1),
    .dout(mul_ln85_5_fu_1455_p2)
);

neural_network_mul_15ns_8s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
mul_15ns_8s_23_1_1_U17(
    .din0(mul_ln85_11_fu_1471_p0),
    .din1(mul_ln85_11_fu_1471_p1),
    .dout(mul_ln85_11_fu_1471_p2)
);

neural_network_sdiv_24ns_16s_16_28_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sdiv_24ns_16s_16_28_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2159_p0),
    .din1(grp_fu_2159_p1),
    .ce(1'b1),
    .dout(grp_fu_2159_p2)
);

neural_network_sdiv_24ns_16s_16_28_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sdiv_24ns_16s_16_28_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2172_p0),
    .din1(grp_fu_2172_p1),
    .ce(1'b1),
    .dout(grp_fu_2172_p2)
);

neural_network_sdiv_24ns_16s_16_28_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sdiv_24ns_16s_16_28_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2185_p0),
    .din1(grp_fu_2185_p1),
    .ce(1'b1),
    .dout(grp_fu_2185_p2)
);

neural_network_mac_muladd_16s_7ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7ns_24ns_24_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2206_p0),
    .din1(grp_fu_2206_p1),
    .din2(grp_fu_2206_p2),
    .ce(1'b1),
    .dout(grp_fu_2206_p3)
);

neural_network_mac_muladd_16s_8s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8s_24ns_24_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2215_p0),
    .din1(grp_fu_2215_p1),
    .din2(grp_fu_2215_p2),
    .ce(1'b1),
    .dout(grp_fu_2215_p3)
);

neural_network_mac_muladd_16s_8ns_22s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8ns_22s_24_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2224_p0),
    .din1(grp_fu_2224_p1),
    .din2(tmp_6_fu_480_p3),
    .ce(1'b1),
    .dout(grp_fu_2224_p3)
);

neural_network_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2233_p0),
    .din1(grp_fu_2233_p1),
    .din2(grp_fu_2233_p2),
    .ce(1'b1),
    .dout(grp_fu_2233_p3)
);

neural_network_mac_muladd_16s_8s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8s_24ns_24_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2242_p0),
    .din1(grp_fu_2242_p1),
    .din2(grp_fu_2242_p2),
    .ce(1'b1),
    .dout(grp_fu_2242_p3)
);

neural_network_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2251_p0),
    .din1(grp_fu_2251_p1),
    .din2(grp_fu_2251_p2),
    .ce(1'b1),
    .dout(grp_fu_2251_p3)
);

neural_network_mac_muladd_16s_9s_23s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_23s_24_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2260_p0),
    .din1(grp_fu_2260_p1),
    .din2(tmp_20_fu_595_p3),
    .ce(1'b1),
    .dout(grp_fu_2260_p3)
);

neural_network_mac_muladd_16s_7ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7ns_24ns_24_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2269_p0),
    .din1(grp_fu_2269_p1),
    .din2(grp_fu_2269_p2),
    .ce(1'b1),
    .dout(grp_fu_2269_p3)
);

neural_network_mac_muladd_16s_6s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_6s_24s_24_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(input_2_read_reg_2516),
    .din1(grp_fu_2278_p1),
    .din2(grp_fu_2278_p2),
    .ce(1'b1),
    .dout(grp_fu_2278_p3)
);

neural_network_mac_muladd_16s_8s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8s_24ns_24_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2287_p0),
    .din1(grp_fu_2287_p1),
    .din2(grp_fu_2287_p2),
    .ce(1'b1),
    .dout(grp_fu_2287_p3)
);

neural_network_mac_muladd_16s_8ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8ns_24ns_24_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2296_p0),
    .din1(grp_fu_2296_p1),
    .din2(grp_fu_2296_p2),
    .ce(1'b1),
    .dout(grp_fu_2296_p3)
);

neural_network_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2305_p0),
    .din1(grp_fu_2305_p1),
    .din2(grp_fu_2305_p2),
    .ce(1'b1),
    .dout(grp_fu_2305_p3)
);

neural_network_mac_muladd_16s_8s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8s_24ns_24_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2315_p0),
    .din1(grp_fu_2315_p1),
    .din2(grp_fu_2315_p2),
    .ce(1'b1),
    .dout(grp_fu_2315_p3)
);

neural_network_mac_muladd_16s_7s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7s_24s_24_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(input_3_read_reg_2527_pp0_iter1_reg),
    .din1(grp_fu_2325_p1),
    .din2(grp_fu_2325_p2),
    .ce(1'b1),
    .dout(grp_fu_2325_p3)
);

neural_network_mac_muladd_16s_8s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8s_24ns_24_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2335_p0),
    .din1(grp_fu_2335_p1),
    .din2(grp_fu_2335_p2),
    .ce(1'b1),
    .dout(grp_fu_2335_p3)
);

neural_network_mac_muladd_16s_7ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7ns_24ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2345_p0),
    .din1(grp_fu_2345_p1),
    .din2(grp_fu_2345_p2),
    .ce(1'b1),
    .dout(grp_fu_2345_p3)
);

neural_network_mac_muladd_15ns_6ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_6ns_24ns_24_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2355_p0),
    .din1(grp_fu_2355_p1),
    .din2(grp_fu_2355_p2),
    .ce(1'b1),
    .dout(grp_fu_2355_p3)
);

neural_network_mac_muladd_15ns_8ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_8ns_24ns_24_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2364_p0),
    .din1(grp_fu_2364_p1),
    .din2(grp_fu_2364_p2),
    .ce(1'b1),
    .dout(grp_fu_2364_p3)
);

neural_network_mac_muladd_15ns_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_9s_24ns_24_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2373_p0),
    .din1(grp_fu_2373_p1),
    .din2(grp_fu_2373_p2),
    .ce(1'b1),
    .dout(grp_fu_2373_p3)
);

neural_network_mac_muladd_15ns_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_9s_24ns_24_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2382_p0),
    .din1(grp_fu_2382_p1),
    .din2(grp_fu_2382_p2),
    .ce(1'b1),
    .dout(grp_fu_2382_p3)
);

neural_network_mac_muladd_15ns_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_9s_24ns_24_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2391_p0),
    .din1(grp_fu_2391_p1),
    .din2(grp_fu_2391_p2),
    .ce(1'b1),
    .dout(grp_fu_2391_p3)
);

neural_network_mac_muladd_15ns_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_9s_24ns_24_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2400_p0),
    .din1(grp_fu_2400_p1),
    .din2(grp_fu_2400_p2),
    .ce(1'b1),
    .dout(grp_fu_2400_p3)
);

neural_network_mac_muladd_15ns_8s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_8s_24s_24_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2409_p0),
    .din1(grp_fu_2409_p1),
    .din2(grp_fu_2409_p2),
    .ce(1'b1),
    .dout(grp_fu_2409_p3)
);

neural_network_mac_muladd_15ns_8ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_8ns_24ns_24_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2418_p0),
    .din1(grp_fu_2418_p1),
    .din2(grp_fu_2418_p2),
    .ce(1'b1),
    .dout(grp_fu_2418_p3)
);

neural_network_mac_muladd_15ns_6ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_6ns_24ns_24_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2427_p0),
    .din1(grp_fu_2427_p1),
    .din2(grp_fu_2427_p2),
    .ce(1'b1),
    .dout(grp_fu_2427_p3)
);

neural_network_mac_muladd_15ns_6ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_6ns_24ns_24_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2436_p0),
    .din1(grp_fu_2436_p1),
    .din2(grp_fu_2436_p2),
    .ce(1'b1),
    .dout(grp_fu_2436_p3)
);

neural_network_mac_muladd_15ns_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_9s_24ns_24_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2445_p0),
    .din1(grp_fu_2445_p1),
    .din2(grp_fu_2445_p2),
    .ce(1'b1),
    .dout(grp_fu_2445_p3)
);

neural_network_mac_muladd_15ns_10s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_10s_24ns_24_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2454_p0),
    .din1(grp_fu_2454_p1),
    .din2(grp_fu_2454_p2),
    .ce(1'b1),
    .dout(grp_fu_2454_p3)
);

neural_network_mac_muladd_15ns_8ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_8ns_24ns_24_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2463_p0),
    .din1(grp_fu_2463_p1),
    .din2(grp_fu_2463_p2),
    .ce(1'b1),
    .dout(grp_fu_2463_p3)
);

neural_network_mac_muladd_15ns_6s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_6s_24s_24_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2472_p0),
    .din1(grp_fu_2472_p1),
    .din2(grp_fu_2472_p2),
    .ce(1'b1),
    .dout(grp_fu_2472_p3)
);

neural_network_mac_muladd_15ns_8ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_15ns_8ns_24ns_24_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2481_p0),
    .din1(grp_fu_2481_p1),
    .din2(grp_fu_2481_p2),
    .ce(1'b1),
    .dout(grp_fu_2481_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_17_9_s_fu_285_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_17_9_s_fu_285_ap_start_reg <= 1'b1;
        end else if ((grp_exp_17_9_s_fu_285_ap_ready == 1'b1)) begin
            grp_exp_17_9_s_fu_285_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_17_9_s_fu_296_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_17_9_s_fu_296_ap_start_reg <= 1'b1;
        end else if ((grp_exp_17_9_s_fu_296_ap_ready == 1'b1)) begin
            grp_exp_17_9_s_fu_296_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_17_9_s_fu_307_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_17_9_s_fu_307_ap_start_reg <= 1'b1;
        end else if ((grp_exp_17_9_s_fu_307_ap_ready == 1'b1)) begin
            grp_exp_17_9_s_fu_307_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln69_reg_2728 <= add_ln69_fu_1169_p2;
        icmp_ln14_1_reg_2743 <= icmp_ln14_1_fu_1205_p2;
        icmp_ln14_2_reg_2753 <= icmp_ln14_2_fu_1235_p2;
        icmp_ln14_3_reg_2693 <= icmp_ln14_3_fu_966_p2;
        icmp_ln14_4_reg_2770 <= icmp_ln14_4_fu_1277_p2;
        icmp_ln14_6_reg_2787 <= icmp_ln14_6_fu_1331_p2;
        icmp_ln14_reg_2733 <= icmp_ln14_fu_1175_p2;
        icmp_ln27_1_reg_3024 <= icmp_ln27_1_fu_2095_p2;
        input_2_read_reg_2516_pp0_iter2_reg <= input_2_read_reg_2516_pp0_iter1_reg;
        input_3_read_reg_2527_pp0_iter2_reg <= input_3_read_reg_2527_pp0_iter1_reg;
        input_3_read_reg_2527_pp0_iter3_reg <= input_3_read_reg_2527_pp0_iter2_reg;
        max_val_2_reg_3019 <= max_val_2_fu_2089_p3;
        select_ln14_1_reg_2805 <= select_ln14_1_fu_1372_p3;
        select_ln14_1_reg_2805_pp0_iter7_reg <= select_ln14_1_reg_2805;
        select_ln14_2_reg_2812 <= select_ln14_2_fu_1384_p3;
        select_ln14_2_reg_2812_pp0_iter7_reg <= select_ln14_2_reg_2812;
        select_ln14_2_reg_2812_pp0_iter8_reg <= select_ln14_2_reg_2812_pp0_iter7_reg;
        select_ln14_3_reg_2758 <= select_ln14_3_fu_1246_p3;
        select_ln14_3_reg_2758_pp0_iter6_reg <= select_ln14_3_reg_2758;
        select_ln14_3_reg_2758_pp0_iter7_reg <= select_ln14_3_reg_2758_pp0_iter6_reg;
        select_ln14_3_reg_2758_pp0_iter8_reg <= select_ln14_3_reg_2758_pp0_iter7_reg;
        select_ln14_4_reg_2818 <= select_ln14_4_fu_1396_p3;
        select_ln14_4_reg_2818_pp0_iter7_reg <= select_ln14_4_reg_2818;
        select_ln14_5_reg_2775 <= select_ln14_5_fu_1299_p3;
        select_ln14_5_reg_2775_pp0_iter6_reg <= select_ln14_5_reg_2775;
        select_ln14_5_reg_2775_pp0_iter7_reg <= select_ln14_5_reg_2775_pp0_iter6_reg;
        select_ln14_5_reg_2775_pp0_iter8_reg <= select_ln14_5_reg_2775_pp0_iter7_reg;
        select_ln14_6_reg_2825 <= select_ln14_6_fu_1408_p3;
        select_ln14_6_reg_2825_pp0_iter10_reg <= select_ln14_6_reg_2825_pp0_iter9_reg;
        select_ln14_6_reg_2825_pp0_iter7_reg <= select_ln14_6_reg_2825;
        select_ln14_6_reg_2825_pp0_iter8_reg <= select_ln14_6_reg_2825_pp0_iter7_reg;
        select_ln14_6_reg_2825_pp0_iter9_reg <= select_ln14_6_reg_2825_pp0_iter8_reg;
        select_ln14_7_reg_2792 <= select_ln14_7_fu_1353_p3;
        select_ln14_7_reg_2792_pp0_iter10_reg <= select_ln14_7_reg_2792_pp0_iter9_reg;
        select_ln14_7_reg_2792_pp0_iter11_reg <= select_ln14_7_reg_2792_pp0_iter10_reg;
        select_ln14_7_reg_2792_pp0_iter12_reg <= select_ln14_7_reg_2792_pp0_iter11_reg;
        select_ln14_7_reg_2792_pp0_iter6_reg <= select_ln14_7_reg_2792;
        select_ln14_7_reg_2792_pp0_iter7_reg <= select_ln14_7_reg_2792_pp0_iter6_reg;
        select_ln14_7_reg_2792_pp0_iter8_reg <= select_ln14_7_reg_2792_pp0_iter7_reg;
        select_ln14_7_reg_2792_pp0_iter9_reg <= select_ln14_7_reg_2792_pp0_iter8_reg;
        select_ln14_reg_2799 <= select_ln14_fu_1361_p3;
        sext_ln72_6_reg_2549_pp0_iter2_reg <= sext_ln72_6_reg_2549;
        sum_10_reg_2703 <= {{add_ln72_17_fu_1032_p2[23:8]}};
        sum_14_reg_2718 <= {{add_ln72_23_fu_1119_p2[23:8]}};
        sum_22_reg_3029 <= grp_exp_17_9_s_fu_285_ap_return;
        sum_22_reg_3029_pp0_iter21_reg <= sum_22_reg_3029;
        sum_23_reg_3047 <= sum_23_fu_2144_p2;
        sum_32_reg_2994 <= sum_32_fu_1987_p2;
        sum_32_reg_2994_pp0_iter14_reg <= sum_32_reg_2994;
        sum_33_reg_3001 <= sum_33_fu_2047_p2;
        sum_33_reg_3001_pp0_iter14_reg <= sum_33_reg_3001;
        sum_34_reg_3013 <= sum_34_fu_2079_p2;
        tmp_10_reg_2648 <= {{add_ln72_10_fu_771_p2[23:8]}};
        tmp_16_reg_2658 <= {{add_ln72_16_fu_835_p2[23:8]}};
        tmp_23_reg_2848 <= {{mul_ln85_fu_1433_p2[23:8]}};
        tmp_29_reg_2964 <= {{add_ln85_5_fu_1884_p2[23:8]}};
        tmp_2_reg_2633 <= {{add_ln72_1_fu_659_p2[23:8]}};
        tmp_30_reg_2864 <= {{mul_ln85_5_fu_1455_p2[23:8]}};
        tmp_8_reg_2643 <= {{add_ln72_7_fu_724_p2[23:8]}};
        tmp_s_reg_2608 <= {{add_ln72_9_fu_531_p2[23:8]}};
        trunc_ln34_1_reg_3041 <= grp_exp_17_9_s_fu_307_ap_return;
        trunc_ln34_1_reg_3041_pp0_iter21_reg <= trunc_ln34_1_reg_3041;
        trunc_ln3_reg_2869 <= {{mul_ln85_11_fu_1471_p2[22:8]}};
        trunc_ln74_1_reg_2738 <= {{trunc_ln74_1_fu_1190_p1[22:8]}};
        trunc_ln74_2_reg_2748 <= {{grp_fu_2325_p3[22:8]}};
        trunc_ln74_3_reg_2688 <= {{add_ln72_11_fu_934_p2[22:8]}};
        trunc_ln74_4_reg_2765 <= {{trunc_ln74_4_fu_1262_p1[22:8]}};
        trunc_ln74_5_reg_2708 <= {{add_ln72_17_fu_1032_p2[22:8]}};
        trunc_ln74_6_reg_2782 <= {{trunc_ln74_6_fu_1316_p1[22:8]}};
        trunc_ln74_7_reg_2723 <= {{add_ln72_23_fu_1119_p2[22:8]}};
        trunc_ln_reg_3035 <= grp_exp_17_9_s_fu_296_ap_return;
        trunc_ln_reg_3035_pp0_iter21_reg <= trunc_ln_reg_3035;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_read_reg_2490 <= input_0;
        input_0_read_reg_2490_pp0_iter1_reg <= input_0_read_reg_2490;
        input_1_read_reg_2499 <= input_1;
        input_1_read_reg_2499_pp0_iter1_reg <= input_1_read_reg_2499;
        input_2_read_reg_2516 <= input_2;
        input_2_read_reg_2516_pp0_iter1_reg <= input_2_read_reg_2516;
        input_3_read_reg_2527 <= input_3;
        input_3_read_reg_2527_pp0_iter1_reg <= input_3_read_reg_2527;
        sext_ln72_6_reg_2549 <= sext_ln72_6_fu_344_p1;
        tmp_11_reg_2565 <= {{mul_ln72_10_fu_379_p2[23:8]}};
        tmp_14_reg_2570 <= {{mul_ln72_14_fu_395_p2[23:8]}};
        tmp_17_reg_2575 <= {{mul_ln72_16_fu_411_p2[23:8]}};
        tmp_3_reg_2555 <= {{mul_ln72_3_fu_347_p2[23:8]}};
        tmp_9_reg_2560 <= {{mul_ln72_9_fu_363_p2[23:8]}};
        tmp_reg_2537 <= {{mul_ln72_fu_325_p2[23:8]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) 
    & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) 
    & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to48 = 1'b1;
    end else begin
        ap_idle_pp0_0to48 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to48 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        output_0_ap_vld = 1'b1;
    end else begin
        output_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        output_1_ap_vld = 1'b1;
    end else begin
        output_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        output_2_ap_vld = 1'b1;
    end else begin
        output_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln35_fu_2140_p2 = (sum_22_reg_3029 + trunc_ln34_1_reg_3041);

assign add_ln69_1_fu_1367_p2 = (trunc_ln74_1_reg_2738 + 15'd19);

assign add_ln69_2_fu_1379_p2 = (trunc_ln74_2_reg_2748 + 15'd6);

assign add_ln69_3_fu_1241_p2 = (trunc_ln74_3_reg_2688 + 15'd51);

assign add_ln69_4_fu_1391_p2 = (trunc_ln74_4_reg_2765 + 15'd118);

assign add_ln69_5_fu_1288_p2 = (trunc_ln74_5_reg_2708 + 15'd60);

assign add_ln69_6_fu_1403_p2 = (trunc_ln74_6_reg_2782 + 15'd19);

assign add_ln69_7_fu_1342_p2 = (trunc_ln74_7_reg_2723 + 15'd81);

assign add_ln69_fu_1169_p2 = (trunc_ln1_fu_1154_p4 + 15'd31);

assign add_ln72_10_fu_771_p2 = (shl_ln72_16_fu_764_p3 + sub_ln72_5_fu_758_p2);

assign add_ln72_11_fu_934_p2 = ($signed(shl_ln72_17_fu_923_p3) + $signed(sext_ln72_20_fu_930_p1));

assign add_ln72_16_fu_835_p2 = ($signed(shl_ln72_22_fu_823_p3) + $signed(sext_ln72_23_fu_831_p1));

assign add_ln72_17_fu_1032_p2 = ($signed(shl_ln72_25_fu_1021_p3) + $signed(sext_ln72_27_fu_1028_p1));

assign add_ln72_1_fu_659_p2 = ($signed(shl_ln72_4_fu_647_p3) + $signed(sext_ln72_9_fu_655_p1));

assign add_ln72_23_fu_1119_p2 = ($signed(shl_ln72_32_fu_1107_p3) + $signed(sext_ln72_31_fu_1115_p1));

assign add_ln72_7_fu_724_p2 = ($signed(shl_ln72_s_fu_712_p3) + $signed(sext_ln72_14_fu_720_p1));

assign add_ln72_9_fu_531_p2 = ($signed(shl_ln72_13_fu_520_p3) + $signed(sext_ln72_18_fu_527_p1));

assign add_ln85_13_fu_2031_p2 = ($signed(shl_ln85_20_fu_2019_p3) + $signed(sext_ln85_4_fu_2027_p1));

assign add_ln85_14_fu_1582_p2 = ($signed(sext_ln85_5_fu_1574_p1) + $signed(sext_ln85_6_fu_1578_p1));

assign add_ln85_21_fu_1857_p2 = (zext_ln85_20_fu_1842_p1 + zext_ln85_21_fu_1853_p1);

assign add_ln85_2_fu_1655_p2 = ($signed(shl_ln85_5_fu_1643_p3) + $signed(sext_ln85_1_fu_1651_p1));

assign add_ln85_5_fu_1884_p2 = (shl_ln85_s_fu_1872_p3 + zext_ln85_22_fu_1880_p1);

assign add_ln85_8_fu_1734_p2 = ($signed(shl_ln85_14_fu_1722_p3) + $signed(sext_ln85_3_fu_1730_p1));

assign add_ln85_fu_1521_p2 = ($signed(shl_ln85_1_fu_1510_p3) + $signed(sext_ln85_fu_1517_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_exp_17_9_s_fu_285_ap_start = grp_exp_17_9_s_fu_285_ap_start_reg;

assign grp_exp_17_9_s_fu_285_x_val = ($signed(sext_ln34_fu_2106_p1) - $signed(sext_ln34_1_fu_2109_p1));

assign grp_exp_17_9_s_fu_296_ap_start = grp_exp_17_9_s_fu_296_ap_start_reg;

assign grp_exp_17_9_s_fu_296_x_val = ($signed(sext_ln34_2_fu_2120_p1) - $signed(sext_ln34_1_fu_2109_p1));

assign grp_exp_17_9_s_fu_307_ap_start = grp_exp_17_9_s_fu_307_ap_start_reg;

assign grp_exp_17_9_s_fu_307_x_val = ($signed(sext_ln34_3_fu_2130_p1) - $signed(sext_ln34_1_fu_2109_p1));

assign grp_fu_2159_p0 = {{sum_22_reg_3029_pp0_iter21_reg}, {8'd0}};

assign grp_fu_2159_p1 = sext_ln42_fu_2156_p1;

assign grp_fu_2172_p0 = {{trunc_ln_reg_3035_pp0_iter21_reg}, {8'd0}};

assign grp_fu_2172_p1 = sext_ln42_fu_2156_p1;

assign grp_fu_2185_p0 = {{trunc_ln34_1_reg_3041_pp0_iter21_reg}, {8'd0}};

assign grp_fu_2185_p1 = sext_ln42_fu_2156_p1;

assign grp_fu_2206_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2206_p1 = 24'd87;

assign grp_fu_2206_p2 = {{tmp_reg_2537}, {8'd0}};

assign grp_fu_2215_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2215_p1 = 24'd16777137;

assign grp_fu_2215_p2 = {{tmp_3_reg_2555}, {8'd0}};

assign grp_fu_2224_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2224_p1 = 24'd134;

assign grp_fu_2233_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2233_p1 = 24'd16776973;

assign grp_fu_2233_p2 = {{tmp_11_reg_2565}, {8'd0}};

assign grp_fu_2242_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2242_p1 = 24'd16777126;

assign grp_fu_2242_p2 = {{tmp_14_reg_2570}, {8'd0}};

assign grp_fu_2251_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2251_p1 = 24'd16777038;

assign grp_fu_2251_p2 = {{tmp_17_reg_2575}, {8'd0}};

assign grp_fu_2260_p0 = sext_ln72_3_fu_318_p1;

assign grp_fu_2260_p1 = 24'd16777075;

assign grp_fu_2269_p0 = sext_ln72_4_fu_341_p1;

assign grp_fu_2269_p1 = 24'd102;

assign grp_fu_2269_p2 = {{tmp_4_fu_675_p4}, {8'd0}};

assign grp_fu_2278_p1 = 22'd4194278;

assign grp_fu_2278_p2 = {{tmp_12_fu_787_p4}, {8'd0}};

assign grp_fu_2287_p0 = sext_ln72_4_fu_341_p1;

assign grp_fu_2287_p1 = 24'd16777134;

assign grp_fu_2287_p2 = {{tmp_18_fu_851_p4}, {8'd0}};

assign grp_fu_2296_p0 = sext_ln72_4_fu_341_p1;

assign grp_fu_2296_p1 = 24'd231;

assign grp_fu_2296_p2 = {{tmp_21_fu_868_p4}, {8'd0}};

assign grp_fu_2305_p0 = sext_ln72_11_fu_443_p1;

assign grp_fu_2305_p1 = 24'd16777005;

assign grp_fu_2305_p2 = {{tmp_2_reg_2633}, {8'd0}};

assign grp_fu_2315_p0 = sext_ln72_11_fu_443_p1;

assign grp_fu_2315_p1 = 24'd16777117;

assign grp_fu_2315_p2 = {{tmp_5_fu_892_p4}, {8'd0}};

assign grp_fu_2325_p1 = 23'd8388564;

assign grp_fu_2325_p2 = {{tmp_8_reg_2643}, {8'd0}};

assign grp_fu_2335_p0 = sext_ln72_11_fu_443_p1;

assign grp_fu_2335_p1 = 24'd16777123;

assign grp_fu_2335_p2 = {{tmp_13_fu_972_p4}, {8'd0}};

assign grp_fu_2345_p0 = sext_ln72_11_fu_443_p1;

assign grp_fu_2345_p1 = 24'd85;

assign grp_fu_2345_p2 = {{tmp_19_fu_1058_p4}, {8'd0}};

assign grp_fu_2355_p0 = grp_fu_2355_p00;

assign grp_fu_2355_p00 = select_ln14_2_fu_1384_p3;

assign grp_fu_2355_p1 = 21'd35;

assign grp_fu_2355_p2 = {{tmp_24_fu_1527_p4}, {8'd0}};

assign grp_fu_2364_p0 = grp_fu_2364_p00;

assign grp_fu_2364_p00 = select_ln14_1_fu_1372_p3;

assign grp_fu_2364_p1 = 23'd182;

assign grp_fu_2364_p2 = {{tmp_30_reg_2864}, {8'd0}};

assign grp_fu_2373_p0 = grp_fu_2373_p00;

assign grp_fu_2373_p00 = select_ln14_2_fu_1384_p3;

assign grp_fu_2373_p1 = 24'd16777082;

assign grp_fu_2373_p2 = {{tmp_38_fu_1588_p4}, {8'd0}};

assign grp_fu_2382_p0 = grp_fu_2382_p00;

assign grp_fu_2382_p00 = select_ln14_4_reg_2818;

assign grp_fu_2382_p1 = 24'd16777083;

assign grp_fu_2382_p2 = {{tmp_26_fu_1661_p4}, {8'd0}};

assign grp_fu_2391_p0 = zext_ln85_9_fu_1449_p1;

assign grp_fu_2391_p1 = 24'd16777061;

assign grp_fu_2391_p2 = {{tmp_32_fu_1740_p4}, {8'd0}};

assign grp_fu_2400_p0 = zext_ln85_9_fu_1449_p1;

assign grp_fu_2400_p1 = 24'd16777076;

assign grp_fu_2400_p2 = {{tmp_39_fu_1758_p4}, {8'd0}};

assign grp_fu_2409_p0 = grp_fu_2409_p00;

assign grp_fu_2409_p00 = select_ln14_5_reg_2775_pp0_iter7_reg;

assign grp_fu_2409_p1 = 23'd8388515;

assign grp_fu_2409_p2 = {{tmp_27_fu_1775_p4}, {8'd0}};

assign grp_fu_2418_p0 = grp_fu_2418_p00;

assign grp_fu_2418_p00 = select_ln14_4_reg_2818_pp0_iter7_reg;

assign grp_fu_2418_p1 = 23'd142;

assign grp_fu_2418_p2 = {{tmp_33_fu_1801_p4}, {8'd0}};

assign grp_fu_2427_p0 = grp_fu_2427_p00;

assign grp_fu_2427_p00 = select_ln14_4_reg_2818_pp0_iter7_reg;

assign grp_fu_2427_p1 = 21'd42;

assign grp_fu_2427_p2 = {{tmp_40_fu_1818_p4}, {8'd0}};

assign grp_fu_2436_p0 = grp_fu_2436_p00;

assign grp_fu_2436_p00 = select_ln14_5_reg_2775_pp0_iter8_reg;

assign grp_fu_2436_p1 = 21'd43;

assign grp_fu_2436_p2 = {{tmp_34_fu_1903_p4}, {8'd0}};

assign grp_fu_2445_p0 = grp_fu_2445_p00;

assign grp_fu_2445_p00 = select_ln14_5_reg_2775_pp0_iter8_reg;

assign grp_fu_2445_p1 = 24'd16776965;

assign grp_fu_2445_p2 = {{tmp_41_fu_1920_p4}, {8'd0}};

assign grp_fu_2454_p0 = grp_fu_2454_p00;

assign grp_fu_2454_p00 = select_ln14_7_reg_2792_pp0_iter9_reg;

assign grp_fu_2454_p1 = 24'd16776899;

assign grp_fu_2454_p2 = {{tmp_29_reg_2964}, {8'd0}};

assign grp_fu_2463_p0 = grp_fu_2463_p00;

assign grp_fu_2463_p00 = select_ln14_6_reg_2825_pp0_iter9_reg;

assign grp_fu_2463_p1 = 23'd228;

assign grp_fu_2463_p2 = {{tmp_35_fu_1944_p4}, {8'd0}};

assign grp_fu_2472_p0 = grp_fu_2472_p00;

assign grp_fu_2472_p00 = select_ln14_6_reg_2825_pp0_iter9_reg;

assign grp_fu_2472_p1 = 21'd2097126;

assign grp_fu_2472_p2 = {{tmp_42_fu_1961_p4}, {8'd0}};

assign grp_fu_2481_p0 = grp_fu_2481_p00;

assign grp_fu_2481_p00 = select_ln14_7_reg_2792_pp0_iter10_reg;

assign grp_fu_2481_p1 = 23'd206;

assign grp_fu_2481_p2 = {{tmp_43_fu_2053_p4}, {8'd0}};

assign icmp_ln14_1_fu_1205_p2 = (($signed(sum_25_fu_1199_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_2_fu_1235_p2 = (($signed(sum_26_fu_1229_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_3_fu_966_p2 = (($signed(sum_27_fu_960_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_4_fu_1277_p2 = (($signed(sum_28_fu_1271_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_5_fu_1293_p2 = (($signed(sum_29_fu_1283_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_6_fu_1331_p2 = (($signed(sum_30_fu_1325_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_7_fu_1347_p2 = (($signed(sum_31_fu_1337_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_1175_p2 = (($signed(sum_24_fu_1163_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln27_1_fu_2095_p2 = (($signed(sum_34_fu_2079_p2) > $signed(max_val_2_fu_2089_p3)) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_2085_p2 = (($signed(sum_33_reg_3001) > $signed(sum_32_reg_2994)) ? 1'b1 : 1'b0);

assign max_val_2_fu_2089_p3 = ((icmp_ln27_fu_2085_p2[0:0] == 1'b1) ? sum_33_reg_3001 : sum_32_reg_2994);

assign max_val_4_fu_2101_p3 = ((icmp_ln27_1_reg_3024[0:0] == 1'b1) ? sum_34_reg_3013 : max_val_2_reg_3019);

assign mul_ln72_10_fu_379_p0 = sext_ln72_1_fu_322_p1;

assign mul_ln72_10_fu_379_p1 = 24'd178;

assign mul_ln72_14_fu_395_p0 = sext_ln72_1_fu_322_p1;

assign mul_ln72_14_fu_395_p1 = 24'd16777108;

assign mul_ln72_16_fu_411_p0 = sext_ln72_1_fu_322_p1;

assign mul_ln72_16_fu_411_p1 = 24'd16777103;

assign mul_ln72_3_fu_347_p0 = sext_ln72_1_fu_322_p1;

assign mul_ln72_3_fu_347_p1 = 24'd16777137;

assign mul_ln72_9_fu_363_p0 = sext_ln72_1_fu_322_p1;

assign mul_ln72_9_fu_363_p1 = 24'd16777093;

assign mul_ln72_fu_325_p0 = sext_ln72_1_fu_322_p1;

assign mul_ln72_fu_325_p1 = 24'd16777123;

assign mul_ln85_11_fu_1471_p0 = mul_ln85_11_fu_1471_p00;

assign mul_ln85_11_fu_1471_p00 = select_ln14_reg_2799;

assign mul_ln85_11_fu_1471_p1 = 23'd8388531;

assign mul_ln85_5_fu_1455_p0 = zext_ln85_2_fu_1430_p1;

assign mul_ln85_5_fu_1455_p1 = 24'd16777069;

assign mul_ln85_fu_1433_p0 = zext_ln85_2_fu_1430_p1;

assign mul_ln85_fu_1433_p1 = 24'd281;

assign output_0 = grp_fu_2159_p2[15:0];

assign output_1 = grp_fu_2172_p2[15:0];

assign output_2 = grp_fu_2185_p2[15:0];

assign select_ln14_1_fu_1372_p3 = ((icmp_ln14_1_reg_2743[0:0] == 1'b1) ? add_ln69_1_fu_1367_p2 : 15'd0);

assign select_ln14_2_fu_1384_p3 = ((icmp_ln14_2_reg_2753[0:0] == 1'b1) ? add_ln69_2_fu_1379_p2 : 15'd0);

assign select_ln14_3_fu_1246_p3 = ((icmp_ln14_3_reg_2693[0:0] == 1'b1) ? add_ln69_3_fu_1241_p2 : 15'd0);

assign select_ln14_4_fu_1396_p3 = ((icmp_ln14_4_reg_2770[0:0] == 1'b1) ? add_ln69_4_fu_1391_p2 : 15'd0);

assign select_ln14_5_fu_1299_p3 = ((icmp_ln14_5_fu_1293_p2[0:0] == 1'b1) ? add_ln69_5_fu_1288_p2 : 15'd0);

assign select_ln14_6_fu_1408_p3 = ((icmp_ln14_6_reg_2787[0:0] == 1'b1) ? add_ln69_6_fu_1403_p2 : 15'd0);

assign select_ln14_7_fu_1353_p3 = ((icmp_ln14_7_fu_1347_p2[0:0] == 1'b1) ? add_ln69_7_fu_1342_p2 : 15'd0);

assign select_ln14_fu_1361_p3 = ((icmp_ln14_reg_2733[0:0] == 1'b1) ? add_ln69_reg_2728 : 15'd0);

assign sext_ln34_1_fu_2109_p1 = $signed(max_val_4_fu_2101_p3);

assign sext_ln34_2_fu_2120_p1 = sum_33_reg_3001_pp0_iter14_reg;

assign sext_ln34_3_fu_2130_p1 = sum_34_reg_3013;

assign sext_ln34_fu_2106_p1 = sum_32_reg_2994_pp0_iter14_reg;

assign sext_ln42_fu_2156_p1 = $signed(sum_23_reg_3047);

assign sext_ln72_11_fu_443_p1 = input_3_read_reg_2527_pp0_iter1_reg;

assign sext_ln72_12_fu_460_p1 = $signed(shl_ln72_9_fu_453_p3);

assign sext_ln72_14_fu_720_p1 = $signed(sub_ln72_3_fu_698_p2);

assign sext_ln72_16_fu_499_p1 = $signed(shl_ln72_11_fu_492_p3);

assign sext_ln72_17_fu_510_p1 = $signed(shl_ln72_12_fu_503_p3);

assign sext_ln72_18_fu_527_p1 = $signed(sub_ln72_4_fu_514_p2);

assign sext_ln72_19_fu_754_p1 = $signed(shl_ln72_15_fu_747_p3);

assign sext_ln72_1_fu_322_p1 = input_0_read_reg_2490;

assign sext_ln72_20_fu_930_p1 = $signed(shl_ln_fu_916_p3);

assign sext_ln72_22_fu_804_p1 = shl_ln72_3_fu_621_p3;

assign sext_ln72_23_fu_831_p1 = $signed(sub_ln72_10_fu_808_p2);

assign sext_ln72_24_fu_996_p1 = $signed(shl_ln72_23_fu_989_p3);

assign sext_ln72_25_fu_1007_p1 = shl_ln72_24_fu_1000_p3;

assign sext_ln72_26_fu_1011_p1 = shl_ln72_24_fu_1000_p3;

assign sext_ln72_27_fu_1028_p1 = $signed(sub_ln72_6_fu_1015_p2);

assign sext_ln72_28_fu_575_p1 = $signed(shl_ln72_29_fu_568_p3);

assign sext_ln72_2_fu_430_p1 = input_0_read_reg_2490_pp0_iter1_reg;

assign sext_ln72_30_fu_1082_p1 = $signed(shl_ln72_31_fu_1075_p3);

assign sext_ln72_31_fu_1115_p1 = $signed(sub_ln72_9_fu_1092_p2);

assign sext_ln72_3_fu_318_p0 = input_1;

assign sext_ln72_3_fu_318_p1 = sext_ln72_3_fu_318_p0;

assign sext_ln72_4_fu_341_p1 = input_2_read_reg_2516;

assign sext_ln72_5_fu_607_p1 = input_2_read_reg_2516_pp0_iter2_reg;

assign sext_ln72_6_fu_344_p1 = input_2_read_reg_2516;

assign sext_ln72_7_fu_617_p1 = $signed(shl_ln72_2_fu_610_p3);

assign sext_ln72_8_fu_628_p1 = shl_ln72_3_fu_621_p3;

assign sext_ln72_9_fu_655_p1 = $signed(sub_ln72_fu_632_p2);

assign sext_ln72_fu_427_p1 = input_0_read_reg_2490_pp0_iter1_reg;

assign sext_ln85_1_fu_1651_p1 = $signed(sub_ln85_2_fu_1628_p2);

assign sext_ln85_3_fu_1730_p1 = $signed(sub_ln85_3_fu_1707_p2);

assign sext_ln85_4_fu_2027_p1 = $signed(sub_ln85_4_fu_2004_p2);

assign sext_ln85_5_fu_1574_p1 = $signed(tmp_37_fu_1567_p3);

assign sext_ln85_6_fu_1578_p1 = $signed(sub_ln85_fu_1561_p2);

assign sext_ln85_fu_1517_p1 = $signed(sub_ln85_1_fu_1504_p2);

assign shl_ln1_fu_1493_p3 = {{select_ln14_1_reg_2805_pp0_iter7_reg}, {3'd0}};

assign shl_ln72_11_fu_492_p3 = {{input_1_read_reg_2499_pp0_iter1_reg}, {5'd0}};

assign shl_ln72_12_fu_503_p3 = {{input_1_read_reg_2499_pp0_iter1_reg}, {3'd0}};

assign shl_ln72_13_fu_520_p3 = {{tmp_9_reg_2560}, {8'd0}};

assign shl_ln72_14_fu_740_p3 = {{input_2_read_reg_2516_pp0_iter2_reg}, {8'd0}};

assign shl_ln72_15_fu_747_p3 = {{input_2_read_reg_2516_pp0_iter2_reg}, {1'd0}};

assign shl_ln72_16_fu_764_p3 = {{tmp_s_reg_2608}, {8'd0}};

assign shl_ln72_17_fu_923_p3 = {{tmp_10_reg_2648}, {8'd0}};

assign shl_ln72_22_fu_823_p3 = {{tmp_15_fu_814_p4}, {8'd0}};

assign shl_ln72_23_fu_989_p3 = {{input_3_read_reg_2527_pp0_iter3_reg}, {6'd0}};

assign shl_ln72_24_fu_1000_p3 = {{input_3_read_reg_2527_pp0_iter3_reg}, {1'd0}};

assign shl_ln72_25_fu_1021_p3 = {{tmp_16_reg_2658}, {8'd0}};

assign shl_ln72_29_fu_568_p3 = {{input_0_read_reg_2490_pp0_iter1_reg}, {6'd0}};

assign shl_ln72_2_fu_610_p3 = {{input_2_read_reg_2516_pp0_iter2_reg}, {5'd0}};

assign shl_ln72_31_fu_1075_p3 = {{input_3_read_reg_2527_pp0_iter3_reg}, {3'd0}};

assign shl_ln72_32_fu_1107_p3 = {{tmp_22_fu_1098_p4}, {8'd0}};

assign shl_ln72_3_fu_621_p3 = {{input_2_read_reg_2516_pp0_iter2_reg}, {3'd0}};

assign shl_ln72_4_fu_647_p3 = {{tmp_1_fu_638_p4}, {8'd0}};

assign shl_ln72_9_fu_453_p3 = {{input_0_read_reg_2490_pp0_iter1_reg}, {5'd0}};

assign shl_ln72_s_fu_712_p3 = {{tmp_7_fu_703_p4}, {8'd0}};

assign shl_ln85_12_fu_1685_p3 = {{select_ln14_2_reg_2812_pp0_iter8_reg}, {3'd0}};

assign shl_ln85_13_fu_1696_p3 = {{select_ln14_2_reg_2812_pp0_iter8_reg}, {1'd0}};

assign shl_ln85_14_fu_1722_p3 = {{tmp_31_fu_1713_p4}, {8'd0}};

assign shl_ln85_19_fu_1993_p3 = {{select_ln14_7_reg_2792_pp0_iter12_reg}, {1'd0}};

assign shl_ln85_1_fu_1510_p3 = {{tmp_23_reg_2848}, {8'd0}};

assign shl_ln85_20_fu_2019_p3 = {{tmp_36_fu_2010_p4}, {8'd0}};

assign shl_ln85_3_fu_1606_p3 = {{select_ln14_3_reg_2758_pp0_iter8_reg}, {7'd0}};

assign shl_ln85_4_fu_1617_p3 = {{select_ln14_3_reg_2758_pp0_iter8_reg}, {4'd0}};

assign shl_ln85_5_fu_1643_p3 = {{tmp_25_fu_1634_p4}, {8'd0}};

assign shl_ln85_8_fu_1835_p3 = {{select_ln14_6_reg_2825_pp0_iter10_reg}, {4'd0}};

assign shl_ln85_9_fu_1846_p3 = {{select_ln14_6_reg_2825_pp0_iter10_reg}, {2'd0}};

assign shl_ln85_s_fu_1872_p3 = {{tmp_28_fu_1863_p4}, {8'd0}};

assign shl_ln_fu_916_p3 = {{input_3_read_reg_2527_pp0_iter3_reg}, {2'd0}};

assign sub_ln72_10_fu_808_p2 = ($signed(sext_ln72_5_fu_607_p1) - $signed(sext_ln72_22_fu_804_p1));

assign sub_ln72_1_fu_464_p2 = ($signed(sext_ln72_12_fu_460_p1) - $signed(sext_ln72_2_fu_430_p1));

assign sub_ln72_2_fu_692_p2 = ($signed(22'd0) - $signed(sext_ln72_7_fu_617_p1));

assign sub_ln72_3_fu_698_p2 = ($signed(sub_ln72_2_fu_692_p2) - $signed(sext_ln72_6_reg_2549_pp0_iter2_reg));

assign sub_ln72_4_fu_514_p2 = ($signed(sext_ln72_17_fu_510_p1) - $signed(sext_ln72_16_fu_499_p1));

assign sub_ln72_5_fu_758_p2 = ($signed(sext_ln72_19_fu_754_p1) - $signed(shl_ln72_14_fu_740_p3));

assign sub_ln72_6_fu_1015_p2 = ($signed(sext_ln72_26_fu_1011_p1) - $signed(sext_ln72_24_fu_996_p1));

assign sub_ln72_7_fu_579_p2 = ($signed(sext_ln72_28_fu_575_p1) - $signed(sext_ln72_fu_427_p1));

assign sub_ln72_8_fu_1086_p2 = ($signed(20'd0) - $signed(sext_ln72_30_fu_1082_p1));

assign sub_ln72_9_fu_1092_p2 = ($signed(sub_ln72_8_fu_1086_p2) - $signed(sext_ln72_25_fu_1007_p1));

assign sub_ln72_fu_632_p2 = ($signed(sext_ln72_7_fu_617_p1) - $signed(sext_ln72_8_fu_628_p1));

assign sub_ln85_1_fu_1504_p2 = (zext_ln85_6_fu_1500_p1 - zext_ln85_5_fu_1490_p1);

assign sub_ln85_2_fu_1628_p2 = (zext_ln85_10_fu_1613_p1 - zext_ln85_11_fu_1624_p1);

assign sub_ln85_3_fu_1707_p2 = (zext_ln85_26_fu_1692_p1 - zext_ln85_27_fu_1703_p1);

assign sub_ln85_4_fu_2004_p2 = (17'd0 - zext_ln85_31_fu_2000_p1);

assign sub_ln85_fu_1561_p2 = (16'd0 - zext_ln85_3_fu_1487_p1);

assign sum_12_fu_1307_p1 = grp_fu_2345_p3;

assign sum_12_fu_1307_p4 = {{sum_12_fu_1307_p1[23:8]}};

assign sum_16_fu_1978_p1 = grp_fu_2454_p3;

assign sum_16_fu_1978_p4 = {{sum_16_fu_1978_p1[23:8]}};

assign sum_18_fu_2037_p4 = {{add_ln85_13_fu_2031_p2[23:8]}};

assign sum_20_fu_2070_p4 = {{grp_fu_2481_p3[23:8]}};

assign sum_23_fu_2144_p2 = (add_ln35_fu_2140_p2 + trunc_ln_reg_3035);

assign sum_24_fu_1163_p2 = (sum_fu_1145_p4 + 16'd31);

assign sum_25_fu_1199_p2 = (sum_2_fu_1181_p4 + 16'd19);

assign sum_26_fu_1229_p2 = (sum_4_fu_1211_p4 + 16'd6);

assign sum_27_fu_960_p2 = (sum_6_fu_940_p4 + 16'd51);

assign sum_28_fu_1271_p2 = (sum_8_fu_1253_p4 + 16'd118);

assign sum_29_fu_1283_p2 = (sum_10_reg_2703 + 16'd60);

assign sum_2_fu_1181_p1 = grp_fu_2315_p3;

assign sum_2_fu_1181_p4 = {{sum_2_fu_1181_p1[23:8]}};

assign sum_30_fu_1325_p2 = (sum_12_fu_1307_p4 + 16'd19);

assign sum_31_fu_1337_p2 = (sum_14_reg_2718 + 16'd81);

assign sum_32_fu_1987_p2 = ($signed(sum_16_fu_1978_p4) + $signed(16'd65506));

assign sum_33_fu_2047_p2 = (sum_18_fu_2037_p4 + 16'd7);

assign sum_34_fu_2079_p2 = (sum_20_fu_2070_p4 + 16'd11);

assign sum_4_fu_1211_p4 = {{grp_fu_2325_p3[23:8]}};

assign sum_6_fu_940_p4 = {{add_ln72_11_fu_934_p2[23:8]}};

assign sum_8_fu_1253_p1 = grp_fu_2335_p3;

assign sum_8_fu_1253_p4 = {{sum_8_fu_1253_p1[23:8]}};

assign sum_fu_1145_p1 = grp_fu_2305_p3;

assign sum_fu_1145_p4 = {{sum_fu_1145_p1[23:8]}};

assign tmp_12_fu_787_p1 = grp_fu_2233_p3;

assign tmp_12_fu_787_p4 = {{tmp_12_fu_787_p1[23:8]}};

assign tmp_13_fu_972_p4 = {{grp_fu_2278_p3[23:8]}};

assign tmp_15_fu_814_p1 = grp_fu_2242_p3;

assign tmp_15_fu_814_p4 = {{tmp_15_fu_814_p1[23:8]}};

assign tmp_18_fu_851_p1 = grp_fu_2251_p3;

assign tmp_18_fu_851_p4 = {{tmp_18_fu_851_p1[23:8]}};

assign tmp_19_fu_1058_p1 = grp_fu_2287_p3;

assign tmp_19_fu_1058_p4 = {{tmp_19_fu_1058_p1[23:8]}};

assign tmp_1_fu_638_p1 = grp_fu_2206_p3;

assign tmp_1_fu_638_p4 = {{tmp_1_fu_638_p1[23:8]}};

assign tmp_20_fu_595_p3 = {{trunc_ln72_s_fu_585_p4}, {8'd0}};

assign tmp_21_fu_868_p4 = {{grp_fu_2260_p3[23:8]}};

assign tmp_22_fu_1098_p1 = grp_fu_2296_p3;

assign tmp_22_fu_1098_p4 = {{tmp_22_fu_1098_p1[23:8]}};

assign tmp_24_fu_1527_p4 = {{add_ln85_fu_1521_p2[23:8]}};

assign tmp_25_fu_1634_p4 = {{grp_fu_2355_p3[23:8]}};

assign tmp_26_fu_1661_p4 = {{add_ln85_2_fu_1655_p2[23:8]}};

assign tmp_27_fu_1775_p1 = grp_fu_2382_p3;

assign tmp_27_fu_1775_p4 = {{tmp_27_fu_1775_p1[23:8]}};

assign tmp_28_fu_1863_p4 = {{grp_fu_2409_p3[23:8]}};

assign tmp_31_fu_1713_p4 = {{grp_fu_2364_p3[23:8]}};

assign tmp_32_fu_1740_p4 = {{add_ln85_8_fu_1734_p2[23:8]}};

assign tmp_33_fu_1801_p1 = grp_fu_2391_p3;

assign tmp_33_fu_1801_p4 = {{tmp_33_fu_1801_p1[23:8]}};

assign tmp_34_fu_1903_p4 = {{grp_fu_2418_p3[23:8]}};

assign tmp_35_fu_1944_p4 = {{grp_fu_2436_p3[23:8]}};

assign tmp_36_fu_2010_p4 = {{grp_fu_2463_p3[23:8]}};

assign tmp_37_fu_1567_p3 = {{trunc_ln3_reg_2869}, {8'd0}};

assign tmp_38_fu_1588_p4 = {{add_ln85_14_fu_1582_p2[23:8]}};

assign tmp_39_fu_1758_p1 = grp_fu_2373_p3;

assign tmp_39_fu_1758_p4 = {{tmp_39_fu_1758_p1[23:8]}};

assign tmp_40_fu_1818_p1 = grp_fu_2400_p3;

assign tmp_40_fu_1818_p4 = {{tmp_40_fu_1818_p1[23:8]}};

assign tmp_41_fu_1920_p4 = {{grp_fu_2427_p3[23:8]}};

assign tmp_42_fu_1961_p1 = grp_fu_2445_p3;

assign tmp_42_fu_1961_p4 = {{tmp_42_fu_1961_p1[23:8]}};

assign tmp_43_fu_2053_p4 = {{grp_fu_2472_p3[23:8]}};

assign tmp_4_fu_675_p1 = grp_fu_2215_p3;

assign tmp_4_fu_675_p4 = {{tmp_4_fu_675_p1[23:8]}};

assign tmp_5_fu_892_p1 = grp_fu_2269_p3;

assign tmp_5_fu_892_p4 = {{tmp_5_fu_892_p1[23:8]}};

assign tmp_6_fu_480_p3 = {{trunc_ln2_fu_470_p4}, {8'd0}};

assign tmp_7_fu_703_p4 = {{grp_fu_2224_p3[23:8]}};

assign trunc_ln1_fu_1154_p1 = grp_fu_2305_p3;

assign trunc_ln1_fu_1154_p4 = {{trunc_ln1_fu_1154_p1[22:8]}};

assign trunc_ln2_fu_470_p4 = {{sub_ln72_1_fu_464_p2[21:8]}};

assign trunc_ln72_s_fu_585_p4 = {{sub_ln72_7_fu_579_p2[22:8]}};

assign trunc_ln74_1_fu_1190_p1 = grp_fu_2315_p3;

assign trunc_ln74_4_fu_1262_p1 = grp_fu_2335_p3;

assign trunc_ln74_6_fu_1316_p1 = grp_fu_2345_p3;

assign zext_ln85_10_fu_1613_p1 = shl_ln85_3_fu_1606_p3;

assign zext_ln85_11_fu_1624_p1 = shl_ln85_4_fu_1617_p3;

assign zext_ln85_20_fu_1842_p1 = shl_ln85_8_fu_1835_p3;

assign zext_ln85_21_fu_1853_p1 = shl_ln85_9_fu_1846_p3;

assign zext_ln85_22_fu_1880_p1 = add_ln85_21_fu_1857_p2;

assign zext_ln85_26_fu_1692_p1 = shl_ln85_12_fu_1685_p3;

assign zext_ln85_27_fu_1703_p1 = shl_ln85_13_fu_1696_p3;

assign zext_ln85_2_fu_1430_p1 = select_ln14_reg_2799;

assign zext_ln85_31_fu_2000_p1 = shl_ln85_19_fu_1993_p3;

assign zext_ln85_3_fu_1487_p1 = select_ln14_1_reg_2805_pp0_iter7_reg;

assign zext_ln85_5_fu_1490_p1 = select_ln14_1_reg_2805_pp0_iter7_reg;

assign zext_ln85_6_fu_1500_p1 = shl_ln1_fu_1493_p3;

assign zext_ln85_9_fu_1449_p1 = select_ln14_3_reg_2758_pp0_iter6_reg;

endmodule //neural_network
